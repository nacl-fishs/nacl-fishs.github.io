<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>针对 hyperf 框架实现简单限流器，类似 laravel 框架 throttle 中间件功能</title>
      <link href="posts/f2f7e2ee.html"/>
      <url>posts/f2f7e2ee.html</url>
      
        <content type="html"><![CDATA[<h1 id="针对-hyperf-框架实现简单限流器，类似-laravel-框架-throttle-中间件功能"><a href="#针对-hyperf-框架实现简单限流器，类似-laravel-框架-throttle-中间件功能" class="headerlink" title="针对 hyperf 框架实现简单限流器，类似 laravel 框架 throttle 中间件功能"></a>针对 hyperf 框架实现简单限流器，类似 laravel 框架 throttle 中间件功能</h1><h2 id="限流器的概念"><a href="#限流器的概念" class="headerlink" title="限流器的概念"></a>限流器的概念</h2><p>所谓限流器，指的是限制访问指定服务/路由的流量，通俗点说，就是限制单位时间内访问指定服务/路由的次数（频率），<br>从系统架构角度看，通过限流器可以有效避免短时间内的异常高并发请求导致系统负载过高，从而达到保护系统的目的，<br>另外对于一些日常的业务功能，也可以通过限流器避免垃圾流量，比如发送短信服务、用户注册、文章发布、用户评论等，<br>通过限流可以有效阻止垃圾用户的批量注册和发布。</p><h2 id="简单实现方案"><a href="#简单实现方案" class="headerlink" title="简单实现方案"></a>简单实现方案</h2><blockquote><p>这里采用了 <code>redis</code> 作为存储器，以下内容全部基于 <code>redis</code> 而言。</p></blockquote><ul><li>通过 <code>setex</code> 指令初始化限流器的键（基于用户 ID、IP 地址等标识来源的变量进行拼接）、并设置有效期（作为一个计时器）；</li><li>首次访问某个服务/路由时，通过 <code>increment</code> 指令初始化一个新的统计键值对（作为一个计数器），后续在计时器有效期内访问同一个服务/路由，通过 <code>increment</code> 指令对键值做自增操作；</li><li>当该服务/路由的访问次数超过限流器设置的访问上限，则拒绝后续访问。</li></ul><h2 id="注意-⚠️"><a href="#注意-⚠️" class="headerlink" title="注意 ⚠️"></a>注意 ⚠️</h2><blockquote><p>以下功能实现代码中使用到了很多助手函数，建议首先参考我的 <a href="https://pudongping.github.io/posts/79e7b1a4.html">hyperf 框架常用的助手函数</a> 一文，查看具体的助手函数。<br>其中 <code>auth()</code> 方法为获取当前登录的用户信息。</p></blockquote><h2 id="Talk-is-cheap-show-me-the-code-😜"><a href="#Talk-is-cheap-show-me-the-code-😜" class="headerlink" title="Talk is cheap, show me the code. 😜"></a>Talk is cheap, show me the code. 😜</h2><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token comment">/** * 节流处理 * 用途：限制访问频率 * 做法：限制单位时间内访问指定服务/路由的次数（频率） */</span><span class="token keyword">declare</span><span class="token punctuation">(</span>strict_types<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">namespace</span> <span class="token package">App<span class="token punctuation">\</span>Helper</span><span class="token punctuation">;</span><span class="token keyword">use</span> <span class="token package">Carbon<span class="token punctuation">\</span>Carbon</span><span class="token punctuation">;</span><span class="token keyword">use</span> <span class="token package">Psr<span class="token punctuation">\</span>Http<span class="token punctuation">\</span>Message<span class="token punctuation">\</span>ResponseInterface</span><span class="token punctuation">;</span><span class="token keyword">use</span> <span class="token package">Hyperf<span class="token punctuation">\</span>Utils<span class="token punctuation">\</span>Context</span><span class="token punctuation">;</span><span class="token keyword">use</span> <span class="token package">App<span class="token punctuation">\</span>Exception<span class="token punctuation">\</span>ApiException</span><span class="token punctuation">;</span><span class="token keyword">use</span> <span class="token package">App<span class="token punctuation">\</span>Constants<span class="token punctuation">\</span>ErrorCode</span><span class="token punctuation">;</span><span class="token keyword">class</span> <span class="token class-name">ThrottleRequestsHelper</span><span class="token punctuation">{</span>    <span class="token comment">/**     * 用于做计时器的缓存key后缀     *     * @var string     */</span>    <span class="token keyword">protected</span> <span class="token variable">$keySuffix</span> <span class="token operator">=</span> <span class="token string single-quoted-string">':timer'</span><span class="token punctuation">;</span>    <span class="token comment">/**     * 处理节流     *     * @param int $maxAttempts  在指定时间内允许的最大请求次数     * @param int $decaySeconds  单位时间（s）     * @param string $prefix  计数器缓存key前缀     */</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">handle</span><span class="token punctuation">(</span><span class="token keyword type-hint">int</span> <span class="token variable">$maxAttempts</span> <span class="token operator">=</span> <span class="token number">60</span><span class="token punctuation">,</span> <span class="token keyword type-hint">int</span> <span class="token variable">$decaySeconds</span> <span class="token operator">=</span> <span class="token number">60</span><span class="token punctuation">,</span> <span class="token keyword type-hint">string</span> <span class="token variable">$prefix</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'dfo:throttle'</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token variable">$key</span> <span class="token operator">=</span> <span class="token variable">$prefix</span> <span class="token operator">.</span> <span class="token string single-quoted-string">':'</span> <span class="token operator">.</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">resolveRequestSignature</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 计数器的缓存key</span>        <span class="token comment">// 单位时间内已经超过了访问次数时</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">tooManyAttempts</span><span class="token punctuation">(</span><span class="token variable">$key</span><span class="token punctuation">,</span> <span class="token variable">$maxAttempts</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">throw</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">buildException</span><span class="token punctuation">(</span><span class="token variable">$key</span><span class="token punctuation">,</span> <span class="token variable">$maxAttempts</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">hit</span><span class="token punctuation">(</span><span class="token variable">$key</span><span class="token punctuation">,</span> <span class="token variable">$decaySeconds</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">setHeaders</span><span class="token punctuation">(</span><span class="token variable">$key</span><span class="token punctuation">,</span> <span class="token variable">$maxAttempts</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment">/**     * 生成缓存 key     *     * @return string     */</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">resolveRequestSignature</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token variable">$str</span> <span class="token operator">=</span> <span class="token function">request</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">url</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">.</span> <span class="token string single-quoted-string">'|'</span> <span class="token operator">.</span> <span class="token function">getClientIp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$user</span> <span class="token operator">=</span> <span class="token function">auth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token variable">$str</span> <span class="token operator">.=</span> <span class="token string single-quoted-string">'|'</span> <span class="token operator">.</span> <span class="token punctuation">(</span><span class="token keyword type-casting">string</span><span class="token punctuation">)</span><span class="token variable">$user</span><span class="token operator">-&gt;</span><span class="token property">user_id</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> <span class="token function">sha1</span><span class="token punctuation">(</span><span class="token variable">$str</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment">/**     * 在指定时间内增加指定键的计数器     *     * @param string $key  计数器的缓存key     * @param int $decaySeconds  指定时间（S）     * @return int  计数器具体增加到多少值     */</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">hit</span><span class="token punctuation">(</span><span class="token keyword type-hint">string</span> <span class="token variable">$key</span><span class="token punctuation">,</span> <span class="token keyword type-hint">int</span> <span class="token variable">$decaySeconds</span> <span class="token operator">=</span> <span class="token number">60</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token comment">// 计时器的有效期时间戳</span>        <span class="token variable">$expirationTime</span> <span class="token operator">=</span> <span class="token class-name static-context">Carbon</span><span class="token operator">::</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">addRealSeconds</span><span class="token punctuation">(</span><span class="token variable">$decaySeconds</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">getTimestamp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 计时器</span>        <span class="token function">redis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">setex</span><span class="token punctuation">(</span><span class="token variable">$key</span> <span class="token operator">.</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">keySuffix</span><span class="token punctuation">,</span> <span class="token variable">$decaySeconds</span><span class="token punctuation">,</span> <span class="token variable">$expirationTime</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 计数器</span>        <span class="token variable">$numbers</span> <span class="token operator">=</span> <span class="token function">redis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">incr</span><span class="token punctuation">(</span><span class="token variable">$key</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 返回增加到多少的具体数字</span>        <span class="token keyword">return</span> <span class="token variable">$numbers</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment">/**     * 判断访问次数是否已经达到了临界值     *     * @param string $key  计数器的缓存key     * @param int $maxAttempts  在指定时间内允许的最大请求次数     * @return bool     */</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">tooManyAttempts</span><span class="token punctuation">(</span><span class="token keyword type-hint">string</span> <span class="token variable">$key</span><span class="token punctuation">,</span> <span class="token keyword type-hint">int</span> <span class="token variable">$maxAttempts</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token comment">// 获取计数器的值，如果计数器不存在，则初始化计数器的值为 0</span>        <span class="token comment">// 获取一个不存在的键时，会直接返回 false</span>        <span class="token variable">$counterNumber</span> <span class="token operator">=</span> <span class="token function">redis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token variable">$key</span><span class="token punctuation">)</span> <span class="token operator">?</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token comment">// 判断计时器是否存在，如果计时器不存在，则对应的计数器没有存在的意义（存在过多的计数器会占用 redis 空间）</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">redis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">exists</span><span class="token punctuation">(</span><span class="token variable">$key</span> <span class="token operator">.</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">keySuffix</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token comment">// 存在缓存key时返回 int =&gt; 1，不存在时返回 int =&gt; 0</span>            <span class="token comment">// 有该键名且删除成功返回 int =&gt; 1，无该键名时返回 int =&gt; 0</span>            <span class="token function">redis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">del</span><span class="token punctuation">(</span><span class="token variable">$key</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 删除计数器缓存，防止计时器失效后，下一次用户访问时不是从 1 开始计数</span>        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$counterNumber</span> <span class="token operator">&gt;=</span> <span class="token variable">$maxAttempts</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token comment">// 判断计数器在单位时间内是否达到了临界值</span>                <span class="token keyword">return</span> <span class="token constant boolean">true</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> <span class="token constant boolean">false</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment">/**     * 超过访问次数限制时，构建异常信息     *     * @param string $key  计数器的缓存key     * @param int $maxAttempts  在指定时间内允许的最大请求次数     * @return ApiException     */</span>    <span class="token keyword">protected</span> <span class="token keyword">function</span> <span class="token function">buildException</span><span class="token punctuation">(</span><span class="token keyword type-hint">string</span> <span class="token variable">$key</span><span class="token punctuation">,</span> <span class="token keyword type-hint">int</span> <span class="token variable">$maxAttempts</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token comment">// 距离允许下一次请求还有多少秒</span>        <span class="token variable">$retryAfter</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">getTimeUntilNextRetry</span><span class="token punctuation">(</span><span class="token variable">$key</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">setHeaders</span><span class="token punctuation">(</span><span class="token variable">$key</span><span class="token punctuation">,</span> <span class="token variable">$maxAttempts</span><span class="token punctuation">,</span> <span class="token variable">$retryAfter</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 429 Too Many Requests</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ApiException</span><span class="token punctuation">(</span><span class="token class-name static-context">ErrorCode</span><span class="token operator">::</span><span class="token constant">REQUEST_FREQUENTLY</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment">/**     * 设置返回头数据     *     * @param string $key  计数器的缓存key     * @param int $maxAttempts  在指定时间内允许的最大请求次数     * @param int|null $retryAfter  距离下次重试请求需要等待的时间（s）     */</span>    <span class="token keyword">protected</span> <span class="token keyword">function</span> <span class="token function">setHeaders</span><span class="token punctuation">(</span><span class="token keyword type-hint">string</span> <span class="token variable">$key</span><span class="token punctuation">,</span> <span class="token keyword type-hint">int</span> <span class="token variable">$maxAttempts</span><span class="token punctuation">,</span> <span class="token operator">?</span><span class="token keyword type-hint">int</span> <span class="token variable">$retryAfter</span> <span class="token operator">=</span> <span class="token constant">null</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token comment">// 设置返回头数据</span>        <span class="token variable">$headers</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">getHeaders</span><span class="token punctuation">(</span>            <span class="token variable">$maxAttempts</span><span class="token punctuation">,</span>            <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">calculateRemainingAttempts</span><span class="token punctuation">(</span><span class="token variable">$key</span><span class="token punctuation">,</span> <span class="token variable">$maxAttempts</span><span class="token punctuation">,</span> <span class="token variable">$retryAfter</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  <span class="token comment">// 计算剩余访问次数</span>            <span class="token variable">$retryAfter</span>        <span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 添加返回头数据到请求头中</span>        <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">addHeaders</span><span class="token punctuation">(</span><span class="token variable">$headers</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment">/**     * 获取返回头数据     *     * @param int $maxAttempts  在指定时间内允许的最大请求次数     * @param int $remainingAttempts  在指定时间段内剩下的请求次数     * @param int|null $retryAfter  距离下次重试请求需要等待的时间（s）     * @return int[]     */</span>    <span class="token keyword">protected</span> <span class="token keyword">function</span> <span class="token function">getHeaders</span><span class="token punctuation">(</span><span class="token keyword type-hint">int</span> <span class="token variable">$maxAttempts</span><span class="token punctuation">,</span> <span class="token keyword type-hint">int</span> <span class="token variable">$remainingAttempts</span><span class="token punctuation">,</span> <span class="token operator">?</span><span class="token keyword type-hint">int</span> <span class="token variable">$retryAfter</span> <span class="token operator">=</span> <span class="token constant">null</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token variable">$headers</span> <span class="token operator">=</span> <span class="token punctuation">[</span>            <span class="token string single-quoted-string">'X-RateLimit-Limit'</span> <span class="token operator">=&gt;</span> <span class="token variable">$maxAttempts</span><span class="token punctuation">,</span>  <span class="token comment">// 在指定时间内允许的最大请求次数</span>            <span class="token string single-quoted-string">'X-RateLimit-Remaining'</span> <span class="token operator">=&gt;</span> <span class="token variable">$remainingAttempts</span><span class="token punctuation">,</span>  <span class="token comment">// 在指定时间段内剩下的请求次数</span>        <span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span> <span class="token function">is_null</span><span class="token punctuation">(</span><span class="token variable">$retryAfter</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token comment">// 只有当用户访问频次超过了最大频次之后才会返回以下两个返回头字段</span>            <span class="token variable">$headers</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'Retry-After'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token variable">$retryAfter</span><span class="token punctuation">;</span>  <span class="token comment">// 距离下次重试请求需要等待的时间（s）</span>            <span class="token variable">$headers</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'X-RateLimit-Reset'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token class-name static-context">Carbon</span><span class="token operator">::</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">addRealSeconds</span><span class="token punctuation">(</span><span class="token variable">$retryAfter</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">getTimestamp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 距离下次重试请求需要等待的时间戳（s）</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> <span class="token variable">$headers</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment">/**     * 添加请求头数据     *     * @param array $headers     */</span>    <span class="token keyword">protected</span> <span class="token keyword">function</span> <span class="token function">addHeaders</span><span class="token punctuation">(</span><span class="token keyword type-hint">array</span> <span class="token variable">$headers</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token variable">$response</span> <span class="token operator">=</span> <span class="token class-name static-context">Context</span><span class="token operator">::</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token class-name static-context">ResponseInterface</span><span class="token operator">::</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$headers</span> <span class="token keyword">as</span> <span class="token variable">$key</span> <span class="token operator">=&gt;</span> <span class="token variable">$header</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token variable">$response</span> <span class="token operator">=</span> <span class="token variable">$response</span><span class="token operator">-&gt;</span><span class="token function">withHeader</span><span class="token punctuation">(</span><span class="token variable">$key</span><span class="token punctuation">,</span> <span class="token variable">$header</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token class-name static-context">Context</span><span class="token operator">::</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token class-name static-context">ResponseInterface</span><span class="token operator">::</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token variable">$response</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment">/**     * 计算距离允许下一次请求还有多少秒     *     * @param string $key     * @return false|int|mixed|string     */</span>    <span class="token keyword">protected</span> <span class="token keyword">function</span> <span class="token function">getTimeUntilNextRetry</span><span class="token punctuation">(</span><span class="token keyword type-hint">string</span> <span class="token variable">$key</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token comment">// 在 $this-&gt;tooManyAttempts() 方法中已经判断了计时器的缓存 key 是否存在，因此在这里毋需再次累赘判断</span>        <span class="token comment">// 计时器的有效期减去当前时间戳</span>        <span class="token keyword">return</span> <span class="token function">redis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token variable">$key</span> <span class="token operator">.</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">keySuffix</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token class-name static-context">Carbon</span><span class="token operator">::</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">getTimestamp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment">/**     * 计算剩余访问次数     *     * @param string $key 计数器的缓存key     * @param int $maxAttempts  在指定时间内允许的最大请求次数     * @param int|null $retryAfter  距离下次重试请求需要等待的时间（s）     * @return false|int|mixed|string     */</span>    <span class="token keyword">protected</span> <span class="token keyword">function</span> <span class="token function">calculateRemainingAttempts</span><span class="token punctuation">(</span><span class="token keyword type-hint">string</span> <span class="token variable">$key</span><span class="token punctuation">,</span> <span class="token keyword type-hint">int</span> <span class="token variable">$maxAttempts</span><span class="token punctuation">,</span> <span class="token operator">?</span><span class="token keyword type-hint">int</span> <span class="token variable">$retryAfter</span> <span class="token operator">=</span> <span class="token constant">null</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">is_null</span><span class="token punctuation">(</span><span class="token variable">$retryAfter</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token comment">// 获取一个不存在的键时，会直接返回 false</span>            <span class="token variable">$counterNumber</span> <span class="token operator">=</span> <span class="token function">redis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token variable">$key</span><span class="token punctuation">)</span> <span class="token operator">?</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> <span class="token variable">$maxAttempts</span> <span class="token operator">-</span> <span class="token variable">$counterNumber</span><span class="token punctuation">;</span>  <span class="token comment">// 剩余访问次数</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> PHP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hyperf </tag>
            
            <tag> PHP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hyperf 框架常用的助手函数</title>
      <link href="posts/79e7b1a4.html"/>
      <url>posts/79e7b1a4.html</url>
      
        <content type="html"><![CDATA[<p>以下列出部分 hyperf 常用的助手函数</p><blockquote><p>其中要是想获取当前请求的路由所对应的控制器和方法，请直接调用 <code>get_current_action()</code> 方法</p></blockquote><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">declare</span><span class="token punctuation">(</span>strict_types<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">/** * 自定义助手函数 */</span><span class="token keyword">use</span> <span class="token package">Hyperf<span class="token punctuation">\</span>Utils<span class="token punctuation">\</span>ApplicationContext</span><span class="token punctuation">;</span><span class="token keyword">use</span> <span class="token package">Hyperf<span class="token punctuation">\</span>Redis<span class="token punctuation">\</span>Redis</span><span class="token punctuation">;</span><span class="token keyword">use</span> <span class="token package">Hyperf<span class="token punctuation">\</span>Contract<span class="token punctuation">\</span>StdoutLoggerInterface</span><span class="token punctuation">;</span><span class="token keyword">use</span> <span class="token package">Hyperf<span class="token punctuation">\</span>Logger<span class="token punctuation">\</span>LoggerFactory</span><span class="token punctuation">;</span><span class="token keyword">use</span> <span class="token package">Hyperf<span class="token punctuation">\</span>HttpServer<span class="token punctuation">\</span>Contract<span class="token punctuation">\</span>RequestInterface</span><span class="token punctuation">;</span><span class="token keyword">use</span> <span class="token package">Hyperf<span class="token punctuation">\</span>HttpServer<span class="token punctuation">\</span>Contract<span class="token punctuation">\</span>ResponseInterface</span><span class="token punctuation">;</span><span class="token keyword">use</span> <span class="token package">Hyperf<span class="token punctuation">\</span>HttpServer<span class="token punctuation">\</span>Router<span class="token punctuation">\</span>Dispatched</span><span class="token punctuation">;</span><span class="token keyword">use</span> <span class="token package">Hyperf<span class="token punctuation">\</span>Server<span class="token punctuation">\</span>ServerFactory</span><span class="token punctuation">;</span><span class="token keyword">use</span> <span class="token package">Swoole<span class="token punctuation">\</span>Websocket<span class="token punctuation">\</span>Frame</span><span class="token punctuation">;</span><span class="token keyword">use</span> <span class="token package">Swoole<span class="token punctuation">\</span>WebSocket<span class="token punctuation">\</span>Server</span> <span class="token keyword">as</span> WebSocketServer<span class="token punctuation">;</span><span class="token keyword">use</span> <span class="token package">Psr<span class="token punctuation">\</span>SimpleCache<span class="token punctuation">\</span>CacheInterface</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span> <span class="token function">function_exists</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'container'</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment">/**     * 获取容器对象     *     * @return \Psr\Container\ContainerInterface     */</span>    <span class="token keyword">function</span> <span class="token function">container</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token class-name static-context">ApplicationContext</span><span class="token operator">::</span><span class="token function">getContainer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span> <span class="token function">function_exists</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'redis'</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment">/**     *  获取 Redis 协程客户端     *     * @return Redis|mixed     */</span>    <span class="token keyword">function</span> <span class="token function">redis</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token function">container</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token class-name static-context">Redis</span><span class="token operator">::</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span> <span class="token function">function_exists</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'std_out_log'</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment">/**     * 控制台日志     *     * @return StdoutLoggerInterface|mixed     */</span>    <span class="token keyword">function</span> <span class="token function">std_out_log</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token function">container</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token class-name static-context">StdoutLoggerInterface</span><span class="token operator">::</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span> <span class="token function">function_exists</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'logger'</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment">/**     * 文件日志     *     * @return \Psr\Log\LoggerInterface     */</span>    <span class="token keyword">function</span> <span class="token function">logger</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token function">container</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token class-name static-context">LoggerFactory</span><span class="token operator">::</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">make</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span> <span class="token function">function_exists</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'request'</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment">/**     * request 实例     *     * @return RequestInterface|mixed     */</span>    <span class="token keyword">function</span> <span class="token function">request</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token function">container</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token class-name static-context">RequestInterface</span><span class="token operator">::</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span> <span class="token function">function_exists</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'response'</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment">/**     * response 实例     *     * @return ResponseInterface|mixed     */</span>    <span class="token keyword">function</span> <span class="token function">response</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token function">container</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token class-name static-context">ResponseInterface</span><span class="token operator">::</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span> <span class="token function">function_exists</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'server'</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment">/**     * 基于 swoole server 的 server 实例     *     * @return \Swoole\Coroutine\Server|\Swoole\Server     */</span>    <span class="token keyword">function</span> <span class="token function">server</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token function">container</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token class-name static-context">ServerFactory</span><span class="token operator">::</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">getServer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">getServer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span> <span class="token function">function_exists</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'frame'</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment">/**     * websocket frame 实例     *     * @return mixed|Frame     */</span>    <span class="token keyword">function</span> <span class="token function">frame</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token function">container</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token class-name static-context">Frame</span><span class="token operator">::</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span> <span class="token function">function_exists</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'websocket'</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment">/**     * websocket 实例     *     * @return mixed|WebSocketServer     */</span>    <span class="token keyword">function</span> <span class="token function">websocket</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token function">container</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token class-name static-context">WebSocketServer</span><span class="token operator">::</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span> <span class="token function">function_exists</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'cache'</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment">/**     * 简单的缓存实例     *     * @return mixed|CacheInterface     */</span>    <span class="token keyword">function</span> <span class="token function">cache</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token function">container</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token class-name static-context">CacheInterface</span><span class="token operator">::</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span> <span class="token function">function_exists</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'get_current_action'</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment">/**     * 获取当前请求的控制器和方法     *     * @return array     */</span>    <span class="token keyword">function</span> <span class="token function">get_current_action</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">:</span> <span class="token keyword return-type">array</span>    <span class="token punctuation">{</span>        <span class="token variable">$obj</span> <span class="token operator">=</span> <span class="token function">request</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">getAttribute</span><span class="token punctuation">(</span><span class="token class-name static-context">Dispatched</span><span class="token operator">::</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">property_exists</span><span class="token punctuation">(</span><span class="token variable">$obj</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'handler'</span><span class="token punctuation">)</span>            <span class="token operator">&amp;&amp;</span> <span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$obj</span><span class="token operator">-&gt;</span><span class="token property">handler</span><span class="token punctuation">)</span>            <span class="token operator">&amp;&amp;</span> <span class="token function">property_exists</span><span class="token punctuation">(</span><span class="token variable">$obj</span><span class="token operator">-&gt;</span><span class="token property">handler</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'callback'</span><span class="token punctuation">)</span>        <span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token variable">$action</span> <span class="token operator">=</span> <span class="token variable">$obj</span><span class="token operator">-&gt;</span><span class="token property">handler</span><span class="token operator">-&gt;</span><span class="token property">callback</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name class-name-fully-qualified"><span class="token punctuation">\</span>Exception</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'The route is undifined! Please check!'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token variable">$errMsg</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'The controller and method are not found! Please check!'</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">is_array</span><span class="token punctuation">(</span><span class="token variable">$action</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">list</span><span class="token punctuation">(</span><span class="token variable">$controller</span><span class="token punctuation">,</span> <span class="token variable">$method</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token variable">$action</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">elseif</span> <span class="token punctuation">(</span><span class="token function">is_string</span><span class="token punctuation">(</span><span class="token variable">$action</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">strstr</span><span class="token punctuation">(</span><span class="token variable">$action</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'::'</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">list</span><span class="token punctuation">(</span><span class="token variable">$controller</span><span class="token punctuation">,</span> <span class="token variable">$method</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token function">explode</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'::'</span><span class="token punctuation">,</span> <span class="token variable">$action</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span> <span class="token keyword">elseif</span> <span class="token punctuation">(</span><span class="token function">strstr</span><span class="token punctuation">(</span><span class="token variable">$action</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'@'</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">list</span><span class="token punctuation">(</span><span class="token variable">$controller</span><span class="token punctuation">,</span> <span class="token variable">$method</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token function">explode</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'@'</span><span class="token punctuation">,</span> <span class="token variable">$action</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                <span class="token keyword">list</span><span class="token punctuation">(</span><span class="token variable">$controller</span><span class="token punctuation">,</span> <span class="token variable">$method</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token constant boolean">false</span><span class="token punctuation">,</span> <span class="token constant boolean">false</span><span class="token punctuation">]</span><span class="token punctuation">;</span>                <span class="token function">logger</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token variable">$errMsg</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token function">std_out_log</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token variable">$errMsg</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>            <span class="token keyword">list</span><span class="token punctuation">(</span><span class="token variable">$controller</span><span class="token punctuation">,</span> <span class="token variable">$method</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token constant boolean">false</span><span class="token punctuation">,</span> <span class="token constant boolean">false</span><span class="token punctuation">]</span><span class="token punctuation">;</span>            <span class="token function">logger</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token variable">$errMsg</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">std_out_log</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token variable">$errMsg</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> <span class="token function">compact</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'controller'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'method'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> PHP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hyperf </tag>
            
            <tag> PHP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用亚马逊云 AWS 配置服务器并使用 xshell 远程连接</title>
      <link href="posts/34efcb18.html"/>
      <url>posts/34efcb18.html</url>
      
        <content type="html"><![CDATA[<h1 id="使用亚马逊云-AWS-配置服务器并使用-xshell-远程连接"><a href="#使用亚马逊云-AWS-配置服务器并使用-xshell-远程连接" class="headerlink" title="使用亚马逊云 AWS 配置服务器并使用 xshell 远程连接"></a>使用亚马逊云 AWS 配置服务器并使用 xshell 远程连接</h1><h2 id="如果之前使用亚马逊云配置服务器没有配置成功，那么请按照下面的方式删除掉实例"><a href="#如果之前使用亚马逊云配置服务器没有配置成功，那么请按照下面的方式删除掉实例" class="headerlink" title="如果之前使用亚马逊云配置服务器没有配置成功，那么请按照下面的方式删除掉实例"></a>如果之前使用亚马逊云配置服务器没有配置成功，那么请按照下面的方式删除掉实例</h2><ul><li><a href="https://us-east-2.console.aws.amazon.com/ec2/home?region=us-east-2#Instances:">打开当前实例列表</a></li></ul><p><img src="/medias/loading.gif" data-original="https://upload-images.jianshu.io/upload_images/14623749-bd64bb68e37736b9.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="你自己的实例列表"></p><ul><li>终止你想要删除的实例（我看文档说的是，终止实例其实就表示删除了实例，终止实例会删除掉服务器中的文件，但是停止实例不会）</li></ul><p><img src="/medias/loading.gif" data-original="https://upload-images.jianshu.io/upload_images/14623749-fa7c851c14f1977f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="终止实例"></p><p><img src="/medias/loading.gif" data-original="https://upload-images.jianshu.io/upload_images/14623749-688dde3c0f03d746.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="终止实例会删除掉服务器中的所有文件"></p><p><img src="/medias/loading.gif" data-original="https://upload-images.jianshu.io/upload_images/14623749-6d0c8540ccaaf4e7.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="终止后的状态"></p><ul><li>如果想彻底删除掉实例，还需要删除掉 「卷」（不手动删除的话，亚马逊云也会过一段时间自动删除）</li></ul><p><img src="/medias/loading.gif" data-original="https://upload-images.jianshu.io/upload_images/14623749-16fbeb3feda581a5.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="选择卷组"></p><p><img src="/medias/loading.gif" data-original="https://upload-images.jianshu.io/upload_images/14623749-8273f1d73ddf2641.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="实例列表也会过一段时间自动删除"></p><h2 id="接下来开始配置新的服务器"><a href="#接下来开始配置新的服务器" class="headerlink" title="接下来开始配置新的服务器"></a>接下来开始配置新的服务器</h2><ul><li><p>创建一个新的实例<br><img src="/medias/loading.gif" data-original="https://upload-images.jianshu.io/upload_images/14623749-94887efe4899baba.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="直接在实例控制台上面启动一个新的实例"></p></li><li><p>配置服务器<br><img src="/medias/loading.gif" data-original="https://upload-images.jianshu.io/upload_images/14623749-a0a7f77087175125.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="按照这些步骤一步一步的来，选择你自己的自定义配置就可以了"></p></li><li><p>选择硬盘空间大小（按需选择就好，如果超过了套餐外的硬盘空间会收费，建议还是先检查自己的套餐最大硬盘空间）</p></li></ul><p><img src="/medias/loading.gif" data-original="https://upload-images.jianshu.io/upload_images/14623749-15d94915c460e4bf.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="设置硬盘空间大小"></p><ul><li>最最最重要的步骤就是，一定要选择密钥对或者直接在这里生成密钥对，并且一定要下载密钥对，因为密钥对只允许下载一次，错过了，等于你这个实例就无法登录了。亚马逊云默认关闭了账号密码连接 ssh 服务，初次连接只允许密钥对。</li></ul><p><img src="/medias/loading.gif" data-original="https://upload-images.jianshu.io/upload_images/14623749-e95c5b055cfa982b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="选择已生成的密钥对或者直接在这里生成"></p><p><img src="/medias/loading.gif" data-original="https://upload-images.jianshu.io/upload_images/14623749-b0479e4003995376.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我没有提前生成密钥对，因此我在这里直接生成一个密钥对"></p><p><img src="/medias/loading.gif" data-original="https://upload-images.jianshu.io/upload_images/14623749-7a22bfdf90b62c72.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="下载密钥对"></p><p><img src="/medias/loading.gif" data-original="https://upload-images.jianshu.io/upload_images/14623749-b4845a5e820c5f57.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="打开实例"></p><p><img src="/medias/loading.gif" data-original="https://upload-images.jianshu.io/upload_images/14623749-bc31ca359b59438a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="已经安装好了服务器"></p><h2 id="接下来讲解使用-xshell-连接亚马逊云服务器"><a href="#接下来讲解使用-xshell-连接亚马逊云服务器" class="headerlink" title="接下来讲解使用 xshell 连接亚马逊云服务器"></a>接下来讲解使用 xshell 连接亚马逊云服务器</h2><blockquote><p>建议还是先看一下文档：<a href="https://docs.aws.amazon.com/zh_cn/AWSEC2/latest/UserGuide/managing-users.html">https://docs.aws.amazon.com/zh_cn/AWSEC2/latest/UserGuide/managing-users.html</a></p></blockquote><ul><li>根据你选择的系统寻找到亚马逊云默认给你创建的账户名</li></ul><p><img src="/medias/loading.gif" data-original="https://upload-images.jianshu.io/upload_images/14623749-1bfd9833871ee335.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我选择的是 redhat 系统，因此用户名是 ec2-user 或 root"></p><ul><li>打开 xshell ，配置用户身份验证</li></ul><p><img src="/medias/loading.gif" data-original="https://upload-images.jianshu.io/upload_images/14623749-a62480d370da6f50.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="配置用户身份验证"></p><p><img src="/medias/loading.gif" data-original="https://upload-images.jianshu.io/upload_images/14623749-7823047ee33c0a5b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="导入密钥对"></p><p><img src="/medias/loading.gif" data-original="https://upload-images.jianshu.io/upload_images/14623749-d8f8286d1d98330a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="选中密钥对"></p><p><img src="/medias/loading.gif" data-original="https://upload-images.jianshu.io/upload_images/14623749-78459d37d9fa3827.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="效果如下"></p><ul><li>配置连接</li></ul><p><img src="/medias/loading.gif" data-original="https://upload-images.jianshu.io/upload_images/14623749-46b2bcf9a3277ade.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="复制共有 DNS"></p><p><img src="/medias/loading.gif" data-original="https://upload-images.jianshu.io/upload_images/14623749-3125ba8d0bec81fb.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="配置连接"></p><p><img src="/medias/loading.gif" data-original="https://upload-images.jianshu.io/upload_images/14623749-6eee19e6b21804b6.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="连接成功"></p><h2 id="亚马逊云默认关闭了-root-连接-ssh，接下来讲解如何使用-root-用户登录-ssh"><a href="#亚马逊云默认关闭了-root-连接-ssh，接下来讲解如何使用-root-用户登录-ssh" class="headerlink" title="亚马逊云默认关闭了 root 连接 ssh，接下来讲解如何使用 root 用户登录 ssh"></a>亚马逊云默认关闭了 root 连接 ssh，接下来讲解如何使用 root 用户登录 ssh</h2><ol><li>更改 root 用户密码</li></ol><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">passwd</span> root<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ol start="2"><li>切换到 root 用户</li></ol><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">su</span> - 或者<span class="token function">su</span> root<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="/medias/loading.gif" data-original="https://upload-images.jianshu.io/upload_images/14623749-31aaa46c330d2e75.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="修改 root 用户密码"></p><ol start="3"><li>修改 sshd_config 配置文件</li></ol><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">vim</span> /etc/ssh/sshd_config<span class="token comment"># 如果提示没有 vim 编辑器，则可以直接使用 vi 编辑器</span><span class="token function">vi</span> /etc/ssh/sshd_config<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="/medias/loading.gif" data-original="https://upload-images.jianshu.io/upload_images/14623749-2e587674dfadf7b9.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="编辑 sshd 服务主配置文件"></p><ol start="4"><li>开启密码验证</li></ol><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">PasswordAuthentication <span class="token function">yes</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/medias/loading.gif" data-original="https://upload-images.jianshu.io/upload_images/14623749-0cd7175dbad6da90.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="查看是否允许密码验证"></p><ol start="5"><li>设定是否允许root管理员直接登录</li></ol><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">PermitRootLogin <span class="token function">yes</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/medias/loading.gif" data-original="https://upload-images.jianshu.io/upload_images/14623749-76801d3921d2d1b3.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="查看是否允许 root 管理员直接登录"></p><ol start="6"><li>重启 sshd 服务</li></ol><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 重启 sshd 服务</span>systemctl restart sshd<span class="token comment"># 将 sshd 服务加入到开机启动项中</span>systemctl <span class="token builtin class-name">enable</span> sshd<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="7"><li>测试连接</li></ol><p><img src="/medias/loading.gif" data-original="https://upload-images.jianshu.io/upload_images/14623749-096bb85b62b21053.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="使用公网 ip 和 root 用户连接 ssh"></p><p><img src="/medias/loading.gif" data-original="https://upload-images.jianshu.io/upload_images/14623749-8bdb83fbbe69a83e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="使用 root 账号密码连接 ssh"></p><p><img src="/medias/loading.gif" data-original="https://upload-images.jianshu.io/upload_images/14623749-d29f7e82e877c3e5.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="至此，使用 root 用户连接成功"></p>]]></content>
      
      
      <categories>
          
          <category> 服务器 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> 服务器 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用 python3 写的文档格式转换小工具</title>
      <link href="posts/6cc526bb.html"/>
      <url>posts/6cc526bb.html</url>
      
        <content type="html"><![CDATA[<h1 id="document-converter-（文档格式互转工具）"><a href="#document-converter-（文档格式互转工具）" class="headerlink" title="document-converter （文档格式互转工具）"></a>document-converter （文档格式互转工具）</h1><h2 id="项目发起初衷"><a href="#项目发起初衷" class="headerlink" title="项目发起初衷"></a>项目发起初衷</h2><p>近期有朋友要我帮忙将 pdf 格式文档数据提取成 docx 格式，平时我自己要么就通过编辑器转换了，要么就通过命令行转换，但这种方式对于一些朋友来说不是很友好，故此有此项目。</p><p>目前只支持 docx 和 pdf 互转，后续有时间了，会考虑支持多种常用文档格式互转，如果你对这感兴趣，欢迎提 PR ！</p><h2 id="项目特性"><a href="#项目特性" class="headerlink" title="项目特性"></a>项目特性</h2><ul><li>使用 python3 编写的 docx、pdf 互转工具。</li><li>支持多线程。</li><li>支持跨平台（macOS、Windows、Linux）。</li><li>批量 docx 文档转 pdf 格式（效果良好）。</li><li>批量 pdf 文档转 docx 格式（尝试过多个扩展库，遗憾的是均不支持图片提取）。</li><li>后续有时间了，会考虑支持多种常用的文档格式互转。</li></ul><h2 id="效果图"><a href="#效果图" class="headerlink" title="效果图"></a>效果图</h2><p>命令行提示</p><p><img src="/medias/loading.gif" data-original="https://upload-images.jianshu.io/upload_images/14623749-155e22f797a6ee6f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="文档简介"></p><p>批量 docx 转 pdf</p><p><img src="/medias/loading.gif" data-original="https://upload-images.jianshu.io/upload_images/14623749-3df6914674c7e060.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="docx转pdf"></p><p>批量 pdf 转 docx</p><p><img src="/medias/loading.gif" data-original="https://upload-images.jianshu.io/upload_images/14623749-800ff9980abdb59a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="pdf转docx"></p><h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><ol><li>克隆源代码</li></ol><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"># GitHubgit clone https://github.com/pudongping/document-converter.git# giteegit clone https://gitee.com/pudongping/document-converter.git<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="2"><li>进入项目根目录，并安装相关依赖扩展</li></ol><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">cd document-converter &amp;&amp; sudo pip install -r requirements.txt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ol start="3"><li>使用文档格式转换</li></ol><p>举个例子来说，如果此时我想将 <code>n</code> 个 <code>.docx</code> 格式的文档转换成 <code>.pdf</code> 格式的文档，那么我需要这么操作：</p><ul><li>将这 <code>n</code> 个 <code>.docx</code> 文档复制到此项目的 <code>data/input/docxs</code> 目录（如果想转 <code>.pdf</code> 格式的文档，则需要将文档复制到 <code>data/input/pdfs</code> 目录）</li><li>在项目根目录执行 <code>python3 main.py --docx-to-pdf</code> 命令，且等待命令执行结束（你可以去泡杯咖啡，之后静静等待，一般来说会很快，因为支持多线程）</li><li>之后在 <code>data/output/pdfs</code> 目录查看已经转换好的文档。至此，完毕！</li></ul><ol start="4"><li>命令介绍</li></ol><table><thead><tr><th>命令</th><th>说明</th></tr></thead><tbody><tr><td>python3 main.py –version</td><td>显示当前应用的版本号</td></tr><tr><td>python3 main.py –help 或者 python3 main.py -h</td><td>显示帮助文档</td></tr><tr><td>python3 main.py –docx-to-pdf</td><td>执行 docx 文档转成 pdf 格式的文档</td></tr><tr><td>python3 main.py –pdf-to-docx</td><td>执行 pdf 文档转成 docx 格式的文档</td></tr></tbody></table><h2 id="项目目录介绍"><a href="#项目目录介绍" class="headerlink" title="项目目录介绍"></a>项目目录介绍</h2><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">├── LICENSE├── Pipfile├── README.md  项目介绍文档├── app  代码目录│&nbsp;&nbsp; ├── __init__.py│&nbsp;&nbsp; ├── config  配置文件目录│&nbsp;&nbsp; │&nbsp;&nbsp; ├── __init__.py│&nbsp;&nbsp; │&nbsp;&nbsp; └── app.py  配置相关│&nbsp;&nbsp; ├── converter  转换相关代码目录│&nbsp;&nbsp; │&nbsp;&nbsp; ├── __init__.py│&nbsp;&nbsp; │&nbsp;&nbsp; ├── converter_docx.py  *文档转 docx 格式相关代码│&nbsp;&nbsp; │&nbsp;&nbsp; └── converter_pdf.py   *文档转 pdf 格式相关代码│&nbsp;&nbsp; └── helper.py  助手函数├── data  数据相关│&nbsp;&nbsp; ├── input  需要转换的文档目录│&nbsp;&nbsp; │&nbsp;&nbsp; ├── docxs  如果需要将 docx 文档转换成其他格式，则默认需要将文档放入此目录下│&nbsp;&nbsp; │&nbsp;&nbsp; │&nbsp;&nbsp; ├── 文档1.docx│&nbsp;&nbsp; │&nbsp;&nbsp; │&nbsp;&nbsp; └── 文档2.docx│&nbsp;&nbsp; │&nbsp;&nbsp; └── pdfs  如果需要将 pdf 文档转换成其他格式，则默认需要将文档放入此目录下│&nbsp;&nbsp; │&nbsp;&nbsp;     ├── alex1.pdf│&nbsp;&nbsp; │&nbsp;&nbsp;     └── sample.pdf│&nbsp;&nbsp; └── output  文档转换后存放的文档目录│&nbsp;&nbsp;     ├── docxs  所有经过转换后的 docx 文档默认会放到此目录下│&nbsp;&nbsp;     │&nbsp;&nbsp; ├── alex1.pdf.docx│&nbsp;&nbsp;     │&nbsp;&nbsp; └── sample.pdf.docx│&nbsp;&nbsp;     └── pdfs  所有经过转换后的 pdf 文档默认会放到此目录下│&nbsp;&nbsp;         ├── 文档1.docx.pdf│&nbsp;&nbsp;         └── 文档2.docx.pdf├── main.py  项目入口文件├── requirements.txt  项目依赖关系清单└── runtime  项目运行相关    └── logs  日志目录        └── 202104            └── converter-2021-04-24.log  以天为单位记录的操作日志<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="License"><a href="#License" class="headerlink" title="License"></a>License</h2><p>源代码基于 <a href="https://opensource.org/licenses/MIT">MIT</a> 协议发布。</p>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python3 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ubiquitous-nodejs</title>
      <link href="posts/6b5490ac.html"/>
      <url>posts/6b5490ac.html</url>
      
        <content type="html"><![CDATA[<p align="center">    </p><h1 align="center"><a href="https://pudodngping.com">ubiquitous-nodejs</a></h1>    <p align="center">⚡ ubiquity-nodejs 是一个基于 node.js 的 web 脚手架。😘 支持模版渲染、Restful API、ORM 等特性，遵循 MVC 架构。</p><p></p><h2 id="如何部署项目？"><a href="#如何部署项目？" class="headerlink" title="如何部署项目？"></a>如何部署项目？</h2><p>仓库地址：</p><ul><li><a href="https://github.com/pudongping/ubiquitous-nodejs.git">GitHub</a></li><li><a href="https://gitee.com/pudongping/ubiquitous-nodejs.git">Gitee</a></li></ul><p>本地部署</p><ol><li>直接使用 git 拉取项目源码，并进入项目根目录</li></ol><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token function">git</span> clone https://gitee.com/pudongping/ubiquitous-nodejs.git ubiquitous <span class="token operator">&amp;&amp;</span> <span class="token builtin class-name">cd</span> ./ubiquitous<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ol start="2"><li>安装项目依赖包</li></ol><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token function">npm</span> <span class="token function">install</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ol start="3"><li>填写配置信息</li></ol><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token comment"># 复制开发环境配置文件</span><span class="token function">cp</span> ./config/development.js.example ./config/development.js<span class="token comment"># 复制生产环境配置文件</span><span class="token function">cp</span> ./config/production.js.example ./config/production.js<span class="token comment"># 复制测试环境配置文件</span><span class="token function">cp</span> ./config/test.js.example ./config/test.js<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="4"><li>导入初始数据表<blockquote><p>这里只是为了演示 restful api 的 CRUD 功能，故此创建了一个初始数据库。</p></blockquote></li></ol><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token comment"># 连接数据库</span>mysql -h <span class="token operator">&lt;</span>your-mysql-host<span class="token operator">&gt;</span> -u <span class="token operator">&lt;</span>your-mysql-account<span class="token operator">&gt;</span> -p <span class="token operator">&lt;</span>your-mysql-password<span class="token operator">&gt;</span><span class="token punctuation">;</span><span class="token comment"># 导入初始数据表</span><span class="token builtin class-name">source</span> ./database/ubiquitous.sql<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="5"><li>启动项目<blockquote><p>以下方式执行任意一条命令即可</p></blockquote></li></ol><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token comment"># 直接使用 node 执行项目入口文件的方式</span>node --use_strict app.js<span class="token comment"># 使用 npm 执行</span><span class="token comment"># 运行开发环境</span><span class="token function">npm</span> start<span class="token comment"># 或者</span><span class="token function">npm</span> run dev<span class="token comment"># 运行生产环境</span><span class="token function">npm</span> run prod<span class="token comment"># 运行测试环境</span><span class="token function">npm</span> run <span class="token builtin class-name">test</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="6"><li>搭建完毕！enjoy it! ✌️<blockquote><p>可以打开浏览器访问 <code>localhost:9500</code> 或者 <code>127.0.0.1:9500</code> 进行访问，即可看到首页欢迎语。</p></blockquote></li></ol><h2 id="关于项目目录"><a href="#关于项目目录" class="headerlink" title="关于项目目录"></a>关于项目目录</h2><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">├── LICENSE  License├── README.md  项目说明文档├── app.js  项目入口文件├── bootstrap  项目启动目录│   ├── boot.js  启动文件│   ├── db.js  数据库封装│   ├── rest.js  restful api 方法封装│   ├── static-files.js  静态文件处理方法封装│   └── templating.js  模版处理方法封装├── config  配置文件目录│   ├── development.js  开发环境配置文件│   ├── development.js.example  开发环境配置文件模版│   ├── production.js.example  生产环境配置文件模版│   └── test.js.example  测试环境配置文件模板├── constants  常量文件│   └── ErrorCode.js  api 错误码常量├── controllers  控制器目录│   ├── auth  auth 模块目录│   │   └── user_controller.js  用户控制器（这里作为演示 restful api 写的 demo）│   └── home_controller.js  首页控制器 （这里作为演示模版调用写的 demo）├── database  数据文件目录│   └── ubiquitous.sql  初始化数据库文件├── lib  工具目录│   ├── api_error.js  自定义错误异常类│   └── helper.js  助手函数├── loader.js  项目加载文件（这里定义项目全局变量）├── models  模型目录│   ├── WebSite.js  站点模型文件│   ├── auth  auth 模块模型目录│   │   └── User.js  用户模型文件│   └── model.js  自动化扫描加载所有的模型├── package-lock.json  插件包描述锁文件├── package.json  插件包描述文件├── routes  路由目录│   ├── api.js  restful api 路由目录│   └── web.js  web 路由目录├── services  服务层目录│   └── auth  auth 模块服务层目录│       └── user_service.js  用户服务层文件├── static  静态文件目录│   ├── css  样式文件目录│   │   ├── googleapis-fonts.css│   │   └── iview.css│   ├── fonts  字体文件目录│   └── js  js 文件目录│       ├── iview.min.js│       └── vue.min.js└── views  视图层文件目录    ├── base.html  视图基础文件    ├── home  home 模块视图文件目录    │   └── hello.html    └── home.html  首页视图文件<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="项目所使用依赖包"><a href="#项目所使用依赖包" class="headerlink" title="项目所使用依赖包"></a>项目所使用依赖包</h2><table><thead><tr><th>插件包</th><th>作用</th></tr></thead><tbody><tr><td><a href="https://koa.bootcss.com/">koa</a></td><td>使用 Koa2 作为 web 框架</td></tr><tr><td><a href="https://github.com/koajs/router">koa-router</a></td><td>处理 url</td></tr><tr><td><a href="https://github.com/koajs/bodyparser">koa-bodyparser</a></td><td>解析原始 request 的 body</td></tr><tr><td><a href="https://mozilla.github.io/nunjucks/cn/templating.html">nunjucks</a></td><td>模版引擎</td></tr><tr><td><a href="https://github.com/kentcdodds/cross-env#readme">cross-env</a></td><td>环境脚本的跨平台设置</td></tr><tr><td><a href="https://github.com/normalize/mz#readme">mz</a></td><td>支持 Promise 的 fs 模块</td></tr><tr><td><a href="https://github.com/broofa/mime#readme">mime</a></td><td>读取文件的 mime</td></tr><tr><td><a href="https://github.com/sidorares/node-mysql2#readme">mysql2</a></td><td>Node.js 的 mysql 驱动程序</td></tr><tr><td><a href="https://www.sequelize.com.cn/">sequelize</a></td><td>Node.js 的 ORM 框架</td></tr><tr><td><a href="http://momentjs.cn/">moment</a></td><td>日期处理</td></tr></tbody></table><h2 id="使用演示"><a href="#使用演示" class="headerlink" title="使用演示"></a>使用演示</h2><ul><li>如果需要使用模版引擎的方式，请查看 <code>controllers/home_controller.js</code> 文件。</li><li>如果需要使用 api 的方式，请查看 <code>controllers/auth/user_controller.js</code> 文件。</li></ul><h2 id="感谢支持"><a href="#感谢支持" class="headerlink" title="感谢支持"></a>感谢支持</h2><p>如果你觉得本项目对你有所帮助,请帮忙给个 <code>Star</code>。<br>如果你想贡献一份力量,欢迎提交 <code>Pull Request</code>。</p>]]></content>
      
      
      <categories>
          
          <category> 开源 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> GitHub </tag>
            
            <tag> Node.js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>weather composer 插件</title>
      <link href="posts/d2a0cef0.html"/>
      <url>posts/d2a0cef0.html</url>
      
        <content type="html"><![CDATA[<h1 align="center">Weather</h1><p align="center"><span class="github-emoji"><span>🌈</span><img src="/medias/loading.gif" data-original="https://github.githubassets.com/images/icons/emoji/unicode/1f308.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span> 基于高德开放平台的 PHP 天气信息组件。</p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">$ composer require pudongping/weather -vvv<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><p>在使用本扩展之前，你需要去 <a href="https://lbs.amap.com/dev/id/newuser">高德开放平台</a> 注册账号，然后创建应用，获取应用的 API Key。</p><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token keyword">use</span> <span class="token package">Pudongping<span class="token punctuation">\</span>Weather<span class="token punctuation">\</span>Weather</span><span class="token punctuation">;</span><span class="token variable">$key</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'xxxxxxxxxxxxxxxxxxxxxxxxxxx'</span><span class="token punctuation">;</span><span class="token variable">$weather</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Weather</span><span class="token punctuation">(</span><span class="token variable">$key</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="获取实时天气"><a href="#获取实时天气" class="headerlink" title="获取实时天气"></a>获取实时天气</h3><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token variable">$response</span> <span class="token operator">=</span> <span class="token variable">$weather</span><span class="token operator">-&gt;</span><span class="token function">getLiveWeather</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'上海'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>返回值示例：</p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">{</span>    <span class="token property">"status"</span><span class="token operator">:</span> <span class="token string">"1"</span><span class="token punctuation">,</span>    <span class="token property">"count"</span><span class="token operator">:</span> <span class="token string">"1"</span><span class="token punctuation">,</span>    <span class="token property">"info"</span><span class="token operator">:</span> <span class="token string">"OK"</span><span class="token punctuation">,</span>    <span class="token property">"infocode"</span><span class="token operator">:</span> <span class="token string">"10000"</span><span class="token punctuation">,</span>    <span class="token property">"lives"</span><span class="token operator">:</span> <span class="token punctuation">[</span>        <span class="token punctuation">{</span>            <span class="token property">"province"</span><span class="token operator">:</span> <span class="token string">"上海"</span><span class="token punctuation">,</span>            <span class="token property">"city"</span><span class="token operator">:</span> <span class="token string">"上海市"</span><span class="token punctuation">,</span>            <span class="token property">"adcode"</span><span class="token operator">:</span> <span class="token string">"310000"</span><span class="token punctuation">,</span>            <span class="token property">"weather"</span><span class="token operator">:</span> <span class="token string">"阴"</span><span class="token punctuation">,</span>            <span class="token property">"temperature"</span><span class="token operator">:</span> <span class="token string">"10"</span><span class="token punctuation">,</span>            <span class="token property">"winddirection"</span><span class="token operator">:</span> <span class="token string">"东"</span><span class="token punctuation">,</span>            <span class="token property">"windpower"</span><span class="token operator">:</span> <span class="token string">"≤3"</span><span class="token punctuation">,</span>            <span class="token property">"humidity"</span><span class="token operator">:</span> <span class="token string">"73"</span><span class="token punctuation">,</span>            <span class="token property">"reporttime"</span><span class="token operator">:</span> <span class="token string">"2021-03-17 09:31:44"</span>        <span class="token punctuation">}</span>    <span class="token punctuation">]</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="获取近期天气预报"><a href="#获取近期天气预报" class="headerlink" title="获取近期天气预报"></a>获取近期天气预报</h3><pre class="line-numbers language-none"><code class="language-none">$response = $weather-&gt;getForecastsWeather('上海');<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>返回值示例：</p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">{</span>    <span class="token property">"status"</span><span class="token operator">:</span> <span class="token string">"1"</span><span class="token punctuation">,</span>    <span class="token property">"count"</span><span class="token operator">:</span> <span class="token string">"1"</span><span class="token punctuation">,</span>    <span class="token property">"info"</span><span class="token operator">:</span> <span class="token string">"OK"</span><span class="token punctuation">,</span>    <span class="token property">"infocode"</span><span class="token operator">:</span> <span class="token string">"10000"</span><span class="token punctuation">,</span>    <span class="token property">"forecasts"</span><span class="token operator">:</span> <span class="token punctuation">[</span>        <span class="token punctuation">{</span>            <span class="token property">"city"</span><span class="token operator">:</span> <span class="token string">"上海市"</span><span class="token punctuation">,</span>            <span class="token property">"adcode"</span><span class="token operator">:</span> <span class="token string">"310000"</span><span class="token punctuation">,</span>            <span class="token property">"province"</span><span class="token operator">:</span> <span class="token string">"上海"</span><span class="token punctuation">,</span>            <span class="token property">"reporttime"</span><span class="token operator">:</span> <span class="token string">"2021-03-17 10:03:15"</span><span class="token punctuation">,</span>            <span class="token property">"casts"</span><span class="token operator">:</span> <span class="token punctuation">[</span>                <span class="token punctuation">{</span>                    <span class="token property">"date"</span><span class="token operator">:</span> <span class="token string">"2021-03-17"</span><span class="token punctuation">,</span>                    <span class="token property">"week"</span><span class="token operator">:</span> <span class="token string">"3"</span><span class="token punctuation">,</span>                    <span class="token property">"dayweather"</span><span class="token operator">:</span> <span class="token string">"小雨"</span><span class="token punctuation">,</span>                    <span class="token property">"nightweather"</span><span class="token operator">:</span> <span class="token string">"小雨"</span><span class="token punctuation">,</span>                    <span class="token property">"daytemp"</span><span class="token operator">:</span> <span class="token string">"12"</span><span class="token punctuation">,</span>                    <span class="token property">"nighttemp"</span><span class="token operator">:</span> <span class="token string">"9"</span><span class="token punctuation">,</span>                    <span class="token property">"daywind"</span><span class="token operator">:</span> <span class="token string">"东北"</span><span class="token punctuation">,</span>                    <span class="token property">"nightwind"</span><span class="token operator">:</span> <span class="token string">"东北"</span><span class="token punctuation">,</span>                    <span class="token property">"daypower"</span><span class="token operator">:</span> <span class="token string">"4"</span><span class="token punctuation">,</span>                    <span class="token property">"nightpower"</span><span class="token operator">:</span> <span class="token string">"4"</span>                <span class="token punctuation">}</span><span class="token punctuation">,</span>                <span class="token punctuation">{</span>                    <span class="token property">"date"</span><span class="token operator">:</span> <span class="token string">"2021-03-18"</span><span class="token punctuation">,</span>                    <span class="token property">"week"</span><span class="token operator">:</span> <span class="token string">"4"</span><span class="token punctuation">,</span>                    <span class="token property">"dayweather"</span><span class="token operator">:</span> <span class="token string">"小雨"</span><span class="token punctuation">,</span>                    <span class="token property">"nightweather"</span><span class="token operator">:</span> <span class="token string">"小雨"</span><span class="token punctuation">,</span>                    <span class="token property">"daytemp"</span><span class="token operator">:</span> <span class="token string">"13"</span><span class="token punctuation">,</span>                    <span class="token property">"nighttemp"</span><span class="token operator">:</span> <span class="token string">"10"</span><span class="token punctuation">,</span>                    <span class="token property">"daywind"</span><span class="token operator">:</span> <span class="token string">"东"</span><span class="token punctuation">,</span>                    <span class="token property">"nightwind"</span><span class="token operator">:</span> <span class="token string">"东"</span><span class="token punctuation">,</span>                    <span class="token property">"daypower"</span><span class="token operator">:</span> <span class="token string">"4"</span><span class="token punctuation">,</span>                    <span class="token property">"nightpower"</span><span class="token operator">:</span> <span class="token string">"4"</span>                <span class="token punctuation">}</span><span class="token punctuation">,</span>                <span class="token punctuation">{</span>                    <span class="token property">"date"</span><span class="token operator">:</span> <span class="token string">"2021-03-19"</span><span class="token punctuation">,</span>                    <span class="token property">"week"</span><span class="token operator">:</span> <span class="token string">"5"</span><span class="token punctuation">,</span>                    <span class="token property">"dayweather"</span><span class="token operator">:</span> <span class="token string">"小雨"</span><span class="token punctuation">,</span>                    <span class="token property">"nightweather"</span><span class="token operator">:</span> <span class="token string">"小雨"</span><span class="token punctuation">,</span>                    <span class="token property">"daytemp"</span><span class="token operator">:</span> <span class="token string">"14"</span><span class="token punctuation">,</span>                    <span class="token property">"nighttemp"</span><span class="token operator">:</span> <span class="token string">"9"</span><span class="token punctuation">,</span>                    <span class="token property">"daywind"</span><span class="token operator">:</span> <span class="token string">"北"</span><span class="token punctuation">,</span>                    <span class="token property">"nightwind"</span><span class="token operator">:</span> <span class="token string">"北"</span><span class="token punctuation">,</span>                    <span class="token property">"daypower"</span><span class="token operator">:</span> <span class="token string">"4"</span><span class="token punctuation">,</span>                    <span class="token property">"nightpower"</span><span class="token operator">:</span> <span class="token string">"4"</span>                <span class="token punctuation">}</span><span class="token punctuation">,</span>                <span class="token punctuation">{</span>                    <span class="token property">"date"</span><span class="token operator">:</span> <span class="token string">"2021-03-20"</span><span class="token punctuation">,</span>                    <span class="token property">"week"</span><span class="token operator">:</span> <span class="token string">"6"</span><span class="token punctuation">,</span>                    <span class="token property">"dayweather"</span><span class="token operator">:</span> <span class="token string">"阴"</span><span class="token punctuation">,</span>                    <span class="token property">"nightweather"</span><span class="token operator">:</span> <span class="token string">"阴"</span><span class="token punctuation">,</span>                    <span class="token property">"daytemp"</span><span class="token operator">:</span> <span class="token string">"15"</span><span class="token punctuation">,</span>                    <span class="token property">"nighttemp"</span><span class="token operator">:</span> <span class="token string">"8"</span><span class="token punctuation">,</span>                    <span class="token property">"daywind"</span><span class="token operator">:</span> <span class="token string">"西北"</span><span class="token punctuation">,</span>                    <span class="token property">"nightwind"</span><span class="token operator">:</span> <span class="token string">"西北"</span><span class="token punctuation">,</span>                    <span class="token property">"daypower"</span><span class="token operator">:</span> <span class="token string">"4"</span><span class="token punctuation">,</span>                    <span class="token property">"nightpower"</span><span class="token operator">:</span> <span class="token string">"4"</span>                <span class="token punctuation">}</span>            <span class="token punctuation">]</span>        <span class="token punctuation">}</span>    <span class="token punctuation">]</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="获取-XML-格式返回值"><a href="#获取-XML-格式返回值" class="headerlink" title="获取 XML 格式返回值"></a>获取 XML 格式返回值</h3><p>以上两个方法第二个参数为返回值类型，可选 <code>json</code> 与 <code>xml</code>，默认 <code>json</code>：</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token variable">$response</span> <span class="token operator">=</span> <span class="token variable">$weather</span><span class="token operator">-&gt;</span><span class="token function">getLiveWeather</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'上海'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'xml'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>返回值示例：</p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>response</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>status</span><span class="token punctuation">&gt;</span></span>1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>status</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>count</span><span class="token punctuation">&gt;</span></span>1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>count</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>info</span><span class="token punctuation">&gt;</span></span>OK<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>info</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>infocode</span><span class="token punctuation">&gt;</span></span>10000<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>infocode</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>lives</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>list<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>live</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>province</span><span class="token punctuation">&gt;</span></span>上海<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>province</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>city</span><span class="token punctuation">&gt;</span></span>上海市<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>city</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>adcode</span><span class="token punctuation">&gt;</span></span>310000<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>adcode</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>weather</span><span class="token punctuation">&gt;</span></span>小雨<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>weather</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>temperature</span><span class="token punctuation">&gt;</span></span>10<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>temperature</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>winddirection</span><span class="token punctuation">&gt;</span></span>东北<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>winddirection</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>windpower</span><span class="token punctuation">&gt;</span></span>≤3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>windpower</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>humidity</span><span class="token punctuation">&gt;</span></span>73<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>humidity</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>reporttime</span><span class="token punctuation">&gt;</span></span>2021-03-17 10:03:15<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>reporttime</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>live</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>lives</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>response</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="参数说明"><a href="#参数说明" class="headerlink" title="参数说明"></a>参数说明</h3><pre class="line-numbers language-none"><code class="language-none">array | string   getLiveWeather(string $city, string $format = 'json')array | string   getForecastsWeather(string $city, string $format = 'json')<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><blockquote><ul><li><code>$city</code> - 城市名/<a href="https://lbs.amap.com/api/webservice/guide/api/district">高德地址位置 adcode</a>，比如：“上海” 或者（adcode：310000）；</li><li><code>$format</code>  - 输出的数据格式，默认为 json 格式，当 format 设置为 “<code>xml</code>” 时，输出的为 XML 格式的数据。</li></ul></blockquote><h3 id="在-Laravel-中使用"><a href="#在-Laravel-中使用" class="headerlink" title="在 Laravel 中使用"></a>在 Laravel 中使用</h3><blockquote><p>laravel version &gt;= 8.x 或者直接使用以上通用方法，以上方法适用于任意 php 框架</p></blockquote><p>执行 <code>artisan</code> 命令，发布配置文件</p><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">php artisan vendor:publish --provider="Pudongping\Weather\ServiceProvider"<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>在 Laravel 中使用也是同样的安装方式，配置写在 <code>config/weather.php</code> 中，或者自己在 <code>config</code> 目录下新建 <code>weather.php</code> 文件，填写以下内容亦可。</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">return</span> <span class="token punctuation">[</span>    <span class="token string single-quoted-string">'key'</span> <span class="token operator">=&gt;</span> <span class="token function">env</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'WEATHER_API_KEY'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>然后在 <code>.env</code> 中配置 <code>WEATHER_API_KEY</code> ：</p><pre class="line-numbers language-env" data-language="env"><code class="language-env">WEATHER_API_KEY=xxxxxxxxxxxxxxxxxxxxx<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>可以用两种方式来获取 <code>Pudongping\Weather\Weather</code> 实例：</p><h4 id="方法参数注入"><a href="#方法参数注入" class="headerlink" title="方法参数注入"></a>方法参数注入</h4><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">showWeather</span><span class="token punctuation">(</span><span class="token class-name type-declaration">Weather</span> <span class="token variable">$weather</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token variable">$response</span> <span class="token operator">=</span> <span class="token variable">$weather</span><span class="token operator">-&gt;</span><span class="token function">getLiveWeather</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'上海'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 或者直接使用城市的 adcode 传参</span>    <span class="token comment">// $response = $weather-&gt;getLiveWeather('310000');</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="服务名访问"><a href="#服务名访问" class="headerlink" title="服务名访问"></a>服务名访问</h4><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">showWeather</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token variable">$response</span> <span class="token operator">=</span> <span class="token function">app</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'weather'</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">getLiveWeather</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'上海'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 或者直接使用城市的 adcode 传参</span>    <span class="token comment">// $response = app('weather')-&gt;getLiveWeather('310000');</span>    <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul><li><a href="https://lbs.amap.com/api/webservice/guide/api/weatherinfo/">高德开放平台天气接口</a></li></ul><h2 id="License"><a href="#License" class="headerlink" title="License"></a>License</h2><p>MIT</p>]]></content>
      
      
      <categories>
          
          <category> 开源 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> GitHub </tag>
            
            <tag> PHP </tag>
            
            <tag> Laravel </tag>
            
            <tag> Composer </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>larablog 博客开源</title>
      <link href="posts/b6f184c0.html"/>
      <url>posts/b6f184c0.html</url>
      
        <content type="html"><![CDATA[<h1 id="基于-Laravel6-x-构建的博客应用，支持-Markdown，支持图片拖拽上传，基于-RBAC-权限管理系统"><a href="#基于-Laravel6-x-构建的博客应用，支持-Markdown，支持图片拖拽上传，基于-RBAC-权限管理系统" class="headerlink" title="基于 Laravel6.x 构建的博客应用，支持 Markdown，支持图片拖拽上传，基于 RBAC 权限管理系统"></a>基于 Laravel6.x 构建的博客应用，支持 Markdown，支持图片拖拽上传，基于 RBAC 权限管理系统</h1><p>首页</p><p><img src="/medias/loading.gif" data-original="https://upload-images.jianshu.io/upload_images/14623749-f32ef21d42b702c2.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="首页.png"></p><p>基于 RBAC 的权限管理后台，Dashboard 页面统计了用户总数、文章发布总数、评论率、评论总数、文章支持按天、按月、按年统计、支持按分类、按标签统计……</p><p><img src="/medias/loading.gif" data-original="https://upload-images.jianshu.io/upload_images/14623749-74c132c165d20aae.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="后台首页.png"></p><p>登录页面</p><p><img src="/medias/loading.gif" data-original="https://upload-images.jianshu.io/upload_images/14623749-93885ee50879719e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="登录页面.png"></p><p>注册页面</p><p><img src="/medias/loading.gif" data-original="https://upload-images.jianshu.io/upload_images/14623749-a883ff409344f8c1.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="注册页面.png"></p><p>支持 GitHub 授权登录</p><p><img src="/medias/loading.gif" data-original="https://upload-images.jianshu.io/upload_images/14623749-f87b0926873bdfd0.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="GitHub授权登录页面.png"></p><p>支持邮箱重置密码</p><p><img src="/medias/loading.gif" data-original="https://upload-images.jianshu.io/upload_images/14623749-11fbe50ac341bf7e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="重置密码页面.png"></p><p>同时兼容 HTML 编辑器和 Markdown 编辑器</p><p><img src="/medias/loading.gif" data-original="https://upload-images.jianshu.io/upload_images/14623749-537e03bdc254a951.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="富文本编辑器.png"></p><p><img src="/medias/loading.gif" data-original="https://upload-images.jianshu.io/upload_images/14623749-c1c8018845d986ba.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="markdown 编辑器.png"></p><p>Markdown 编辑器：支持拖拽粘贴上传图片、预览、全屏、分屏预览</p><p><img src="/medias/loading.gif" data-original="https://upload-images.jianshu.io/upload_images/14623749-092682db5e3cec7a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="markdown 编辑器预览效果.png"></p><p>支持代码高亮</p><p><img src="/medias/loading.gif" data-original="https://upload-images.jianshu.io/upload_images/14623749-5263abf6268ddf98.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="文章详情.png"></p><p><img src="/medias/loading.gif" data-original="https://upload-images.jianshu.io/upload_images/14623749-9db84df41d52c0a3.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="后台用户.png"></p><h2 id="项目概述"><a href="#项目概述" class="headerlink" title="项目概述"></a>项目概述</h2><ul><li>项目名称：larablog</li><li>项目简介：基于 laravel6.x 开发的博客项目</li><li>访问地址：<a href="https://blog.pudongping.com/">https://blog.pudongping.com/</a></li></ul><h2 id="功能如下"><a href="#功能如下" class="headerlink" title="功能如下"></a>功能如下</h2><ul><li>用户认证 —— 注册、登录、退出；</li><li>个人中心 —— 用户个人中心，编辑资料；</li><li>用户授权 —— 作者才能删除自己的内容；</li><li>上传图片 —— 修改头像和编辑文章时上传图片；</li><li>表单验证 —— 使用表单验证类；</li><li>重置密码 —— 通过邮箱找回密码</li><li>文章支持分类、多标签、访问量统计；</li><li>编辑文章支持 markdown 编辑器 、html 编辑器；</li><li>markdown 编辑器支持拖拽上传图片、截屏粘贴上传图片、语法高亮、预览、全屏、分屏实时预览；</li><li>文章发布时自动 Slug 翻译，支持使用队列方式以提高响应；</li><li>站点『活跃用户』计算，一小时计算一次；</li><li>多角色权限管理 —— 允许站长，管理员权限的存在；</li><li>后台管理 —— 基于 RBAC 后台数据模型管理；</li><li>邮件通知 —— 发送新回复邮件通知，队列发送邮件；</li><li>站内通知 —— 文章有新回复；</li><li>自定义 Artisan 命令行 —— 自定义活跃用户计算命令；</li><li>自定义 Trait —— 活跃用户的业务逻辑实现；</li><li>自定义中间件 —— 记录用户的最后登录时间；</li><li>XSS 安全防御；</li><li>第三方授权登录，目前支持 GitHub，兼容 Facebook，Twitter，LinkedIn，Google，GitHub，GitLab 和 Bitbucket 的身份验证；</li><li>支持自定义 meta title、description、keywords；</li><li>支持友链</li><li>站点地图</li><li>RSS 订阅</li></ul><h2 id="运行环境要求"><a href="#运行环境要求" class="headerlink" title="运行环境要求"></a>运行环境要求</h2><ul><li>Nginx 1.8+</li><li>PHP 7.0+</li><li>Mysql 5.7+</li><li>Redis 3.0+</li></ul><h2 id="开发环境部署和安装"><a href="#开发环境部署和安装" class="headerlink" title="开发环境部署和安装"></a>开发环境部署和安装</h2><p>本项目代码使用 PHP 框架 laravel6.x 开发，本地开发环境使用 <a href="https://xueyuanjun.com/post/19915.html">Laravel Homestead</a>。</p><h2 id="基础安装"><a href="#基础安装" class="headerlink" title="基础安装"></a>基础安装</h2><ol><li>克隆源代码</li></ol><p>克隆 <code>larablog</code> 源代码到本地：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">// gitee<span class="token function">git</span> clone git@gitee.com:pudongping/larablog.git// GitHub<span class="token function">git</span> clone git@github.com:pudongping/larablog.git<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="2"><li>安装扩展包依赖</li></ol><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">// 先切换到 larablog 项目根目录<span class="token builtin class-name">cd</span> larablog// 执行安装命令，并忽略掉开发环境才需要的插件包<span class="token function">composer</span> <span class="token function">install</span> --no-dev<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="3"><li>生成配置文件</li></ol><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">cp</span> .env.example .env<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>你可以根据情况修改 .env 文件里的内容，如数据库连接、缓存、邮件设置、第三方授权登录等：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token assign-left variable">DB_HOST</span><span class="token operator">=</span>localhost<span class="token assign-left variable">DB_DATABASE</span><span class="token operator">=</span>larablog<span class="token assign-left variable">DB_USERNAME</span><span class="token operator">=</span>homestead<span class="token assign-left variable">DB_PASSWORD</span><span class="token operator">=</span>secret<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="4"><li>生成数据表及生成测试数据</li></ol><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">// 需要生成测试数据则执行：php artisan migrate --seed// 不需要生成测试数据则执行：php artisan migrate<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="5"><li>生成秘钥</li></ol><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">php artisan key:generate<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><ol start="6"><li>创建 storage 软连接</li></ol><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">php artisan storage:link<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><ol start="7"><li>赋予 storage 相应权限</li></ol><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">// 建议在 Linux 系统中新建一个 www 用户，并设置该用户不可登录系统<span class="token function">useradd</span> -s /sbin/nologin www// 将项目目录所有权赋予 www 用户<span class="token function">chown</span> -Rf www:www larablog// 给 storage 目录赋权限<span class="token function">chmod</span> -Rf 0755 larablog/storage/<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="8"><li> 配置 hosts 文件  （如果直接想部署在线上环境，则跳过此步骤）</li></ol><p>如果开发环境没有采用 Laravel Homestead 则 ip 映射以你实际为主，一般为 127.0.0.1。我这里使用的 Laravel Homestead 虚拟机的 ip 地址为：192.168.10.10</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">// Linux 或 MacOS 环境<span class="token builtin class-name">echo</span> <span class="token string">"192.168.10.10   larablog.test"</span> <span class="token operator">|</span> <span class="token function">sudo</span> <span class="token function">tee</span> -a /etc/hosts// Windows 环境需要打开 C:/Windows/System32/Drivers/etc/hosts  文件，然后新增一行<span class="token number">192.168</span>.10.10 larablog.test<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="前端安装"><a href="#前端安装" class="headerlink" title="前端安装"></a>前端安装</h2><ol><li>安装 npm 和 yarn</li></ol><p><strong>CentOS / Fedora / RHEL 环境下</strong></p><blockquote><p>文档地址：<a href="https://yarn.bootcss.com/docs/install/#centos-stable">https://yarn.bootcss.com/docs/install/#centos-stable</a></p></blockquote><ul><li>配置相应的 yum 源</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">curl</span> --silent --location https://dl.yarnpkg.com/rpm/yarn.repo <span class="token operator">|</span> <span class="token function">sudo</span> <span class="token function">tee</span> /etc/yum.repos.d/yarn.repo<span class="token function">curl</span> --silent --location https://rpm.nodesource.com/setup_8.x <span class="token operator">|</span> <span class="token function">sudo</span> <span class="token function">bash</span> -<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><ul><li>之后执行以下任意一条命令，就可以了</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> yum <span class="token function">install</span> <span class="token function">yarn</span><span class="token comment">## OR ##</span><span class="token function">sudo</span> dnf <span class="token function">install</span> <span class="token function">yarn</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><strong>Windows 环境下</strong></p><ul><li>安装 node.js</li></ul><p>直接去官网 <a href="https://nodejs.org/en/">https://nodejs.org/en</a> 下载安装最新版本。</p><ul><li>安装 Yarn</li></ul><p>请安装最新版本的 Yarn —— <a href="https://nodejs.org/en/">http://yarnpkg.cn/zh-Hans/docs/install</a></p><ol start="2"><li>为 NPM 和 Yarn 配置淘宝镜像，加速安装包下载</li></ol><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> config <span class="token builtin class-name">set</span> <span class="token assign-left variable">registry</span><span class="token operator">=</span>https://registry.npm.taobao.org<span class="token function">yarn</span> config <span class="token builtin class-name">set</span> registry https://registry.npm.taobao.org<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><ol start="3"><li>使用 Yarn 安装前端依赖包</li></ol><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">yarn</span> <span class="token function">install</span>或者<span class="token function">npm</span> <span class="token function">install</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>监控 resources 文件夹下的资源文件是否有发生改变。在 watch-poll 命令运行的情况下，一旦资源文件发生变化，Webpack 会自动重新编译。</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> run watch-poll// 如果遇到报错，尝试先执行以下命令更新 <span class="token function">npm</span> 到最新版本，之后再次执行监控命令<span class="token function">npm</span> <span class="token function">install</span> -g <span class="token function">npm</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><ul><li>编译前端内容</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">// 运行所有 Mix 任务<span class="token function">npm</span> run dev// 运行所有 Mix 任务并缩小输出<span class="token function">npm</span> run production// 或者执行<span class="token function">yarn</span> production<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="访问入口"><a href="#访问入口" class="headerlink" title="访问入口"></a>访问入口</h2><ul><li>首页地址： <a href="http://larablog.test/">http://larablog.test</a></li><li>后台管理：<a href="http://larablog.test/admin">http://larablog.test/admin</a></li></ul><p>管理员账号密码如下：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">username: <span class="token number">1414818093</span>@qq.compassword: <span class="token number">123456</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>默认网站第一位用户为站长角色，第二位用户为管理员角色。如果填充了测试数据，则默认所有用户的密码为：123456</p><p>==至此，安装完成^_^。enjoy yourself……==</p><h2 id="后端扩展包使用情况"><a href="#后端扩展包使用情况" class="headerlink" title="后端扩展包使用情况"></a>后端扩展包使用情况</h2><table><thead><tr><th>扩展包</th><th>简介描述</th><th>本项目应用场景</th></tr></thead><tbody><tr><td><a href="https://packagist.org/packages/laravel/ui">laravel/ui</a></td><td>laravel 6.x UI 脚手架</td><td>前端页面框架</td></tr><tr><td><a href="https://github.com/barryvdh/laravel-ide-helper">barryvdh/laravel-ide-helper</a></td><td>能让你的 IDE (PHPStorm, Sublime) 实现自动补全、代码智能提示和代码跟踪等功能</td><td>代码补全和智能提示</td></tr><tr><td><a href="https://github.com/barryvdh/laravel-debugbar">barryvdh/laravel-debugbar</a></td><td>页面调试工具栏 (对 phpdebugbar 的封装)</td><td>开发环境中的 DEBUG</td></tr><tr><td><a href="https://github.com/overtrue/laravel-lang">overtrue/laravel-lang</a></td><td>支持 52 个国家的语言包</td><td>翻译 Laravel 自带模板</td></tr><tr><td><a href="https://github.com/mewebstudio/captcha">mews/captcha</a></td><td>图片验证码</td><td>注册页面图片验证码</td></tr><tr><td><a href="https://github.com/Intervention/image">intervention/image</a></td><td>图片处理功能库</td><td>用于图片裁剪</td></tr><tr><td><a href="https://github.com/summerblue-ext-forks/active">summerblue/laravel-active</a></td><td>方便设置 active 类</td><td>文章排序添加 active 类</td></tr><tr><td><a href="https://github.com/mewebstudio/Purifier">mews/purifier</a></td><td>用户提交的 Html 白名单过滤</td><td>文章内容的 Html 安全过滤，防止 XSS 攻击</td></tr><tr><td><a href="https://github.com/guzzle/guzzle">guzzlehttp/guzzle</a></td><td>HTTP 请求套件</td><td>请求百度翻译 API，翻译文章标题，做 SEO 优化</td></tr><tr><td><a href="https://github.com/overtrue/pinyin">overtrue/pinyin</a></td><td>基于 CC-CEDICT 词典的中文转拼音工具</td><td>翻译文章标题的备用方案</td></tr><tr><td><a href="https://github.com/nrk/predis">predis/predis</a></td><td>Redis 官方首推的 PHP 客户端开发包</td><td>缓存驱动 Redis 基础扩展包</td></tr><tr><td><a href="https://learnku.com/docs/laravel/6.x/horizon/5190">laravel/horizon</a></td><td>队列监控</td><td>队列监控命令与页面控制台 /horizon</td></tr><tr><td><a href="https://github.com/spatie/laravel-permission">spatie/laravel-permission</a></td><td>角色权限管理</td><td>角色和权限控制</td></tr><tr><td><a href="https://github.com/viacreative/sudo-su">viacreative/sudo-su</a></td><td>用户切换</td><td>调试环境中快速切换登录账号</td></tr><tr><td><a href="https://github.com/erusev/parsedown">erusev/parsedown</a></td><td>markdown 转换 html 工具</td><td>文章模块解析 markdown 语法</td></tr><tr><td><a href="https://github.com/thephpleague/html-to-markdown">thephpleague/html-to-markdown</a></td><td>html 转换成 markdown 工具</td><td>文章编辑采用 markdown 编辑器时</td></tr><tr><td><a href="https://socialiteproviders.netlify.com/providers/git-hub.html">laravel/socialite</a></td><td>laravel 官方推荐社会化登录</td><td>Github 登录</td></tr><tr><td><a href="https://packagist.org/packages/suin/php-rss-writer">suin/php-rss-writer</a></td><td>rss 订阅生成</td><td>生成 rss 订阅代码</td></tr><tr><td><a href="https://github.com/hhxsv5/laravel-s/blob/master/README-CN.md">hhxsv5/laravel-s</a></td><td>LaravelS 是 Swoole 和 Laravel/Lumen 之间开箱即用的适配器</td><td>优化访问速度</td></tr></tbody></table><h2 id="前端扩展包使用情况"><a href="#前端扩展包使用情况" class="headerlink" title="前端扩展包使用情况"></a>前端扩展包使用情况</h2><table><thead><tr><th>扩展包</th><th>简介描述</th><th>本项目应用场景</th></tr></thead><tbody><tr><td><a href="https://fontawesome.com/">yarn add @fortawesome/fontawesome-free</a></td><td>Font Awesome 提供了可缩放的矢量图标</td><td>字体图标库</td></tr><tr><td><a href="https://github.com/BlackrockDigital/startbootstrap-sb-admin-2">npm i startbootstrap-sb-admin-2</a></td><td>界面简洁美观的皮肤</td><td>cms 后台模板</td></tr><tr><td><a href="https://simplemde.com/">npm install simplemde</a></td><td>markdown 编辑器</td><td>文章编辑器</td></tr><tr><td><a href="https://highlightjs.org/">npm install highlight.js</a></td><td>语法高亮工具</td><td>markdown 编辑器代码语法高亮</td></tr><tr><td><a href="https://github.com/Rovak/InlineAttachment">npm install inline-attachment</a></td><td>文本框拖动上传图片工具</td><td>markdown 文本框图片拖动上传</td></tr><tr><td><a href="http://loudev.com/">multiselect.js</a></td><td>多选下拉框</td><td>文章多选标签</td></tr><tr><td><a href="https://www.chartjs.org/">chartjs</a></td><td>图表插件</td><td>后台管理界面图表</td></tr></tbody></table><h2 id="邮箱认证"><a href="#邮箱认证" class="headerlink" title="邮箱认证"></a>邮箱认证</h2><ul><li>开发环境时将 <code>.ENV</code> 文件设置为如下所示，将邮箱认证邮件发送至当前日志中，以便调试  <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token assign-left variable">MAIL_DRIVER</span><span class="token operator">=</span>log<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li>生产环境时，建议将 <code>.ENV</code> 文件中相关邮件设置为自己所需配置，以下为默认配置  <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token assign-left variable">MAIL_DRIVER</span><span class="token operator">=</span>smtp<span class="token assign-left variable">MAIL_HOST</span><span class="token operator">=</span>smtp.mailtrap.io<span class="token assign-left variable">MAIL_PORT</span><span class="token operator">=</span><span class="token number">2525</span><span class="token assign-left variable">MAIL_USERNAME</span><span class="token operator">=</span>null<span class="token assign-left variable">MAIL_PASSWORD</span><span class="token operator">=</span>null<span class="token assign-left variable">MAIL_ENCRYPTION</span><span class="token operator">=</span>null<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h2 id="翻译队列"><a href="#翻译队列" class="headerlink" title="翻译队列"></a>翻译队列</h2><ul><li>修改 <code>.ENV</code> 文件设置为</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 如果是开发环境的话，就把队列驱动改回 sync 同步模式，也就是说不使用任何队列，实时执行：</span><span class="token assign-left variable">QUEUE_CONNECTION</span><span class="token operator">=</span>redis<span class="token assign-left variable">REDIS_CLIENT</span><span class="token operator">=</span>predis<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><ul><li>启动队列系统，队列在启动完成后会进入监听状态</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">php artisan queue:listen或者使用php artisan horizon<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="文章标题翻译"><a href="#文章标题翻译" class="headerlink" title="文章标题翻译"></a>文章标题翻译</h2><blockquote><p><a href="http://api.fanyi.baidu.com/api/trans/product/apidoc">使用了百度翻译 api</a>，请将 <code>.ENV</code>中的百度 api 相关信息换成你自己的<a href="http://api.fanyi.baidu.com/api/trans/product/desktop?req=developer">开发者信息</a></p></blockquote><p>如果不采用百度翻译翻译文章标题的话，那么不用配置 <code>.ENV</code> 文件中以下配置项</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 百度翻译 APP ID</span><span class="token assign-left variable">BAIDU_TRANSLATE_APPID</span><span class="token operator">=</span><span class="token comment"># 百度翻译密钥 KEY</span><span class="token assign-left variable">BAIDU_TRANSLATE_KEY</span><span class="token operator">=</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>并且也不需要更改</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token assign-left variable">QUEUE_CONNECTION</span><span class="token operator">=</span>redis<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>默认保持为</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token assign-left variable">QUEUE_CONNECTION</span><span class="token operator">=</span>sync<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>这样将会每发一篇文章时，将文章标题直接翻译成拼音达到 slug 的效果。</p><h2 id="邮件通知"><a href="#邮件通知" class="headerlink" title="邮件通知"></a>邮件通知</h2><blockquote><p>如果不想要，发表文章评论时有邮件通知，可以不用配置，直接忽略，功能上没有任何影响</p></blockquote><ol><li>需要先开启 QQ 邮箱的 SMTP 支持</li></ol><p><a href="https://service.mail.qq.com/cgi-bin/help?subtype=1&amp;id=28&amp;no=166">如何打开 POP3/SMTP/IMAP 功能？</a></p><ol start="2"><li>邮箱发送配置 （请将以下配置换成你自己的邮箱配置）</li></ol><blockquote><p>如果你是使用的阿里云 ECS，那么一定要注意，阿里云的 ECS 默认禁用了 25 端口，需要单独申请解封25端口，<a href="https://yundun.console.aliyun.com/?spm=5176.2020520101.console-base-top.duser-0.33bf4df5FEFEdS&amp;p=sc#/sc/port">点我解封阿里云 ECS 25端口</a>，如果你不知道如何解封，请查看 <a href="https://help.aliyun.com/knowledge_detail/56130.html">解封步骤</a>。当然替代方案，你可以采用 465 端口，如果你打算采用 465 端口，那么需要将以下配置中的 <code>MAIL_PORT</code> 修改为 465,并且也需要将加密类型 <code>MAIL_ENCRYPTION</code> 修改为 ssl 即可，这里我使用的是 qq 邮箱，可能其他的邮箱服务有差异，视情况而定吧。</p></blockquote><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 使用支持 ESMTP 的 SMTP 服务器发送邮件</span><span class="token assign-left variable">MAIL_DRIVER</span><span class="token operator">=</span>smtp<span class="token comment"># QQ 邮箱的 SMTP 服务器地址，必须为此值</span><span class="token assign-left variable">MAIL_HOST</span><span class="token operator">=</span>smtp.qq.com<span class="token comment"># QQ 邮箱的 SMTP 服务器端口，必须为此值</span><span class="token assign-left variable">MAIL_PORT</span><span class="token operator">=</span><span class="token number">25</span><span class="token comment"># 请将此值换为你的 QQ + @qq.com</span><span class="token assign-left variable">MAIL_USERNAME</span><span class="token operator">=</span>xxxxxxxxxxxxxx@qq.com<span class="token comment"># 密码是我们第一步拿到的授权码</span><span class="token assign-left variable">MAIL_PASSWORD</span><span class="token operator">=</span>xxxxxxxxx<span class="token comment"># 加密类型，选项 null 表示不使用任何加密，其他选项还有 ssl，这里我们使用 tls 即可，如果出现报错的话，多半是因为这个 smtp 主机不支持 TLS，那么只需要将此项设置为 null 即可。</span><span class="token assign-left variable">MAIL_ENCRYPTION</span><span class="token operator">=</span>tls<span class="token comment"># 此值必须同 MAIL_USERNAME 一致</span><span class="token assign-left variable">MAIL_FROM_ADDRESS</span><span class="token operator">=</span>xxxxxxxxxxxxxx@qq.com<span class="token comment"># 用来作为邮件的发送者名称</span><span class="token assign-left variable">MAIL_FROM_NAME</span><span class="token operator">=</span>番茄炖土豆的个人博客<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="3"><li>如果需要支持队列，请将 <code>.ENV</code> 配置文件中，设置成</li></ol><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token assign-left variable">QUEUE_CONNECTION</span><span class="token operator">=</span>redis<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="用户切换调试"><a href="#用户切换调试" class="headerlink" title="用户切换调试"></a>用户切换调试</h2><p>默认只在调试模式 <code>.ENV</code> 文件中</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token assign-left variable">APP_DEBUG</span><span class="token operator">=</span>true<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>时启用，且 <code>config/sudosu.php</code> 文件中</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token comment">// 允许使用的顶级域名</span><span class="token string single-quoted-string">'allowed_tlds'</span> <span class="token operator">=&gt;</span> <span class="token punctuation">[</span><span class="token string single-quoted-string">'dev'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'local'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'test'</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>顶级域名（Top Level Domain）加入你域名的顶级域名</p><h2 id="第三方授权登录"><a href="#第三方授权登录" class="headerlink" title="第三方授权登录"></a>第三方授权登录</h2><p>目前项目中只支持 github 授权登录，因为只申请了 GitHub 的 OAuth application，如果你也需要使用 GitHub 作为第三方授权登录，那么需要按照以下步骤进行：</p><ol><li>在 GitHub 上注册一个 <a href="https://github.com/settings/applications/new">OAuth application</a></li></ol><ul><li>Application name：你可以填写你自己的应用名称，比如：myWebBlog</li><li>Homepage URL：首页连接地址需要添加你自己的，比如：<a href="http://larablog.test/">http://larablog.test</a></li><li>Application description：应用描述可以随便填写，比如：自己的博客</li><li>Authorization callback URL：授权回调地址，一定要填写成： <your domain="">/login/github/callback  ，比如，我这里则需要填写成：<a href="http://larablog.test/login/github/callback">http://larablog.test/login/github/callback</a></your></li></ul><ol start="2"><li>注册成功之后，需要在 <code>.ENV</code> 配置文件中填写申请成功的 Client ID 和 Client Secret。填写好之后，直接访问  <a href="http://larablog.test/login/github">http://larablog.test/login/github</a>  即可支持 GitHub 第三方授权登录，如果不设置 <code>.ENV</code> 配置文件，则登录、注册页面不会显示 GitHub 第三方授权登录入口。</li></ol><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># Github Client ID</span><span class="token assign-left variable">GITHUB_CLIENT_ID</span><span class="token operator">=</span><span class="token comment"># Github Client Secret</span><span class="token assign-left variable">GITHUB_CLIENT_SECRET</span><span class="token operator">=</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><ol start="3"><li>扩展其它第三方授权登录。<blockquote><p>Socialite 目前支持 Facebook，Twitter，LinkedIn，Google，GitHub，GitLab 和 Bitbucket 的身份验证。本项目已经对以上支持的第三方登录做了兼容性处理，如果我们需要支持以上除 GitHub 以外的应用（因为目前已经设置好了 GitHub 相关的配置），那么我们只需要按照以下的步骤配置即可。这里以 Google 为例子。</p></blockquote></li></ol><ul><li>第一步：申请 <code>google</code> 的 Client ID 和 Client Secret。</li><li>第二步：将申请的 Client ID 和 Client Secret 填写入 <code>.ENV</code> 配置文件中</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token assign-left variable">GOOGLE_CLIENT_ID</span><span class="token operator">=</span><span class="token string">"your google client id"</span><span class="token assign-left variable">GOOGLE_CLIENT_SECRET</span><span class="token operator">=</span><span class="token string">"your google client secret"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><ul><li>第三步：配置 app/services.php</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token string">'google'</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token punctuation">[</span>    <span class="token string">'client_id'</span> <span class="token operator">=</span><span class="token operator">&gt;</span> env<span class="token punctuation">(</span><span class="token string">'GOOGLE_CLIENT_ID'</span><span class="token punctuation">)</span>,  // google 客户端授权 ID    <span class="token string">'client_secret'</span> <span class="token operator">=</span><span class="token operator">&gt;</span> env<span class="token punctuation">(</span><span class="token string">'GOOGLE_CLIENT_SECRET'</span><span class="token punctuation">)</span>,  // google 客户端授权密钥    <span class="token string">'redirect'</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token string">'/login/google/callback'</span>,  // 授权回调链接 如果 redirect 配置项包含的是相对路径，系统会自动将其转化为完整 URL<span class="token punctuation">]</span>,<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>第四步：将第三方服务添加到 <code>app/Models/Auth/User.php</code> =&gt; <code>$allowedProviders</code> 数组中</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">public static <span class="token variable">$allowedProviders</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'github'</span>, <span class="token string">'google'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>第五步：直接访问 <your domain="">/login/google 即可</your></li></ul><h2 id="自定义-Artisan-命令"><a href="#自定义-Artisan-命令" class="headerlink" title="自定义 Artisan 命令"></a>自定义 Artisan 命令</h2><table><thead><tr><th>命令</th><th>说明</th><th>Cron</th></tr></thead><tbody><tr><td>php artisan larablog:calculate-active-user</td><td>生成活跃用户</td><td>一个小时运行一次</td></tr><tr><td>php artisan larablog:sync-article-view-count</td><td>同步文章的访问量</td><td>每天早上 0 点准时</td></tr><tr><td>php artisan larablog:sync-user-actived-at</td><td>从 Redis 中同步最后登录时间到数据库中</td><td>每天早上 0 点准时</td></tr></tbody></table><h2 id="计划任务"><a href="#计划任务" class="headerlink" title="计划任务"></a>计划任务</h2><p>当前计划任务主要是计算主页右侧 「活跃用户」</p><p><code>artisan</code> 命令为：</p><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">php artisan larablog:calculate-active-user<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>同步文章的访问量</p><p><code>artisan</code> 命令为：</p><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">php artisan larablog:sync-article-view-count<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>和同步 「用户最后活跃时间」 到数据库</p><p><code>artisan</code> 命令为：</p><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">php artisan larablog:sync-user-actived-at<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>并且已经在 <code>调度器</code> 中设置好了相关代码。（调度器在 app/Console/Kernel.php 文件的 schedule 方法中定义）</p><p>使用 Linux 系统的 Cron 计划任务需执行</p><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">export EDITOR=vi &amp;&amp; crontab -e<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>然后填入以下内容（注意将项目根目录换成你自己的）<br>这里我的项目根目录为：<code>/home/vagrant/Code/larablog</code></p><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">* * * * * php /home/vagrant/Code/larablog/artisan schedule:run &gt;&gt; /dev/null 2&gt;&amp;1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><blockquote><p>如果不设定计划任务的话，直接执行以上 Artisan 命令的话会是如下情况：<br>「活跃用户」将每 65 分钟重新生成一次，设定计划任务的话，默认一个小时重新生成一次。<br>「用户最后活跃时间」将不会同步到数据库中，将会直接从 Redis 中获取，如果 Redis 中不存在，则以用户注册时间替代。</p></blockquote><h2 id="队列清单"><a href="#队列清单" class="headerlink" title="队列清单"></a>队列清单</h2><table><thead><tr><th>文件路径</th><th>说明</th><th>调用时机</th></tr></thead><tbody><tr><td>app\Notifications\ArticleReplied.php</td><td>通知文章作者有新评论回复</td><td>文章被评论以后 App\Observers\Portal\Article\ReplyObserver@created</td></tr><tr><td>app\Jobs\TranslateSlug.php</td><td>将文章标题翻译为 Slug</td><td>文章保存时 App\Observers\Portal\Article\ArticleObserver@saved</td></tr></tbody></table><h2 id="线上部署"><a href="#线上部署" class="headerlink" title="线上部署"></a>线上部署</h2><p>如果需要优化网站打开速度，可依次进行如下步骤：</p><ul><li>压缩前端代码</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> run prod<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>缓存路由</li></ul><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh"># 缓存路由php artisan route:cache# 清空路由缓存php artisan route:clear<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>缓存配置文件</li></ul><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh"># 缓存配置文件php artisan config:cache# 清空配置文件缓存php artisan cache:clear<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>composer 优化</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">composer</span> dump-autoload --optimize<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>类映射加载优化</li></ul><p>在 <code>laravel 6.x</code> 中，会生成 <code>bootstrap/cache/config.php</code> 和 <code>bootstrap/cache/packages.php</code> 和 <code>bootstrap/cache/routes.php</code> 和 <code>bootstrap/cache/services.php</code> 这四个文件。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">php artisan optimize<span class="token comment"># 清空类映射</span>php artisan optimize:clear<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><ul><li>使用 swoole 加速网站</li></ul><p>在项目根目录下执行以下命令，以守护进程的方式运行 <a href="https://github.com/hhxsv5/laravel-s/blob/master/README-CN.md">laravelS</a></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">php bin/laravels start -d<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>参考以下内容配置 nginx 配置</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">upstream swoole <span class="token punctuation">{</span>    <span class="token comment"># 如果是使用 laradock ，请将 127.0.0.1 更改为 workspace</span>    server <span class="token number">127.0</span>.0.1:5200 <span class="token assign-left variable">weight</span><span class="token operator">=</span><span class="token number">5</span> <span class="token assign-left variable">max_fails</span><span class="token operator">=</span><span class="token number">3</span> <span class="token assign-left variable">fail_timeout</span><span class="token operator">=</span>30s<span class="token punctuation">;</span>    keepalive <span class="token number">16</span><span class="token punctuation">;</span><span class="token punctuation">}</span>server <span class="token punctuation">{</span>    listen <span class="token number">80</span><span class="token punctuation">;</span>    server_name pudongping.com blog.pudongping.com<span class="token punctuation">;</span>    root /www/wwwroot/larablog/public<span class="token punctuation">;</span>    index index.html index.htm index.php<span class="token punctuation">;</span>    charset utf-8<span class="token punctuation">;</span>    location / <span class="token punctuation">{</span>        try_files <span class="token variable">$uri</span> @laravels<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    location <span class="token operator">=</span> /favicon.ico <span class="token punctuation">{</span> access_log off<span class="token punctuation">;</span> log_not_found off<span class="token punctuation">;</span> <span class="token punctuation">}</span>    location <span class="token operator">=</span> /robots.txt  <span class="token punctuation">{</span> access_log off<span class="token punctuation">;</span> log_not_found off<span class="token punctuation">;</span> <span class="token punctuation">}</span>    access_log  /www/wwwlogs/pudongping.com.log<span class="token punctuation">;</span>    error_log  /www/wwwlogs/pudongping.com.error.log<span class="token punctuation">;</span>    sendfile off<span class="token punctuation">;</span>    client_max_body_size 100m<span class="token punctuation">;</span>    location @laravels <span class="token punctuation">{</span>        <span class="token comment"># proxy_connect_timeout 60s;</span>        <span class="token comment"># proxy_send_timeout 60s;</span>        <span class="token comment"># proxy_read_timeout 120s;</span>        proxy_http_version <span class="token number">1.1</span><span class="token punctuation">;</span>        proxy_set_header Connection <span class="token string">""</span><span class="token punctuation">;</span>        proxy_set_header X-Real-IP <span class="token variable">$remote_addr</span><span class="token punctuation">;</span>        proxy_set_header X-Real-PORT <span class="token variable">$remote_port</span><span class="token punctuation">;</span>        proxy_set_header X-Forwarded-For <span class="token variable">$proxy_add_x_forwarded_for</span><span class="token punctuation">;</span>        proxy_set_header Host <span class="token variable">$http_host</span><span class="token punctuation">;</span>        proxy_set_header Scheme <span class="token variable">$scheme</span><span class="token punctuation">;</span>        proxy_set_header Server-Protocol <span class="token variable">$server_protocol</span><span class="token punctuation">;</span>        proxy_set_header Server-Name <span class="token variable">$server_name</span><span class="token punctuation">;</span>        proxy_set_header Server-Addr <span class="token variable">$server_addr</span><span class="token punctuation">;</span>        proxy_set_header Server-Port <span class="token variable">$server_port</span><span class="token punctuation">;</span>        <span class="token comment"># “swoole”是指upstream</span>        proxy_pass http://swoole<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    location ~ /<span class="token punctuation">\</span>.ht <span class="token punctuation">{</span>        deny all<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>如果是使用 laradock 的话，还需要将 <code>.env</code> 添加监听地址为 <code>workspace</code></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token assign-left variable">LARAVELS_LISTEN_IP</span><span class="token operator">=</span>workspace<span class="token comment"># 设置后台启动 laravelS 服务，如果需要查看则执行 ps -ef|grep laravels 命令</span><span class="token assign-left variable">LARAVELS_DAEMONIZE</span><span class="token operator">=</span>true<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="代码规范"><a href="#代码规范" class="headerlink" title="代码规范"></a>代码规范</h2><p>遵循 <a href="https://www.php-fig.org/psr/psr-2/">PSR-2</a> 编码风格规范<br>遵循 <a href="https://learnku.com/docs/psr/psr-12-extended-coding-style-guide/5789">PSR-12</a> 编码规范扩充</p><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><p>代码中涵盖了丰富的注释，如果仍有不清楚之处，可以给我留言。<br>如果你觉得还不错，请帮我点一下  Star，不胜感激 ！❤(❤´艸｀❤)</p><p><a href="https://github.com/pudongping/larablog">GitHub</a> 地址<br><a href="https://gitee.com/pudongping/larablog">码云</a> 地址</p><h2 id="License"><a href="#License" class="headerlink" title="License"></a>License</h2><p>源代码基于 <a href="https://opensource.org/licenses/MIT">MIT</a> 协议发布。</p>]]></content>
      
      
      <categories>
          
          <category> 开源 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> GitHub </tag>
            
            <tag> 博客 </tag>
            
            <tag> PHP </tag>
            
            <tag> Laravel </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何使用 gitbook 快速编写个人书籍或笔记？</title>
      <link href="posts/b00f410f.html"/>
      <url>posts/b00f410f.html</url>
      
        <content type="html"><![CDATA[<h1 id="GitBook-使用"><a href="#GitBook-使用" class="headerlink" title="GitBook 使用"></a><a href="https://github.com/GitbookIO">GitBook</a> 使用</h1><h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><blockquote><p><a href="https://www.gitbook.com/">GitBook 官网</a><br><a href="https://github.com/GitbookIO/gitbook">GitBook 文档</a><br><a href="https://blankj.com/gitbook/gitbook/">GitBook 使用教程</a><br><a href="https://juejin.im/post/6844903865146441741">推荐12个实用的gitbook插件</a><br><a href="http://jartto.wang/2020/02/02/about-gitbook/">GitBook 和它有趣的插件</a></p></blockquote><h2 id="示例图"><a href="#示例图" class="headerlink" title="示例图"></a>示例图</h2><p><img src="/medias/loading.gif" data-original="https://pudongping.github.io/notes/resources/images/sample/page.png" alt="页面截图"></p><h2 id="在线访问"><a href="#在线访问" class="headerlink" title="在线访问"></a>在线访问</h2><p><a href="https://notes.pudongping.com/">蒲东平的编程笔记</a> 或者 <a href="https://pudongping.github.io/notes">蒲东平的编程笔记-GitHub Pages</a></p><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><ul><li>安装</li></ul><blockquote><p>安装 GitBook 之前需要安装 <code>Node.js</code> ， <code>GitBook</code> 是一个基于 <code>Node.js</code> 的命令行工具，因此需要先下载安装 <a href="https://nodejs.org/en">Node.js</a></p></blockquote><pre class="line-numbers language-none"><code class="language-none"># 查看 node.js 是否安装成功node -v# 安装 GitBook npm install gitbook-cli -g# 查看 GitBook 是否安装成功gitbook -V （大写的 V ）<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>更多详情可以参考 <a href="https://github.com/GitbookIO/gitbook/blob/master/docs/setup.md">GitBook 官方安装文档</a> 来安装 GitBook</p><ul><li>创建项目</li></ul><pre class="line-numbers language-none"><code class="language-none"># 切换到项目文件夹并创建项目mkdir project-directory &amp;&amp; cd project-directory &amp;&amp; gitbook init# 或者直接使用以下命令gitbook init ./project-directory<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>启动项目</li></ul><pre class="line-numbers language-none"><code class="language-none">cd project-directory &amp;&amp; gitbook serve// 如果不想使用 4000 端口，想要使用 9520 端口时gitbook serve -p 9520<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>然后在浏览器地址栏中输入 <code>http://localhost:4000</code> 便可预览书籍，至此，gitbook 安装完毕。</p><ul><li>编译项目 （生成网页而不开启服务器）</li></ul><pre class="line-numbers language-none"><code class="language-none">cd project-directory &amp;&amp; gitbook build<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><ul><li>查看所有可用的 gitbook 版本</li></ul><pre class="line-numbers language-none"><code class="language-none">gitbook ls-remote<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><ul><li>安装指定的 gitbook 版本</li></ul><pre class="line-numbers language-none"><code class="language-none">gitbook fetch beta（版本号）<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><ul><li>编译时，输出目录详细的记录包括 debug</li></ul><pre class="line-numbers language-none"><code class="language-none">gitbook build ./ --log=debug --debug<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="关于配置"><a href="#关于配置" class="headerlink" title="关于配置"></a>关于配置</h2><h3 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h3><p>需要在项目根目录下手动创建 <code>book.json</code> 或者 <code>book.js</code> 文件</p><h3 id="配置文件变量"><a href="#配置文件变量" class="headerlink" title="配置文件变量"></a>配置文件变量</h3><p>可以参考这篇文章中的介绍：<a href="https://chrisniael.gitbooks.io/gitbook-documentation/content/format/templating.html">GitBook文档（中文版）</a></p><h3 id="如果需要导出-pdf-等文件"><a href="#如果需要导出-pdf-等文件" class="headerlink" title="如果需要导出 pdf 等文件"></a>如果需要导出 pdf 等文件</h3><p>可以参考这篇文章中的介绍： <a href="https://snowdreams1006.github.io/myGitbook/advance/export.html">导出电子书</a></p><h2 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h2><p>安装插件有两种方式： <a href="https://www.npmjs.com/search?q=gitbook-plugin">点我搜索更多 gitbook 插件</a></p><ol><li>在 <code>/book.json</code> 配置文件中写入相应的插件和配置后，使用 <code>gitbook install</code> 命令安装插件</li><li>直接使用 <code>npm install gitbook-plugin-pluginname</code> 命令安装指定的插件，然后在 <code>/book.json</code> 配置文件中写入配置，比如安装 <code>highlight</code> 插件时，需要执行 <code>npm install gitbook-plugin-highlight</code></li></ol><pre class="line-numbers language-npm" data-language="npm"><code class="language-npm">npm install gitbook-plugin-search-pro --registry=https://registry.npm.taobao.org/<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="GitBook-初始化时，会默认自动下载-7-个插件"><a href="#GitBook-初始化时，会默认自动下载-7-个插件" class="headerlink" title="GitBook 初始化时，会默认自动下载 7 个插件"></a>GitBook 初始化时，会默认自动下载 7 个插件</h3><ol><li><a href="https://github.com/GitbookIO/plugin-highlight">highlight</a>  ： 代码高亮</li><li><a href="https://github.com/GitbookIO/plugin-search">search</a>  ： 导航栏查询功能 （不支持中文）</li><li><a href="https://www.npmjs.com/package/gitbook-plugin-lunr">lunr</a>  ：  为 <code>search</code> 插件提供后端支持</li><li><a href="https://github.com/GitbookIO/plugin-sharing">sharing</a>  ： 右上角分享功能</li><li><a href="https://github.com/GitbookIO/plugin-fontsettings">fontsettings</a>  ： 字体设置（最上方的 “A” 符号）</li><li><a href="https://github.com/GitbookIO/plugin-livereload">livereload</a>  ： 为 GitBook 实时重新加载</li><li><a href="https://www.npmjs.com/package/gitbook-plugin-theme-default">theme-default</a>  ：  默认的 3.0.0 版本之后的主题插件</li></ol><h3 id="推荐插件"><a href="#推荐插件" class="headerlink" title="推荐插件"></a>推荐插件</h3><ul><li><a href="https://github.com/codeclou/gitbook-plugin-advanced-emoji">advanced-emoji</a>  ： 支持 emoji 表情包  <a href="https://www.webfx.com/tools/emoji-cheat-sheet/">emoji 表情包地址</a></li><li><a href="https://github.com/zq99299/gitbook-plugin-anchor-navigation-ex/blob/master/doc/config.md">anchor-navigation-ex</a>  ： 悬浮按钮目录  （在页面中增加 <extoc></extoc> 标签，会在此处生成 TOC 目录）、还会增加标题锚</li><li><a href="https://www.npmjs.com/package/gitbook-plugin-auto-scroll-table">auto-scroll-table</a>  ：  表格滚动条</li><li><a href="https://www.npmjs.com/package/gitbook-plugin-audio_image">audio_image</a>  ： 播放音频</li><li><a href="https://github.com/stuebersystems/gitbook-plugin-back-to-top-button">back-to-top-button</a> ： 返回顶部</li><li><a href="https://snowdreams1006.github.io/gitbook-plugin-baidu-tongji-with-multiple-channel/">baidu-tongji-with-multiple-channel</a>  ：  百度统计插件,支持多渠道独立统计,一份源码多处部署独立统计</li><li><a href="https://www.npmjs.com/package/gitbook-plugin-chapter-fold">chapter-fold</a>  ： 左侧目录可折叠，建议和 <code>expandable-chapters</code> 插件一起使用可以互补相互的 bug</li><li><a href="https://github.com/TGhoul/gitbook-plugin-code">code</a> ： 代码添加行号和复制按钮</li><li><a href="https://github.com/zhenchao125/gitbook-plugin-change_girls">change_girls</a>  ： 可自动切换背景</li><li><a href="https://github.com/c4software/gitbook-plugin-click-reveal">click-reveal</a>  ： 点击显示内容，默认把内容已经隐藏</li><li><a href="https://github.com/Bandwidth/gitbook-plugin-custom-favicon">custom-favicon</a>  ：  修改标题栏图标</li><li><a href="https://www.npmjs.com/package/gitbook-plugin-copyright">copyright</a>  ：  用于复制内容时追加版权信息以及文章末尾添加版权小尾巴</li><li><a href="https://github.com/willin/gitbook-plugin-donate">donate</a> ： 打赏功能</li><li><a href="https://github.com/snowdreams1006/gitbook-plugin-diff/blob/HEAD/README_zh.md">diff</a>  ： 在 markdown 文档中显示代码之间的差异</li><li><a href="https://github.com/chrisjake/gitbook-plugin-expandable-chapters-small">expandable-chapters</a>  ： 左侧目录可折叠，和 <code>expandable-chapters-small</code> 的区别是： <code>expandable-chapters-small</code> 的折叠图标要小一些 （建议和 <code>chapter-fold</code> 插件一起使用可以互补相互的 bug）</li><li><a href="https://www.npmjs.com/package/gitbook-plugin-edit-link-plus">edit-link-plus</a>  ： 在线编辑文件</li><li><a href="https://github.com/fzankl/gitbook-plugin-flexible-alerts">flexible-alerts</a> ：警告提示框</li><li><a href="https://github.com/menduo/gitbook-plugin-favicon">favicon</a>  ： 修改网站的 favicon.ico  <a href="http://www.bitbug.net/">点我在线制作ico图标，建议尺寸32*32</a></li><li><a href="https://www.npmjs.com/package/gitbook-plugin-ga">ga</a> ： Google 分析</li><li><a href="https://github.com/GitbookIO/plugin-github">github</a> ： 右上角添加 Github 图标</li><li><a href="https://github.com/azu/gitbook-plugin-github-buttons">github-buttons</a>  ： 右上角添加 GitHub 的按钮</li><li><a href="https://www.npmjs.com/package/gitbook-plugin-charts">gitbook-plugin-charts</a>  ：  在 gitbook 中使用图表插件，目前支持 echarts</li><li><a href="https://github.com/snowdreams1006/gitbook-plugin-google-tongji-with-multiple-channel">google-tongji-with-multiple-channel</a>  ：  Google 统计插件,支持多渠道独立统计,一份源码多处部署独立统计</li><li><a href="https://www.npmjs.com/package/gitbook-plugin-hide-element">hide-element</a>  ：  隐藏元素</li><li><a href="https://github.com/todvora/gitbook-plugin-image-captions">image-captions</a> ： 将图片的 alt 或 title 属性转换为标题</li><li><a href="https://github.com/matusnovak/gitbook-plugin-insert-logo">insert-logo</a> ： 插入 Logo</li><li><a href="https://github.com/snowdreams1006/gitbook-plugin-icp/blob/HEAD/README_zh.md">icp</a>  ：  在首页页脚区域添加 icp 网站备案信息</li><li><a href="https://github.com/brian-dawn/gitbook-plugin-klipse">klipse</a>  ： 嵌入类似 IDE 的功能</li><li><a href="https://www.npmjs.com/package/gitbook-plugin-lightbox">lightbox</a>  ：  页面弹窗查看图片 （支持在弹层切换上下图）</li><li><a href="https://github.com/PacktPublishing/gitbook-local-video">local-video</a>  ：  播放本地视频，<a href="http://gitbook.zhangjikai.com/plugins.html#local-video">点我查看使用教程</a></li><li><a href="https://www.npmjs.com/package/gitbook-plugin-multipart">multipart</a> ： 将左侧的目录分章节展示</li><li><a href="https://www.npmjs.com/package/gitbook-plugin-mygitalk">mygitalk</a>  ：  通过 GitHub issues 添加评论框</li><li><a href="https://www.npmjs.com/package/gitbook-plugin-mermaid-gb3">mermaid-gb3</a>  ： 支持 markdown 的流程图</li><li><a href="https://www.npmjs.com/package/gitbook-plugin-meta">meta</a>  ： 添加 meta 头部信息</li><li><a href="https://www.npmjs.com/package/gitbook-plugin-page-copyright">page-copyright</a> ： 页脚版权</li><li><a href="https://github.com/tinys/gitbook-plugin-pageview-count#readme">pageview-count</a> ： 阅读统计</li><li><a href="https://github.com/somax/gitbook-plugin-popup#readme">popup</a>  ：  打开新的页面查看图片</li><li><a href="https://github.com/gaearon/gitbook-plugin-prism">prism</a>  ：  代码块颜色插件 （使用的时候需要禁用掉 gitbook 自带的 <code>highlight</code> 插件并且和 <code>code</code> 插件一起使用时，需要放到 <code>code</code> 插件后，否则样式会被覆盖掉）</li><li><a href="https://www.npmjs.com/package/gitbook-plugin-rss">rss</a>  ： 生成 rss <a href="https://www.ruanyifeng.com/blog/2006/01/rss.html">如何使用 RSS </a></li><li><a href="https://www.npmjs.com/package/gitbook-plugin-readmore">readmore</a>  ： 实现博客的每一篇文章自动增加阅读更多效果,关注公众号后方可解锁全站文章</li><li><a href="https://github.com/GitbookIO/plugin-sharing">sharing-plus</a> ： 分享当前页面</li><li><a href="https://github.com/yoshidax/gitbook-plugin-splitter">splitter</a> ： 侧边栏宽度可调节</li><li><a href="https://github.com/gitbook-plugins/gitbook-plugin-search-pro">search-pro</a> ： 高级搜索，支持中文 （使用的时候需要禁用掉 <code>lunr</code> 和 <code>search</code> 插件）</li><li><a href="https://github.com/manchiyiu/gitbook-plugin-sectionx">sectionx</a>  ： 折叠模块(页面内容可折叠)</li><li><a href="https://github.com/CyberZHG/gitbook-plugin-sitemap-general">sitemap-general</a>  ： 生成站点地图</li><li><a href="https://snowdreams1006.github.io/gitbook-plugin-simple-mind-map/zh/">simple-mind-map</a>  ：  在 markdown 中生成并导出思维导图</li><li><a href="https://github.com/ly-tools/gitbook-plugin-todo">todo</a> ： 待做项</li><li><a href="https://github.com/tonyyls/gitbook-plugin-theme-fexa">theme-fexa</a>  :  网站主题，使用这个主题之后不能够在页面上进行上下文翻页</li><li><a href="https://www.npmjs.com/package/gitbook-plugin-theme-comscore">theme-comscore</a>  ： 标题和正文颜色有所区分的主题，表格也有颜色</li><li><a href="https://github.com/zhj3618/gitbook-plugin-tbfed-pagefooter">tbfed-pagefooter</a>  ： 添加页脚版权信息，这个感觉没有 <code>page-copyright</code> 好用</li></ul><h2 id="我自己的-book-json-配置信息"><a href="#我自己的-book-json-配置信息" class="headerlink" title="我自己的 book.json 配置信息"></a>我自己的 book.json 配置信息</h2><blockquote><p>注意：需要删除掉所有的注释信息</p></blockquote><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">{</span>    <span class="token property">"title"</span><span class="token operator">:</span> <span class="token string">"Alex's Notes"</span><span class="token punctuation">,</span>  <span class="token comment">// 设置书本的标题</span>    <span class="token property">"author"</span><span class="token operator">:</span> <span class="token string">"Alex"</span><span class="token punctuation">,</span>  <span class="token comment">// 作者的相关信息</span>    <span class="token property">"description"</span><span class="token operator">:</span> <span class="token string">"live and learn"</span><span class="token punctuation">,</span>  <span class="token comment">// 本书的简单描述</span>    <span class="token property">"language"</span><span class="token operator">:</span> <span class="token string">"zh-hans"</span><span class="token punctuation">,</span>  <span class="token comment">// 可使用的语言：en, ar, bn, cs, de, en, es, fa, fi, fr, he, it, ja, ko, no, pl, pt, ro, ru, sv, uk, vi, zh-hans, zh-tw 这里我选择的是简体中文 zh-hans</span>    <span class="token property">"gitbook"</span><span class="token operator">:</span> <span class="token string">"3.2.3"</span><span class="token punctuation">,</span>  <span class="token comment">// 指定使用的 gitbook 版本</span>    <span class="token property">"styles"</span><span class="token operator">:</span> <span class="token punctuation">{</span>  <span class="token comment">// 自定义页面样式</span>        <span class="token property">"website"</span><span class="token operator">:</span> <span class="token string">"./resources/styles/website.css"</span><span class="token punctuation">,</span>  <span class="token comment">// 当此时的 gitbook 输出为站点模式时使用的 css 样式</span>        <span class="token comment">// "ebook": "styles/ebook.css",  // 当此时的 gitbook 输出为 ebook 时使用的 css 样式</span>        <span class="token comment">// "pdf": "styles/pdf.css",  // 当此时的 gitbook 输出为 pdf 时使用的 css 样式</span>        <span class="token comment">// "mobi": "styles/mobi.css",</span>        <span class="token comment">// "epub": "styles/epub.css"        </span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"structure"</span><span class="token operator">:</span> <span class="token punctuation">{</span>  <span class="token comment">// 指定 Readme、Summary、Glossary 和 Languages 对应的文件名</span>        <span class="token property">"readme"</span><span class="token operator">:</span> <span class="token string">"README.md"</span><span class="token punctuation">,</span>  <span class="token comment">// 该书的介绍 （默认会创建）</span>        <span class="token property">"summary"</span><span class="token operator">:</span> <span class="token string">"SUMMARY.md"</span><span class="token punctuation">,</span>  <span class="token comment">// 该书的章节结构 （默认会创建）</span>        <span class="token comment">// "glossary": "GLOSSARY.md",  // 多语言书籍</span>        <span class="token comment">// "languages": "LANGS.md",  // 术语描述的清单</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"links"</span><span class="token operator">:</span> <span class="token punctuation">{</span>  <span class="token comment">// 在左侧导航栏添加链接信息</span>        <span class="token property">"sidebar"</span><span class="token operator">:</span> <span class="token punctuation">{</span>            <span class="token property">"我的博客"</span><span class="token operator">:</span> <span class="token string">"https://drling.xin/"</span><span class="token punctuation">,</span>            <span class="token property">"GitHub"</span><span class="token operator">:</span> <span class="token string">"https://github.com/pudongping"</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"plugins"</span><span class="token operator">:</span> <span class="token punctuation">[</span>  <span class="token comment">// 需要使用的插件列表，注释插件的时候直接在插件名称前加 “横杠 -”，比如注释 “highlight” 插件为 “-highlight”</span>        <span class="token string">"-highlight"</span><span class="token punctuation">,</span>        <span class="token string">"-lunr"</span><span class="token punctuation">,</span>        <span class="token string">"-search"</span><span class="token punctuation">,</span>        <span class="token string">"search-pro"</span><span class="token punctuation">,</span>        <span class="token string">"-sharing"</span><span class="token punctuation">,</span>        <span class="token string">"sharing-plus"</span><span class="token punctuation">,</span>        <span class="token string">"fontsettings"</span><span class="token punctuation">,</span>        <span class="token string">"livereload"</span><span class="token punctuation">,</span>        <span class="token string">"expandable-chapters-small"</span><span class="token punctuation">,</span>        <span class="token string">"chapter-fold"</span><span class="token punctuation">,</span>        <span class="token string">"splitter"</span><span class="token punctuation">,</span>        <span class="token string">"hide-element"</span><span class="token punctuation">,</span>        <span class="token string">"back-to-top-button"</span><span class="token punctuation">,</span>        <span class="token string">"favicon"</span><span class="token punctuation">,</span>        <span class="token string">"insert-logo"</span><span class="token punctuation">,</span>        <span class="token string">"pageview-count"</span><span class="token punctuation">,</span>        <span class="token string">"code"</span><span class="token punctuation">,</span>        <span class="token string">"prism"</span><span class="token punctuation">,</span>        <span class="token string">"lightbox"</span><span class="token punctuation">,</span>        <span class="token string">"github"</span><span class="token punctuation">,</span>        <span class="token string">"github-buttons"</span><span class="token punctuation">,</span>        <span class="token string">"donate"</span><span class="token punctuation">,</span>        <span class="token string">"anchor-navigation-ex"</span><span class="token punctuation">,</span>        <span class="token string">"meta"</span><span class="token punctuation">,</span>        <span class="token string">"mygitalk"</span><span class="token punctuation">,</span>        <span class="token string">"change_girls"</span><span class="token punctuation">,</span>        <span class="token string">"simple-mind-map"</span><span class="token punctuation">,</span>        <span class="token string">"image-captions"</span><span class="token punctuation">,</span>        <span class="token string">"todo"</span><span class="token punctuation">,</span>        <span class="token string">"edit-link-plus"</span><span class="token punctuation">,</span>        <span class="token string">"sitemap-general"</span><span class="token punctuation">,</span>        <span class="token string">"rss"</span><span class="token punctuation">,</span>        <span class="token string">"icp"</span><span class="token punctuation">,</span>        <span class="token string">"theme-comscore"</span><span class="token punctuation">,</span>        <span class="token string">"page-copyright"</span>    <span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token property">"pluginsConfig"</span><span class="token operator">:</span> <span class="token punctuation">{</span>        <span class="token property">"sharing"</span><span class="token operator">:</span> <span class="token punctuation">{</span>            <span class="token property">"douban"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>            <span class="token property">"facebook"</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>            <span class="token property">"google"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>            <span class="token property">"hatenaBookmark"</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>            <span class="token property">"instapaper"</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>            <span class="token property">"line"</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>            <span class="token property">"linkedin"</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>            <span class="token property">"messenger"</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>            <span class="token property">"pocket"</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>            <span class="token property">"qq"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>            <span class="token property">"qzone"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>            <span class="token property">"stumbleupon"</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>            <span class="token property">"twitter"</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>            <span class="token property">"viber"</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>            <span class="token property">"vk"</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>            <span class="token property">"weibo"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>            <span class="token property">"whatsapp"</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>            <span class="token property">"all"</span><span class="token operator">:</span> <span class="token punctuation">[</span>                <span class="token string">"douban"</span><span class="token punctuation">,</span>                <span class="token string">"facebook"</span><span class="token punctuation">,</span>                <span class="token string">"google"</span><span class="token punctuation">,</span>                <span class="token string">"hatenaBookmark"</span><span class="token punctuation">,</span>                <span class="token string">"instapaper"</span><span class="token punctuation">,</span>                <span class="token string">"line"</span><span class="token punctuation">,</span>                <span class="token string">"linkedin"</span><span class="token punctuation">,</span>                <span class="token string">"messenger"</span><span class="token punctuation">,</span>                <span class="token string">"pocket"</span><span class="token punctuation">,</span>                <span class="token string">"qq"</span><span class="token punctuation">,</span>                <span class="token string">"qzone"</span><span class="token punctuation">,</span>                <span class="token string">"stumbleupon"</span><span class="token punctuation">,</span>                <span class="token string">"twitter"</span><span class="token punctuation">,</span>                <span class="token string">"viber"</span><span class="token punctuation">,</span>                <span class="token string">"vk"</span><span class="token punctuation">,</span>                <span class="token string">"weibo"</span><span class="token punctuation">,</span>                <span class="token string">"whatsapp"</span>            <span class="token punctuation">]</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>        <span class="token property">"hide-element"</span><span class="token operator">:</span> <span class="token punctuation">{</span>            <span class="token property">"elements"</span><span class="token operator">:</span> <span class="token punctuation">[</span>                <span class="token string">"a.gitbook-link[href='https://www.gitbook.com']"</span>            <span class="token punctuation">]</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>        <span class="token property">"favicon"</span><span class="token operator">:</span> <span class="token punctuation">{</span>            <span class="token property">"shortcut"</span><span class="token operator">:</span> <span class="token string">"./resources/images/favicon.ico"</span><span class="token punctuation">,</span>            <span class="token property">"bookmark"</span><span class="token operator">:</span> <span class="token string">"./resources/images/favicon.ico"</span><span class="token punctuation">,</span>            <span class="token property">"appleTouch"</span><span class="token operator">:</span> <span class="token string">"./resources/images/favicon.png"</span><span class="token punctuation">,</span>            <span class="token property">"appleTouchMore"</span><span class="token operator">:</span> <span class="token punctuation">{</span>                <span class="token property">"120x120"</span><span class="token operator">:</span> <span class="token string">"./resources/images/apple-touch-icon-120x120.png"</span><span class="token punctuation">,</span>                <span class="token property">"180x180"</span><span class="token operator">:</span> <span class="token string">"./resources/images/apple-touch-icon-180x180.png"</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>        <span class="token property">"insert-logo"</span><span class="token operator">:</span> <span class="token punctuation">{</span>            <span class="token property">"url"</span><span class="token operator">:</span> <span class="token string">"/resources/images/favicon.png"</span><span class="token punctuation">,</span>            <span class="token property">"style"</span><span class="token operator">:</span> <span class="token string">"background: none; max-height: 30px; min-height: 30px"</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>        <span class="token property">"prism"</span><span class="token operator">:</span> <span class="token punctuation">{</span>            <span class="token property">"css"</span><span class="token operator">:</span> <span class="token punctuation">[</span>                <span class="token string">"prismjs/themes/prism-solarizedlight.css"</span>            <span class="token punctuation">]</span><span class="token punctuation">,</span>            <span class="token property">"lang"</span><span class="token operator">:</span> <span class="token punctuation">{</span>                <span class="token property">"shell"</span><span class="token operator">:</span> <span class="token string">"bash"</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>        <span class="token property">"lightbox"</span><span class="token operator">:</span> <span class="token punctuation">{</span>            <span class="token property">"sameUuid"</span><span class="token operator">:</span> <span class="token boolean">true</span>  <span class="token comment">// 开启了这个属性之后支持在弹层，左右切换图片</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>        <span class="token property">"github"</span><span class="token operator">:</span> <span class="token punctuation">{</span>            <span class="token property">"url"</span><span class="token operator">:</span> <span class="token string">"https://github.com/pudongping"</span>  <span class="token comment">// 在右上角会显示很小的 github 的官方图标</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>        <span class="token property">"github-buttons"</span><span class="token operator">:</span> <span class="token punctuation">{</span>  <span class="token comment">// 在右上角会显示 github 图标的 button</span>            <span class="token property">"buttons"</span><span class="token operator">:</span> <span class="token punctuation">[</span>                <span class="token punctuation">{</span>                    <span class="token property">"user"</span><span class="token operator">:</span> <span class="token string">"pudongping"</span><span class="token punctuation">,</span>                    <span class="token property">"repo"</span><span class="token operator">:</span> <span class="token string">"glory"</span><span class="token punctuation">,</span>                    <span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"star"</span><span class="token punctuation">,</span>                    <span class="token property">"count"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>                    <span class="token property">"size"</span><span class="token operator">:</span> <span class="token string">"small"</span>                <span class="token punctuation">}</span>            <span class="token punctuation">]</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>        <span class="token property">"donate"</span><span class="token operator">:</span> <span class="token punctuation">{</span>            <span class="token property">"alipay"</span><span class="token operator">:</span> <span class="token string">"/resources/images/donate.png"</span><span class="token punctuation">,</span>            <span class="token property">"title"</span><span class="token operator">:</span> <span class="token string">"\"若有共鸣，留言足矣，若有赞赏，何以复加？\""</span><span class="token punctuation">,</span>            <span class="token property">"button"</span><span class="token operator">:</span> <span class="token string">"赞赏"</span><span class="token punctuation">,</span>            <span class="token property">"alipayText"</span><span class="token operator">:</span> <span class="token string">"微信/支付宝/QQ"</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>        <span class="token property">"anchor-navigation-ex"</span><span class="token operator">:</span> <span class="token punctuation">{</span>            <span class="token property">"showLevel"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>  <span class="token comment">// 右上角浮层目录显示序号</span>            <span class="token property">"showGoTop"</span><span class="token operator">:</span> <span class="token boolean">false</span>  <span class="token comment">// 不显示回到顶部的图标，不建议开启这个属性，因为这个图标总是显示，不像 “back-to-top-button” 插件还可以自动显示和隐藏</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>        <span class="token property">"meta"</span><span class="token operator">:</span> <span class="token punctuation">{</span>            <span class="token property">"data"</span><span class="token operator">:</span> <span class="token punctuation">[</span>                <span class="token punctuation">{</span>                    <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"referrer"</span><span class="token punctuation">,</span>                    <span class="token property">"content"</span><span class="token operator">:</span> <span class="token string">"never"</span>                <span class="token punctuation">}</span>            <span class="token punctuation">]</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>        <span class="token property">"mygitalk"</span><span class="token operator">:</span> <span class="token punctuation">{</span>            <span class="token property">"clientID"</span><span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span>  <span class="token comment">// GitHub 开发者设置，客户端连接标识</span>            <span class="token property">"clientSecret"</span><span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span>  <span class="token comment">// GitHub 开发者设置，客户端秘钥</span>            <span class="token property">"repo"</span><span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span>  <span class="token comment">// GitHub 仓库名</span>            <span class="token property">"owner"</span><span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span>  <span class="token comment">// GitHub 仓库所有者</span>            <span class="token property">"admin"</span><span class="token operator">:</span> <span class="token punctuation">[</span>  <span class="token comment">// GitHub 仓库管理者，支持多个管理者</span>                <span class="token string">"admin-1"</span><span class="token punctuation">,</span>                <span class="token string">"admin-2"</span>            <span class="token punctuation">]</span><span class="token punctuation">,</span>            <span class="token property">"distractionFreeMode"</span><span class="token operator">:</span> <span class="token boolean">false</span>  <span class="token comment">// 类似 Facebook 评论框的全屏遮罩效果,默认值: false</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>        <span class="token property">"change_girls"</span><span class="token operator">:</span> <span class="token punctuation">{</span>            <span class="token property">"time"</span><span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span>  <span class="token comment">// 每 5 秒切换一次背景</span>            <span class="token property">"urls"</span><span class="token operator">:</span> <span class="token punctuation">[</span>                <span class="token string">"https://timgsa.baidu.com/timg?image&amp;quality=80&amp;size=b9999_10000&amp;sec=1605033246957&amp;di=d6170f1a9f0466f270ad1baee847eab9&amp;imgtype=0&amp;src=http%3A%2F%2Fpic1.win4000.com%2Fwallpaper%2Fe%2F55f26f55e9138.jpg"</span><span class="token punctuation">,</span>                <span class="token string">"https://timgsa.baidu.com/timg?image&amp;quality=80&amp;size=b9999_10000&amp;sec=1605033334002&amp;di=4ef73db6c98fb737f5a3068670160056&amp;imgtype=0&amp;src=http%3A%2F%2Fww3.sinaimg.cn%2Flarge%2Fd2e27164gw1fbmwbgf0mij21hc0u0487.jpg"</span>            <span class="token punctuation">]</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>        <span class="token property">"simple-mind-map"</span><span class="token operator">:</span> <span class="token punctuation">{</span>            <span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"markdown"</span><span class="token punctuation">,</span>            <span class="token property">"preset"</span><span class="token operator">:</span> <span class="token string">"colorful"</span><span class="token punctuation">,</span>            <span class="token property">"linkShape"</span><span class="token operator">:</span> <span class="token string">"diagonal"</span><span class="token punctuation">,</span>            <span class="token property">"autoFit"</span><span class="token operator">:</span> <span class="token boolean">true</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>        <span class="token property">"image-captions"</span><span class="token operator">:</span> <span class="token punctuation">{</span>            <span class="token property">"caption"</span><span class="token operator">:</span> <span class="token string">"sugaryesp 的笔记 - _PAGE_LEVEL_._PAGE_IMAGE_NUMBER_ - _CAPTION_"</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>        <span class="token property">"edit-link-plus"</span><span class="token operator">:</span> <span class="token punctuation">{</span>            <span class="token property">"base"</span><span class="token operator">:</span> <span class="token punctuation">{</span>                <span class="token property">"edit-link-name-1"</span><span class="token operator">:</span> <span class="token string">"edit-link-1"</span><span class="token punctuation">,</span>                <span class="token property">"edit-link-name-2"</span><span class="token operator">:</span> <span class="token string">"edit-link-2"</span>            <span class="token punctuation">}</span><span class="token punctuation">,</span>            <span class="token property">"defaultBase"</span><span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span>  <span class="token comment">// 这里填写链接地址</span>            <span class="token property">"label"</span><span class="token operator">:</span> <span class="token string">"编辑本页"</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>        <span class="token property">"sitemap-general"</span><span class="token operator">:</span> <span class="token punctuation">{</span>            <span class="token property">"prefix"</span><span class="token operator">:</span> <span class="token string">"http://notes.drling.xin/"</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>        <span class="token property">"rss"</span><span class="token operator">:</span> <span class="token punctuation">{</span>            <span class="token property">"title"</span><span class="token operator">:</span> <span class="token string">"sugaryesp 的笔记"</span><span class="token punctuation">,</span>            <span class="token property">"description"</span><span class="token operator">:</span> <span class="token string">"削个椰子皮_给个梨的笔记"</span><span class="token punctuation">,</span>            <span class="token property">"author"</span><span class="token operator">:</span> <span class="token string">"Alex"</span><span class="token punctuation">,</span>            <span class="token property">"site_url"</span><span class="token operator">:</span> <span class="token string">"http://notes.drling.xin"</span><span class="token punctuation">,</span>            <span class="token property">"feed_url"</span><span class="token operator">:</span> <span class="token string">"http://notes.drling.xin/rss"</span><span class="token punctuation">,</span>            <span class="token property">"managingEditor"</span><span class="token operator">:</span> <span class="token string">"276558492@qq.com (Alex Pu)"</span><span class="token punctuation">,</span>            <span class="token property">"webMaster"</span><span class="token operator">:</span> <span class="token string">"276558492@qq.com (Alex Pu)"</span><span class="token punctuation">,</span>            <span class="token property">"categories"</span><span class="token operator">:</span> <span class="token punctuation">[</span>                <span class="token string">"markdown"</span><span class="token punctuation">,</span>                <span class="token string">"git"</span><span class="token punctuation">,</span>                <span class="token string">"gitee"</span><span class="token punctuation">,</span>                <span class="token string">"github"</span><span class="token punctuation">,</span>                <span class="token string">"php"</span><span class="token punctuation">,</span>                <span class="token string">"python"</span><span class="token punctuation">,</span>                <span class="token string">"vue.js"</span>            <span class="token punctuation">]</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>        <span class="token property">"icp"</span><span class="token operator">:</span> <span class="token punctuation">{</span>            <span class="token property">"number"</span><span class="token operator">:</span> <span class="token string">"鄂ICP备18004705号"</span><span class="token punctuation">,</span>            <span class="token property">"link"</span><span class="token operator">:</span> <span class="token string">"https://beian.miit.gov.cn/"</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>        <span class="token property">"page-copyright"</span><span class="token operator">:</span> <span class="token punctuation">{</span>            <span class="token property">"description"</span><span class="token operator">:</span> <span class="token string">"modified at:"</span><span class="token punctuation">,</span>            <span class="token property">"signature"</span><span class="token operator">:</span> <span class="token string">"Alex"</span><span class="token punctuation">,</span>            <span class="token property">"wisdom"</span><span class="token operator">:</span> <span class="token string">"Artisan, Backend Developer &amp; overall web enthusiast"</span><span class="token punctuation">,</span>            <span class="token property">"format"</span><span class="token operator">:</span> <span class="token string">"YYYY-MM-dd hh:mm:ss"</span><span class="token punctuation">,</span>            <span class="token property">"copyright"</span><span class="token operator">:</span> <span class="token string">"Copyright &amp;#169; Alex"</span><span class="token punctuation">,</span>            <span class="token property">"timeColor"</span><span class="token operator">:</span> <span class="token string">"#666"</span><span class="token punctuation">,</span>            <span class="token property">"copyrightColor"</span><span class="token operator">:</span> <span class="token string">"#666"</span><span class="token punctuation">,</span>            <span class="token property">"utcOffset"</span><span class="token operator">:</span> <span class="token string">"8"</span><span class="token punctuation">,</span>            <span class="token property">"style"</span><span class="token operator">:</span> <span class="token string">"normal"</span><span class="token punctuation">,</span>            <span class="token property">"noPowered"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>            <span class="token property">"baseUri"</span><span class="token operator">:</span> <span class="token string">"http://notes.drling.xin/"</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="如果使用-gitbook-install-安装插件太慢，可以使用-npm-init-初始化项目，然后再使用-npm-install-安装插件"><a href="#如果使用-gitbook-install-安装插件太慢，可以使用-npm-init-初始化项目，然后再使用-npm-install-安装插件" class="headerlink" title="如果使用 gitbook install 安装插件太慢，可以使用 npm init 初始化项目，然后再使用 npm install 安装插件"></a>如果使用 gitbook install 安装插件太慢，可以使用 npm init 初始化项目，然后再使用 npm install 安装插件</h2><pre class="line-numbers language-none"><code class="language-none">cd project-directory &amp;&amp; npm init// 比如安装 livereload 插件npm install gitbook-plugin-livereload<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="这是我的-package-json"><a href="#这是我的-package-json" class="headerlink" title="这是我的 package.json"></a>这是我的 package.json</h3><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">{</span>  <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"glory"</span><span class="token punctuation">,</span>  <span class="token property">"version"</span><span class="token operator">:</span> <span class="token string">"1.0.0"</span><span class="token punctuation">,</span>  <span class="token property">"description"</span><span class="token operator">:</span> <span class="token string">"Alex's notes"</span><span class="token punctuation">,</span>  <span class="token property">"main"</span><span class="token operator">:</span> <span class="token string">" "</span><span class="token punctuation">,</span>  <span class="token property">"dependencies"</span><span class="token operator">:</span> <span class="token punctuation">{</span>    <span class="token property">"gitbook-plugin-anchor-navigation-ex"</span><span class="token operator">:</span> <span class="token string">"^1.0.14"</span><span class="token punctuation">,</span>    <span class="token property">"gitbook-plugin-back-to-top-button"</span><span class="token operator">:</span> <span class="token string">"^0.1.4"</span><span class="token punctuation">,</span>    <span class="token property">"gitbook-plugin-change_girls"</span><span class="token operator">:</span> <span class="token string">"^2.2.1"</span><span class="token punctuation">,</span>    <span class="token property">"gitbook-plugin-chapter-fold"</span><span class="token operator">:</span> <span class="token string">"^0.0.4"</span><span class="token punctuation">,</span>    <span class="token property">"gitbook-plugin-code"</span><span class="token operator">:</span> <span class="token string">"^0.1.0"</span><span class="token punctuation">,</span>    <span class="token property">"gitbook-plugin-donate"</span><span class="token operator">:</span> <span class="token string">"^1.0.2"</span><span class="token punctuation">,</span>    <span class="token property">"gitbook-plugin-edit-link-plus"</span><span class="token operator">:</span> <span class="token string">"^0.1.1"</span><span class="token punctuation">,</span>    <span class="token property">"gitbook-plugin-expandable-chapters-small"</span><span class="token operator">:</span> <span class="token string">"^0.1.7"</span><span class="token punctuation">,</span>    <span class="token property">"gitbook-plugin-favicon"</span><span class="token operator">:</span> <span class="token string">"^0.0.2"</span><span class="token punctuation">,</span>    <span class="token property">"gitbook-plugin-fontsettings"</span><span class="token operator">:</span> <span class="token string">"^2.0.0"</span><span class="token punctuation">,</span>    <span class="token property">"gitbook-plugin-github"</span><span class="token operator">:</span> <span class="token string">"^2.0.0"</span><span class="token punctuation">,</span>    <span class="token property">"gitbook-plugin-github-buttons"</span><span class="token operator">:</span> <span class="token string">"^3.0.0"</span><span class="token punctuation">,</span>    <span class="token property">"gitbook-plugin-hide-element"</span><span class="token operator">:</span> <span class="token string">"^0.0.4"</span><span class="token punctuation">,</span>    <span class="token property">"gitbook-plugin-icp"</span><span class="token operator">:</span> <span class="token string">"^0.1.2"</span><span class="token punctuation">,</span>    <span class="token property">"gitbook-plugin-image-captions"</span><span class="token operator">:</span> <span class="token string">"^3.1.0"</span><span class="token punctuation">,</span>    <span class="token property">"gitbook-plugin-insert-logo"</span><span class="token operator">:</span> <span class="token string">"^0.1.5"</span><span class="token punctuation">,</span>    <span class="token property">"gitbook-plugin-lightbox"</span><span class="token operator">:</span> <span class="token string">"^1.2.0"</span><span class="token punctuation">,</span>    <span class="token property">"gitbook-plugin-livereload"</span><span class="token operator">:</span> <span class="token string">"0.0.1"</span><span class="token punctuation">,</span>    <span class="token property">"gitbook-plugin-meta"</span><span class="token operator">:</span> <span class="token string">"^0.1.12"</span><span class="token punctuation">,</span>    <span class="token property">"gitbook-plugin-mygitalk"</span><span class="token operator">:</span> <span class="token string">"^0.2.6"</span><span class="token punctuation">,</span>    <span class="token property">"gitbook-plugin-page-copyright"</span><span class="token operator">:</span> <span class="token string">"^1.0.8"</span><span class="token punctuation">,</span>    <span class="token property">"gitbook-plugin-pageview-count"</span><span class="token operator">:</span> <span class="token string">"^1.0.1"</span><span class="token punctuation">,</span>    <span class="token property">"gitbook-plugin-prism"</span><span class="token operator">:</span> <span class="token string">"^2.4.0"</span><span class="token punctuation">,</span>    <span class="token property">"gitbook-plugin-rss"</span><span class="token operator">:</span> <span class="token string">"^3.0.2"</span><span class="token punctuation">,</span>    <span class="token property">"gitbook-plugin-search-pro"</span><span class="token operator">:</span> <span class="token string">"^2.0.2"</span><span class="token punctuation">,</span>    <span class="token property">"gitbook-plugin-sharing-plus"</span><span class="token operator">:</span> <span class="token string">"^0.0.2"</span><span class="token punctuation">,</span>    <span class="token property">"gitbook-plugin-simple-mind-map"</span><span class="token operator">:</span> <span class="token string">"^0.2.4"</span><span class="token punctuation">,</span>    <span class="token property">"gitbook-plugin-sitemap-general"</span><span class="token operator">:</span> <span class="token string">"^0.1.1"</span><span class="token punctuation">,</span>    <span class="token property">"gitbook-plugin-splitter"</span><span class="token operator">:</span> <span class="token string">"^0.0.8"</span><span class="token punctuation">,</span>    <span class="token property">"gitbook-plugin-theme-comscore"</span><span class="token operator">:</span> <span class="token string">"0.0.3"</span><span class="token punctuation">,</span>    <span class="token property">"gitbook-plugin-todo"</span><span class="token operator">:</span> <span class="token string">"^0.1.3"</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token property">"devDependencies"</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token property">"scripts"</span><span class="token operator">:</span> <span class="token punctuation">{</span>    <span class="token property">"test"</span><span class="token operator">:</span> <span class="token string">" "</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token property">"repository"</span><span class="token operator">:</span> <span class="token punctuation">{</span>    <span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"git"</span><span class="token punctuation">,</span>    <span class="token property">"url"</span><span class="token operator">:</span> <span class="token string">"git+https://github.com/pudongping/glory.git"</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token property">"keywords"</span><span class="token operator">:</span> <span class="token punctuation">[</span>    <span class="token string">"Artisan"</span>  <span class="token punctuation">]</span><span class="token punctuation">,</span>  <span class="token property">"author"</span><span class="token operator">:</span> <span class="token string">"Alex"</span><span class="token punctuation">,</span>  <span class="token property">"license"</span><span class="token operator">:</span> <span class="token string">"MIT"</span><span class="token punctuation">,</span>  <span class="token property">"bugs"</span><span class="token operator">:</span> <span class="token punctuation">{</span>    <span class="token property">"url"</span><span class="token operator">:</span> <span class="token string">"https://github.com/pudongping/glory/issues"</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token property">"homepage"</span><span class="token operator">:</span> <span class="token string">"https://github.com/pudongping/glory#readme"</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 开源 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> GitHub </tag>
            
            <tag> 博客 </tag>
            
            <tag> GitBook </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2019 年 9 月 6 日魔都上海静安考红帽 rhcsa、rhce 记录</title>
      <link href="posts/8dcd0c17.html"/>
      <url>posts/8dcd0c17.html</url>
      
        <content type="html"><![CDATA[<h1 id="2019-09-06-魔都上海静安考红帽rhce记录"><a href="#2019-09-06-魔都上海静安考红帽rhce记录" class="headerlink" title="2019-09-06 魔都上海静安考红帽rhce记录"></a>2019-09-06 魔都上海静安考红帽rhce记录</h1><h3 id="发文申明"><a href="#发文申明" class="headerlink" title="发文申明"></a>发文申明</h3><blockquote><ol><li>本文仅对自己练习 rhce 题目做一个记录，同时纪念自己考试经历。不涉及任何推广或广告。</li><li>文中题库来源于“淘宝环境”（一般参考朋友都明白指的是哪一套环境，如果确实不知道，可以给我留言，我可以贡献一份。当天去考场的时候，我们在静安考场发现考场使用的练习环境也是“淘宝环境”，不得不说题库还是比较准确的）</li><li>“淘宝环境”前 1-6 题，因为大部分可以直接使用图形化界面答题，避免通篇都是图片，前 1-6 题，只会罗列出关键步骤，具体步骤请参考“淘宝环境”配套提供的教学视频解题。本文将从第 7 题开始详细提供参考解答方案。</li></ol></blockquote><h3 id="关于练题心态"><a href="#关于练题心态" class="headerlink" title="关于练题心态"></a>关于练题心态</h3><ul><li>刚开始练题的时候，肯定会有很多不熟悉的地方，建议可以针对性的练习，可以先针对自己觉得比较难的题目练习，但一定要切记注意题与题之间的依赖关系。</li><li>一定要注意，向他人请教解题的方法仅供自己参考，寻找适合自己的方式方法，最为重要！</li><li>少听一些考生抱怨考场环境之类的，你要相信，只要是你自己练的好，再垃圾的环境，你都能够保证你可以考过。当然你也可以发现，喜欢抱怨的考生自身本来就练的不怎么样。</li><li>CE 练题，一定要让自己达到扫一眼题目就知道该题目的解题步骤这样的境界，先在脑海中思考一下答题步骤，再答题。</li><li>考试时一条命令敲完之后，强烈建议不要马上就敲回车，再检查一下自己敲的命令，确认无误之后再回车。你要相信排错比你检查要花时间多得多，并且有时候你一旦命令敲错了，可能会导致剩下的题目无法继续下去。比如：分区时，你一不小心分了 4 个主分区，然而你又不会删除分区，这样就直接导致你后面关于分区的题目无法进行。得不偿失！</li><li>考试做完之后，强烈建议先敲击 <code>sync</code> 命令强制同步数据到硬盘中，然后先关闭 system2 （客户端）再关闭 system1（服务端），开机的时候先开启 system1 （服务端）再开启 system2 （客户端），原因：system1 提供服务，system2 挂载服务，开关机顺序不正确，极大可能性会导致挂载失败！</li><li>另外，挂载 iscsi 网络存储时，一定要注意添加 <code>_netdev</code> 参数，防止因为网络原因，导致挂载失败！</li><li>习武之人，不怕练千万招，就怕一招练千万遍！祝大家考试顺利！</li></ul><h3 id="考试背景"><a href="#考试背景" class="headerlink" title="考试背景"></a>考试背景</h3><blockquote><p>考试地点：上海静安考场（上海静安区也就那么一个考场，为避免广告之嫌，具体位置请自己查询，或直接给我留言）<br>考场环境：系统为 redhat 7.0 64 位，使用 kvm 虚拟机，因此需注意硬盘为 <code>/dev/vd*</code><br>考试时间：2019 年 9 月 6 日</p></blockquote><h3 id="题库分类"><a href="#题库分类" class="headerlink" title="题库分类"></a>题库分类</h3><p>如果把 RHCE 题库做一个分类，那么我做的分类如下：</p><ul><li>postfix 邮件服务类</li><li>samba 共享服务类</li><li>nfs 共享服务类</li><li>Apache web 服务类</li><li>脚本类</li><li>iscsi 网络存储类</li><li>MariaDB 数据库类</li></ul><h3 id="本人解题整体步骤为"><a href="#本人解题整体步骤为" class="headerlink" title="本人解题整体步骤为"></a>本人解题整体步骤为</h3><ol><li> 需要安装服务，则优先安装服务</li><li> 如果需要创建文件夹，则优先创建文件夹（并且设置 selinux 上下文）</li><li> 如果需要创建服务账号，则优先创建服务账号</li><li> 写配置文件</li><li> 重启服务，并将服务加入开机启动项</li><li> 设置相应的防火墙（优先使用防火墙中的富规则过滤，因为富规则的优先级最高）</li><li> 简单测试一下</li></ol><p>RHCE 考试步骤较多，如果完全靠自己死记硬背，基本上很难通过考试，但是如果能够按照以上的解题步骤来，多半情况下不会忘记步骤，下文我将提供本人的解题步骤，以供各位参考。</p><h2 id="淘宝题库"><a href="#淘宝题库" class="headerlink" title="淘宝题库"></a>淘宝题库</h2><p>环境说明：</p><blockquote><p>system1.group8.example.com ： 172.24.8.11/24   作为服务器<br>system2.group8.example.com ： 172.24.8.12/24   作为客户端<br>server.group8.example.com 提供了YUM软件仓库，URL是 <a href="http://server.group8.example.com/yum">http://server.group8.example.com/yum</a></p></blockquote><ul><li><h5 id="system1-和-system2-需要先配置-yum-仓库"><a href="#system1-和-system2-需要先配置-yum-仓库" class="headerlink" title="system1 和 system2 需要先配置 yum 仓库"></a>system1 和 system2 需要先配置 yum 仓库</h5><code>system1</code> 和 <code>system2</code><pre class="line-numbers language-none"><code class="language-none">[root@system1 Desktop]# vim /etc/yum.repos.d/rhce.repo[root@system1 Desktop]# yum clean all[root@system1 Desktop]# yum makecache<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><img src="/medias/loading.gif" data-original="https://upload-images.jianshu.io/upload_images/14623749-2b14dc0d49d4280f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></li></ul><p>rhce.repo 文件中内容</p><pre class="line-numbers language-none"><code class="language-none">[rhce]name=rhcebaseurl=http://server.group8.example.com/yumenabled=1gpgcheck=0<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/medias/loading.gif" data-original="https://upload-images.jianshu.io/upload_images/14623749-0b49bcdc721261dc.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><hr><ul><li><h5 id="第一题：设定-SELinux"><a href="#第一题：设定-SELinux" class="headerlink" title="第一题：设定 SELinux"></a>第一题：设定 SELinux</h5>在 system1 和 system2 上要求 SELinux 的工作模式为 enforcing :</li></ul><p>1.要求系统重启后依然生效。</p><p><code>参考解题步骤：</code></p><p><code>system1</code> 和 <code>system2</code></p><pre class="line-numbers language-none"><code class="language-none">[root@system1 Desktop]# vim /etc/selinux/config <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><hr><ul><li><h5 id="第二题：配置防火墙"><a href="#第二题：配置防火墙" class="headerlink" title="第二题：配置防火墙"></a>第二题：配置防火墙</h5>请按下列要求在 system1 和 system2 上设定防火墙系统：</li></ul><ol><li>允许 group8.example.com 域的客户对 system1 和 system2 进行 ssh 访问。</li><li>禁止 my133t.org 域的客户对 system1 和 system2 进行 ssh 访问。</li><li>备注： my133t.org 是在 172.13.8.0/24 网络</li></ol><p><code>参考解题步骤：</code></p><p><code>system1</code> 和 <code>system2</code></p><pre class="line-numbers language-none"><code class="language-none">[root@system1 Desktop]# firewall-config<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/medias/loading.gif" data-original="https://upload-images.jianshu.io/upload_images/14623749-685c1f39cb89e302.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><hr><ul><li><h5 id="第三题：自定义用户环境"><a href="#第三题：自定义用户环境" class="headerlink" title="第三题：自定义用户环境"></a>第三题：自定义用户环境</h5>在系统system1和system2上创建自定义命令为qstat ，要求：</li></ul><ol><li>此自定义命令将执行以下命令：/bin/ps -Ao pid,tt,user,fname,rsz</li><li>此命令对系统中的所有用户有效</li></ol><p><code>参考解题步骤：</code></p><p><code>system1</code> 和 <code>system2</code></p><pre class="line-numbers language-none"><code class="language-none">[root@system1 Desktop]# vim /etc/profile[root@system1 Desktop]# source /etc/profile[root@system1 Desktop]# qstat<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>/etc/profile 配置文件中内容</p><pre class="line-numbers language-none"><code class="language-none">alias qstat='/bin/ps -Ao pid,tt,user,fname,rsz'<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/medias/loading.gif" data-original="https://upload-images.jianshu.io/upload_images/14623749-d5e1ff3426c65c08.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><hr><ul><li><h5 id="第四题：配置端口转发"><a href="#第四题：配置端口转发" class="headerlink" title="第四题：配置端口转发"></a>第四题：配置端口转发</h5>在系统 system1 设定端口转发，要求：</li></ul><ol><li>在 172.24.8.0/24 网络中的系统，访问 system1 的本地端口 5423 将被转发到 80</li><li>此设置必须永久有效</li></ol><p><code>参考解题步骤：</code></p><p><code>system1</code></p><p><img src="/medias/loading.gif" data-original="https://upload-images.jianshu.io/upload_images/14623749-263777cf2f595092.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p><img src="/medias/loading.gif" data-original="https://upload-images.jianshu.io/upload_images/14623749-ffcd889ca6555d28.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p><img src="/medias/loading.gif" data-original="https://upload-images.jianshu.io/upload_images/14623749-e3b7e7f525b14f0a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><hr><ul><li><h5 id="第五题：配置链路聚合"><a href="#第五题：配置链路聚合" class="headerlink" title="第五题：配置链路聚合"></a>第五题：配置链路聚合</h5>在 system2 和 system1 之间按以下要求设定一个链路：</li></ul><ol><li>此链路使用接口 eth1 和 eth2</li><li>此链路在一个接口失效时仍然能工作</li><li>此链路在 system1 使用下面的地址 172.16.3.40/255.255.255.0</li><li>此链路在 system2 使用下面的地址 172.16.3.45/255.255.255.0</li><li>此链路在系统重启之后依然保持正常状态</li></ol><p><code>参考解题步骤：</code></p><p><code>system1</code></p><pre class="line-numbers language-none"><code class="language-none">[root@system1 Desktop]# nm-connection-editor[root@system1 Desktop]# systemctl restart network[root@system1 Desktop]# ping 172.16.3.40[root@system1 Desktop]# ping 172.16.3.45<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/medias/loading.gif" data-original="https://upload-images.jianshu.io/upload_images/14623749-2d8890e00f7e7a04.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p><img src="/medias/loading.gif" data-original="https://upload-images.jianshu.io/upload_images/14623749-938e1da1dc07f101.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p><code>system2</code></p><p><img src="/medias/loading.gif" data-original="https://upload-images.jianshu.io/upload_images/14623749-e7b8bebe398a150b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><pre class="line-numbers language-none"><code class="language-none">[root@system2 Desktop]# nm-connection-editor[root@system2 Desktop]# systemctl restart network[root@system2 Desktop]# ping 172.16.3.45[root@system2 Desktop]# ping 172.16.3.40<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">{"runner":{"name":"activebackup"}}<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><hr><ul><li><h5 id="第六题：配置-IPV6-地址"><a href="#第六题：配置-IPV6-地址" class="headerlink" title="第六题：配置 IPV6 地址"></a>第六题：配置 IPV6 地址</h5>在考试系统上设定接口 eth0 使用下列 IPV6 地址：</li></ul><ol><li>system1 上的地址应该是 2003:ac18::305/64</li><li>system2 上的地址应该是 2003:ac18::30a/64</li><li>两个系统必须能与网络 2003:ac18/64 内的系统通信</li><li>地址必须在重启后依然生效</li><li>两个系统必须保持当前的 IPV4 地址并能通信</li></ol><p><code>参考解题步骤：</code></p><p><code>system1</code></p><pre class="line-numbers language-none"><code class="language-none">[root@system1 Desktop]# nm-connection-editor[root@system1 Desktop]# systemctl restart network[root@system1 Desktop]# ping6 2003:ac18::305[root@system1 Desktop]# ping6 2003:ac18::30a<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/medias/loading.gif" data-original="https://upload-images.jianshu.io/upload_images/14623749-77f2dedf4521b751.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p><img src="/medias/loading.gif" data-original="https://upload-images.jianshu.io/upload_images/14623749-ba079898f48dc40d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p><code>system2</code></p><pre class="line-numbers language-none"><code class="language-none">[root@system2 Desktop]# nm-connection-editor[root@system2 Desktop]# systemctl restart network[root@system2 Desktop]# ping6 2003:ac18::30a[root@system2 Desktop]# ping6 2003:ac18::305<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/medias/loading.gif" data-original="https://upload-images.jianshu.io/upload_images/14623749-96fb85bc8b4f6eb9.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><hr><ul><li><h5 id="第七题：配置本地邮件服务"><a href="#第七题：配置本地邮件服务" class="headerlink" title="第七题：配置本地邮件服务"></a>第七题：配置本地邮件服务</h5>在系统 system2 和 system1 上配置邮件服务，要求：</li></ul><ol><li>这些系统不接受外部发送来的邮件</li><li>在这些系统上本地发送的任何邮件都会自动路由到 mail.group8.example.com<br>从这些系统上发送的邮件显示来自于 server.group8.example.com</li><li>您可以通过发送邮件到本地用户 dave 来测试您的配置,系统 server.group8.example.com 已经配置把此用户的邮件转到URL <a href="http://server.group8.example.com/pub/received_mail/8">http://server.group8.example.com/pub/received_mail/8</a></li></ol><p><code>参考解题步骤：</code></p><p><code>system1</code> 和 <code>system2</code></p><pre class="line-numbers language-none"><code class="language-none">[root@system1 Desktop]# vim /etc/postfix/main.cf [root@system1 Desktop]# systemctl restart postfix[root@system1 Desktop]# systemctl enable postfix[root@system1 Desktop]# firewall-cmd --permanent --add-service=smtp[root@system1 Desktop]# firewall-cmd --reload[root@system1 Desktop]# echo "test content" | mail -s "testobject" dave[root@system1 Desktop]# curl http://server.group8.example.com/pub/received_mail/8<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">98 local_transport = error:local    （需单独添加）99 myorigin = server.group8.example.com314 relayhost = mail.group8.example.com<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="/medias/loading.gif" data-original="https://upload-images.jianshu.io/upload_images/14623749-39805ba385d89d4a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p><img src="/medias/loading.gif" data-original="https://upload-images.jianshu.io/upload_images/14623749-63dc4393dec4e855.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p><img src="/medias/loading.gif" data-original="https://upload-images.jianshu.io/upload_images/14623749-6b036d5df79504c9.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><ul><li><h5 id="第八题：通过-SMB-共享目录"><a href="#第八题：通过-SMB-共享目录" class="headerlink" title="第八题：通过 SMB 共享目录"></a>第八题：通过 SMB 共享目录</h5>在 system1 上配置 SMB 服务 ，要求：</li></ul><ol><li>您的 SMB 服务器必须是 STAFF 工作组的一个成员</li><li>共享 /common 目录，共享名必须为 common</li><li>只有 group8.example.com 域内的客户端可以访问 common 共享</li><li>common 必须是可以浏览的</li><li>用户 andy 必须能够读取共享中的内容，如果需要的话，验证密码是 redhat</li></ol><p><code>参考解题步骤：</code></p><p><code>system1</code></p><pre class="line-numbers language-none"><code class="language-none">[root@system1 Desktop]# yum -y install samba samba-client[root@system1 Desktop]# mkdir /common[root@system1 Desktop]# chcon -R -t samba_share_t /common[root@system1 Desktop]# id andy[root@system1 Desktop]# smbpasswd -a andy[root@system1 Desktop]# vim /etc/samba/smb.conf [root@system1 Desktop]# setsebool -P samba_enable_home_dirs on[root@system1 Desktop]# systemctl restart smb nmb[root@system1 Desktop]# systemctl enable smb nmb[root@system1 Desktop]# firewall-config<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>设置防火墙</p><pre class="line-numbers language-none"><code class="language-none">[root@system1 Desktop]# firewall-cmd --permanent --add-service=samba[root@system1 Desktop]# firewall-cmd --permanent --add-service=mountd[root@system1 Desktop]# firewall-cmd --reload<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>配置文件填写内容</p><pre class="line-numbers language-none"><code class="language-none"> 89         workgroup = STAFF321 [common]322 path = /common323 hosts allow = 172.24.8.324 browseable = yes<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/medias/loading.gif" data-original="https://upload-images.jianshu.io/upload_images/14623749-3e11066974a205bf.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p><img src="/medias/loading.gif" data-original="https://upload-images.jianshu.io/upload_images/14623749-f1e0a54d16e2d6e9.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p><img src="/medias/loading.gif" data-original="https://upload-images.jianshu.io/upload_images/14623749-fb8ea5538214efd9.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p><img src="/medias/loading.gif" data-original="https://upload-images.jianshu.io/upload_images/14623749-f24588e22d80a04a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p>验证：</p><p><code>system2</code></p><pre class="line-numbers language-none"><code class="language-none">[root@system2 Desktop]# yum -y install samba-client cifs-utils[root@system2 Desktop]# smbclient -L //172.24.8.11 -U andy<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="/medias/loading.gif" data-original="https://upload-images.jianshu.io/upload_images/14623749-b16cc12affa9a5a8.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><hr><ul><li><h5 id="第九题：配置多用户-SMB-挂载"><a href="#第九题：配置多用户-SMB-挂载" class="headerlink" title="第九题：配置多用户 SMB 挂载"></a>第九题：配置多用户 SMB 挂载</h5>在 system1 通过 SMB 共享目录 /devops ,并满足下列要求：</li></ul><ol><li>共享名为 devops</li><li>共享目录 devops 只能 group8.example.com 域中的客户端使用</li><li>共享目录 devops 必须可以被浏览</li><li>用户 silene 必须能以读的方式访问此共享，访问密码是redhat</li><li>用户 akira 必须能以读写的方式访问此共享，访问密码是redhat</li><li>此共享永久挂载在 system2.group8.example.com 上的 /mnt/dev 目录，并使用用户 silene 作为认证任何用户，可以通过用户 akira 来临时获取写的权限</li></ol><p><code>参考解题步骤：</code></p><p><code>system1</code></p><pre class="line-numbers language-none"><code class="language-none">[root@system1 Desktop]# ls -ald /devops[root@system1 Desktop]# mkdir /devops[root@system1 Desktop]# chmod o+w /devops[root@system1 Desktop]# chcon -R -t samba_share_t /devops[root@system1 Desktop]# id silene[root@system1 Desktop]# smbpasswd -a silene[root@system1 Desktop]# id akira[root@system1 Desktop]# smbpasswd -a akira[root@system1 Desktop]# vim /etc/samba/smb.conf[root@system1 Desktop]# systemctl restart smb nmb<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>配置文件填写内容</p><pre class="line-numbers language-none"><code class="language-none">325 [devops]326 path = devops327 hosts allow = 172.24.8.328 browseable = yes329 writable = no330 write list = akira<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/medias/loading.gif" data-original="https://upload-images.jianshu.io/upload_images/14623749-c70f323e9ffbf6fd.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p><code>system2</code></p><pre class="line-numbers language-none"><code class="language-none">[root@system2 Desktop]# yum -y install cifs*[root@system2 Desktop]# smbclient -L //172.24.8.11 -U silene[root@system2 Desktop]# smbclient -L //172.24.8.12 -U akira[root@system2 Desktop]# ls -ald /mnt/dev[root@system2 Desktop]# mkdir -p /mnt/dev[root@system2 Desktop]# vim /etc/fstab [root@system2 Desktop]# mount -a[root@system2 Desktop]# df -hT<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>/etc/fstab 挂载配置文件中填写内容</p><pre class="line-numbers language-none"><code class="language-none">//172.24.8.11/devops /mnt/dev cifs defaults,multiuser,username=silene,password=redhat,sec=ntlmssp 0 0<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/medias/loading.gif" data-original="https://upload-images.jianshu.io/upload_images/14623749-fb7fd346bbe27159.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p><img src="/medias/loading.gif" data-original="https://upload-images.jianshu.io/upload_images/14623749-2d02e76c2d839096.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><hr><ul><li><h5 id="第十题：配置-NFS-服务"><a href="#第十题：配置-NFS-服务" class="headerlink" title="第十题：配置 NFS 服务"></a>第十题：配置 NFS 服务</h5>在 system1 配置 NFS 服务，要求如下：</li></ul><ol><li>以只读的方式共享目录 /public ，同时只能被 group8.example.com 域中的系统访问</li><li>以读写的方式共享目录 /protected ，同时只能被 group8.example.com 域中的系统访问</li><li>访问 /protected 需要通过 Kerberos 安全加密，您可以使用下面 URL 提供的密钥<br><a href="http://server.group8.example.com/pub/keytabs/system1.keytab">http://server.group8.example.com/pub/keytabs/system1.keytab</a></li><li>目录 /protected 应该包含名为 project 拥有人为 andres 的子目录</li><li>用户 andres 能以读写方式访问 /protected/project</li></ol><p><code>参考解题步骤：</code></p><p><code>system1</code></p><pre class="line-numbers language-none"><code class="language-none">[root@system1 Desktop]# ls -ald /public[root@system1 Desktop]# mkdir /public[root@system1 Desktop]# ls -ald /protected[root@system1 Desktop]# mkdir -p /protected/project[root@system1 Desktop]# chown andres /protected/project[root@system1 Desktop]# ls -ald /protected/project[root@system1 Desktop]# chcon -R -t public_content_t /public[root@system1 Desktop]# chcon -R -t public_content_t /protected[root@system1 Desktop]# wget -O /etc/krb5.keytab http://server.group8.example.com/pub/keytabs/system1.keytab[root@system1 Desktop]# vim /etc/sysconfig/nfs [root@system1 Desktop]# vim /etc/exports[root@system1 Desktop]# systemctl restart nfs-server nfs-secure-server[root@system1 Desktop]# systemctl enable nfs-server nfs-secure-server[root@system1 Desktop]# firewall-config [root@system1 Desktop]# exportfs -r<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>/etc/sysconfig/nfs 配置文件中填写的内容</p><pre class="line-numbers language-none"><code class="language-none">13 RPCNFSDARGS="-V 4.2"<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/medias/loading.gif" data-original="https://upload-images.jianshu.io/upload_images/14623749-4913def5d21efda0.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p>/etc/exports 配置文件中填写内容</p><pre class="line-numbers language-none"><code class="language-none">1 /public 172.24.8.0/24(ro)2 /protected 172.24.8.0/24(rw,sec=krb5p)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>设置防火墙</p><pre class="line-numbers language-none"><code class="language-none">[root@system1 Desktop]# firewall-cmd --permanent --add-service=nfs[root@system1 Desktop]# firewall-cmd --permanent --add-service=rpc-bind[root@system1 Desktop]# firewall-cmd --reload<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><hr><ul><li><h5 id="第十一题：挂载一个-NFS-共享"><a href="#第十一题：挂载一个-NFS-共享" class="headerlink" title="第十一题：挂载一个 NFS 共享"></a>第十一题：挂载一个 NFS 共享</h5>在 system2 上挂载一个来自 system1.group8.example.com 的 NFS 共享,并符合下列要求：</li></ul><ol><li>/public 挂载在下面的目录上 /mnt/nfsmount</li><li>/protected 挂载在下面的目录上 /mnt/nfssecure 并使用安全的方式，密钥下载 URL 如下：<a href="http://server.group8.example.com/pub/keytabs/system2.keytab">http://server.group8.example.com/pub/keytabs/system2.keytab</a></li><li>用户 andres 能够在 /mnt/nfssecure/project 上创建文件</li><li>这些文件系统在系统启动时自动挂载</li></ol><p><code>参考解题步骤：</code></p><p><code>system2</code></p><pre class="line-numbers language-none"><code class="language-none">[root@system2 Desktop]# showmount -e 172.24.8.11[root@system2 Desktop]# systemctl restart nfs-secure[root@system2 Desktop]# systemctl enable nfs-secure[root@system2 Desktop]# ls -ald /mnt/nfsmount[root@system2 Desktop]# mkdir -p /mnt/nfsmount[root@system2 Desktop]# ls -ald /mnt/nfssecure[root@system2 Desktop]# mkdir -p /mnt/nfssecure[root@system2 Desktop]# wget -O /etc/krb5.keytab http://server.group8.example.com/pub/keytabs/system2.keytab[root@system2 Desktop]# vim /etc/fstab [root@system2 Desktop]# mount -a[root@system2 Desktop]# df -hT<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>/etc/fstab 挂载配置文件填写的内容</p><pre class="line-numbers language-none"><code class="language-none">172.24.8.11:/public /mnt/nfsmount nfs defaults 0 0172.24.8.11:/protected /mnt/nfssecure nfs defaults,sec=krb5p,v4.2 0 0<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="/medias/loading.gif" data-original="https://upload-images.jianshu.io/upload_images/14623749-24db5060b6f9e1e7.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><hr><ul><li><h5 id="第十二题：实现一个-web-服务器"><a href="#第十二题：实现一个-web-服务器" class="headerlink" title="第十二题：实现一个 web 服务器"></a>第十二题：实现一个 web 服务器</h5>在 system1 上配置一个站点 <a href="http://system1.group8.example.com/%EF%BC%8C%E7%84%B6%E5%90%8E%E6%89%A7%E8%A1%8C%E4%B8%8B%E8%BF%B0%E6%AD%A5%E9%AA%A4%EF%BC%9A">http://system1.group8.example.com/，然后执行下述步骤：</a></li></ul><ol><li>从 <a href="http://server.group8.example.com/pub/system1.html">http://server.group8.example.com/pub/system1.html</a> 下载文件，并且将文件重名为 index.html 不要修改此文件的内容</li><li>将文件 index.html 拷贝到您的 web 服务器的 DocumentRoot 目录下</li><li>来自于 group8.example.com 域的客户端可以访问此 web 服务</li><li>来自于 my133t.org 域的客户端拒绝访问此 web 服务</li></ol><p><code>参考解题步骤：</code></p><p><code>system1</code></p><pre class="line-numbers language-none"><code class="language-none">[root@system1 Desktop]# yum -y install httpd[root@system1 Desktop]# cp /usr/share/doc/httpd-2.4.6/httpd-vhosts.conf /etc/httpd/conf.d/[root@system1 Desktop]# cd /var/www/html[root@system1 html]# wget -O index.html http://server.group8.example.com/pub/system1.html[root@system1 html]# vim /etc/httpd/conf.d/httpd-vhosts.conf[root@system1 html]# systemctl restart httpd[root@system1 html]# systemctl enable httpd[root@system1 html]# firewall-config<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/medias/loading.gif" data-original="https://upload-images.jianshu.io/upload_images/14623749-1dfde17bdf2ad2be.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p>/etc/httpd/conf.d/httpd-vhosts.conf 网站配置文件中应该写的内容</p><pre class="line-numbers language-none"><code class="language-none">&lt;VirtualHost *:80&gt;    DocumentRoot "/var/www/html"    ServerName system1.group8.example.com&lt;/VirtualHost&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/medias/loading.gif" data-original="https://upload-images.jianshu.io/upload_images/14623749-ee2ee212b0c01df7.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p><img src="/medias/loading.gif" data-original="https://upload-images.jianshu.io/upload_images/14623749-b369ae9ea1b88007.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><hr><ul><li><h5 id="第十三题：配置安全-web-服务"><a href="#第十三题：配置安全-web-服务" class="headerlink" title="第十三题：配置安全 web 服务"></a>第十三题：配置安全 web 服务</h5>为站点 <a href="http://system1.group8.example.com/">http://system1.group8.example.com</a> 配置 TLS 加密：</li></ul><ol><li>一个已签名证书从 <a href="http://server.group8.example.com/pub/tls/certs/system1.crt">http://server.group8.example.com/pub/tls/certs/system1.crt</a> 获取</li><li>此证书的密钥从 <a href="http://server.group8.example.com/pub/tls/private/system1.key">http://server.group8.example.com/pub/tls/private/system1.key</a> 获取</li><li>此证书的签名授权信息从 <a href="http://server.group8.example.com/pub/tls/certs/ssl-ca.crt">http://server.group8.example.com/pub/tls/certs/ssl-ca.crt</a> 获取</li></ol><p><code>参考解题步骤：</code></p><p><code>system1</code></p><pre class="line-numbers language-none"><code class="language-none">[root@system1 Desktop]# yum -y install mod_ssl[root@system1 Desktop]# cd /var/www/html[root@system1 html]# wget http://server.group8.example.com/pub/tls/certs/system1.crt[root@system1 html]# wget http://server.group8.example.com/pub/tls/private/system1.key[root@system1 html]# wget http://server.group8.example.com/pub/tls/certs/ssl-ca.crt[root@system1 html]# vim /etc/httpd/conf.d/ssl.conf    （用于参考的配置文件）[root@system1 html]# vim /etc/httpd/conf.d/httpd-vhosts.conf[root@system1 html]# setsebool -P httpd_read_user_content=on[root@system1 html]# systemctl restart httpd<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>/etc/httpd/conf.d/httpd-vhosts.conf 网站配置文件中应该写的内容</p><pre class="line-numbers language-none"><code class="language-none">&lt;VirtualHost *:443&gt;SSLEngine onSSLProtocol all -SSLv2SSLCipherSuite HIGH:MEDIUM:!aNULL:!MD5SSLHonorCipherOrder on    DocumentRoot "/var/www/html"    ServerName system1.group8.example.comSSLCertificateFile /var/www/html/system1.crtSSLCertificateKeyFile /var/www/html/system1.keySSLCACertificateFile /var/www/html/ssl-ca.crt&lt;/VirtualHost&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/medias/loading.gif" data-original="https://upload-images.jianshu.io/upload_images/14623749-99e658186dfb348a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="/etc/httpd/conf.d/ssl.conf 参考的配置文件"></p><p><img src="/medias/loading.gif" data-original="https://upload-images.jianshu.io/upload_images/14623749-1368eb4ebabcab95.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><hr><ul><li><h5 id="第十四题：配置虚拟主机"><a href="#第十四题：配置虚拟主机" class="headerlink" title="第十四题：配置虚拟主机"></a>第十四题：配置虚拟主机</h5>在 system1 上扩展您的 web 服务器，为站点 <a href="http://www8.group8.example.com/">http://www8.group8.example.com</a> 创建一个虚拟主机，然后执行下述步骤：</li></ul><ol><li>设置 DocumentRoot 为 /var/www/virtual</li><li>从 <a href="http://server.group8.example.com/pub/www8.html">http://server.group8.example.com/pub/www8.html</a> 下载文件重名为 index.html ,不要对文件 index.html 的内容做任何修改</li><li>将文件 index.html 放到虚拟主机的 DocumentRoot 目录下</li><li>确保 andy 用户能够在 /var/www/virtual 目录下创建文件</li></ol><p>注意：原站点 <a href="http://system1.group8.example.com/">http://system1.group8.example.com</a> 必须仍然能够访问，名称服务器 server.group8.example.com 已经提供对主机名 www8.group8.example.com 的域名解析</p><p><code>参考解题步骤：</code></p><p><code>system1</code></p><pre class="line-numbers language-none"><code class="language-none">[root@system1 Desktop]# mkdir /var/www/virtual[root@system1 Desktop]# cd /var/www/virtual[root@system1 virtual]# getfacl /var/www/virtual[root@system1 virtual]# setfacl -Rm u:andy:rwx /var/www/virtual[root@system1 virtual]# getfacl /var/www/virtual[root@system1 virtual]# wget -O index.html http://server.group8.example.com/pub/www8.html[root@system1 virtual]# vim /etc/httpd/conf.d/httpd-vhosts.conf[root@system1 virtual]# systemctl restart httpd<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>/etc/httpd/conf.d/httpd-vhosts.conf 配置文件中填写内容</p><pre class="line-numbers language-none"><code class="language-none">&lt;VirtualHost *:80&gt;    DocumentRoot "/var/www/virtual"    ServerName www8.group8.example.com&lt;/VirtualHost&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/medias/loading.gif" data-original="https://upload-images.jianshu.io/upload_images/14623749-a5cc2d08a9cba270.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><hr><ul><li><h5 id="第十五题：配置-web-内容的访问"><a href="#第十五题：配置-web-内容的访问" class="headerlink" title="第十五题：配置 web 内容的访问"></a>第十五题：配置 web 内容的访问</h5>在您的 system1 上的 web 服务器的 DocumentRoot 目录下，创建一个名为 private 的目录，要求如下：</li></ul><ol><li>从 <a href="http://server.group8.example.com/pub/private.html">http://server.group8.example.com/pub/private.html</a> 下载一个文件副本到这个目录，并且重命名为 index.html</li><li>不要对这个文件的内容做任何修改</li><li>从 system1 上，任何人都可以浏览 private 的内容，但是从其它系统不能访问这个目录的内容。</li></ol><p><code>参考解题步骤：</code></p><p><code>system1</code></p><pre class="line-numbers language-none"><code class="language-none">[root@system1 virtual]# cd /var/www/html[root@system1 html]# mkdir private[root@system1 html]# cd private/[root@system1 private]# wget -O index.html http://server.group8.example.com/pub/private.html[root@system1 private]# vim /etc/httpd/conf/httpd.conf  （用于参考的配置文件）[root@system1 private]# vim /etc/httpd/conf.d/httpd-vhosts.conf[root@system1 private]# systemctl restart httpd<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>/etc/httpd/conf.d/httpd-vhosts.conf 配置文件中填写内容</p><pre class="line-numbers language-none"><code class="language-none">&lt;Directory "/var/www/html/private"&gt;    AllowOverride none    Require all denied    Require local&lt;/Directory&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/medias/loading.gif" data-original="https://upload-images.jianshu.io/upload_images/14623749-45144d1a5ab0c065.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><hr><ul><li><h5 id="第十六题：实现动态-WEB-内容"><a href="#第十六题：实现动态-WEB-内容" class="headerlink" title="第十六题：实现动态 WEB 内容"></a>第十六题：实现动态 WEB 内容</h5>在 system1 上配置提供动态 web 内容，要求：</li></ul><ol><li>动态内容由名为 wsgi.group8.example.com 的虚拟主机提供</li><li>虚拟主机侦听在端口 8909</li><li>从 <a href="http://server.group8.example.com/pub/webinfo.wsgi">http://server.group8.example.com/pub/webinfo.wsgi</a> 下载一个脚本，然后放在适当的位置，无论如何不要求修改此文件的内容</li><li>客户端访问 <a href="http://wsgi.group8.example.com:8909/">http://wsgi.group8.example.com:8909/</a> 时，应该接收到动态生成的 web 页面</li><li>此 <a href="http://wsgi.group8.example.com:8909/">http://wsgi.group8.example.com:8909/</a> 必须能被 group8.example.com 域内的所有系统访问</li></ol><p><code>参考解题步骤：</code></p><p><code>system1</code></p><pre class="line-numbers language-none"><code class="language-none">[root@system1 private]# cd /var/www/html[root@system1 html]# yum -y install mod_wsgi[root@system1 html]# wget http://server.group8.example.com/pub/webinfo.wsgi[root@system1 html]#  vim /etc/httpd/conf.d/httpd-vhosts.conf[root@system1 html]# semanage port -a -t http_port_t -p tcp 8909[root@system1 html]# systemctl restart httpd<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>/etc/httpd/conf.d/httpd-vhosts.conf 配置文件中填写内容</p><pre class="line-numbers language-none"><code class="language-none">listen 8909&lt;VirtualHost *:8909&gt;    WSGIScriptAlias / /var/www/html/webinfo.wsgi    ServerName wsgi.group8.example.com&lt;/VirtualHost&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/medias/loading.gif" data-original="https://upload-images.jianshu.io/upload_images/14623749-5c83ffa719496429.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p><img src="/medias/loading.gif" data-original="https://upload-images.jianshu.io/upload_images/14623749-f9ba955a92c22aed.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><hr><ul><li><h5 id="第十七题：创建一个脚本"><a href="#第十七题：创建一个脚本" class="headerlink" title="第十七题：创建一个脚本"></a>第十七题：创建一个脚本</h5>在 system1 上创建一个名为 /root/foo.sh 的脚本，让其提供下列特性：</li></ul><ol><li>当运行 /root/foo.sh redhat ,输出为 fedora</li><li>当运行 /root/foo.sh fedora ,输出为 redhat</li><li>当没有任何参数或者参数不是 redhat 或者 fedora 时，其错误输出产生以下的信息：<br>/root/foo.sh redhat | fedora</li></ol><p><code>参考解题步骤：</code></p><p><code>system1</code></p><pre class="line-numbers language-none"><code class="language-none">[root@system1 html]# cd ~[root@system1 ~]# vim /root/foo.sh[root@system1 ~]# chmod a+x /root/foo.sh<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>/root/foo.sh 文件中需要填写的内容</p><pre class="line-numbers language-none"><code class="language-none">case $1 inredhat)echo 'fedora';;fedora)echo 'redhat';;*)echo '/root/foo.sh redhat | fedora';;esac<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/medias/loading.gif" data-original="https://upload-images.jianshu.io/upload_images/14623749-b8c4cc35ec38c4da.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><hr><ul><li><h5 id="第十八题：创建一个添加用户的脚本"><a href="#第十八题：创建一个添加用户的脚本" class="headerlink" title="第十八题：创建一个添加用户的脚本"></a>第十八题：创建一个添加用户的脚本</h5>在 system1 上创建一个脚本，名为 /root/batchusers ,此脚本能实现为系统 system1 创建本地用户，并且这些用户的用户名来自一个包含用户名列表的文件，同时满足下列要求：</li></ul><ol><li>此脚本要求提供一个参数，此参数就是包含用户名列表的的文件</li><li>如果没有提供参数，此脚本应该给出下面的提示信息 Usage: /root/batchusers userfile 然后退出并返回相应的值</li><li>如果提供一个不存在的文件名，此脚本应该给出下面的提示信息 Input file not found 然后退出并返回相应的值</li><li>创建的用户登录 shell 为 /bin/false</li><li>此脚本不需要为用户设置密码</li><li>您可以从下面的 URL 获取用户名列表作为测试用 <a href="http://server.group8.example.com/pub/userlist">http://server.group8.example.com/pub/userlist</a></li></ol><p><code>参考解题步骤：</code></p><p><code>system1</code></p><pre class="line-numbers language-none"><code class="language-none">[root@system1 ~]# cd ~[root@system1 ~]# wget http://server.group8.example.com/pub/userlist[root@system1 ~]# more userlist[root@system1 ~]# vim /root/batchusers[root@system1 ~]# chmod a+x /root/batchusers<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>/root/batchusers 文件中需要填写的内容</p><pre class="line-numbers language-none"><code class="language-none">if [ $# -eq 0 ];thenecho 'Usage: /root/batchusers userfile'exit 1fiif [ ! -f $1 ];thenecho 'Input file not found'exit 1fiwhile read linedouseradd -s /bin/false $linedone &lt; $1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><ul><li><h5 id="第十九题：配置-ISCSI-服务端"><a href="#第十九题：配置-ISCSI-服务端" class="headerlink" title="第十九题：配置 ISCSI 服务端"></a>第十九题：配置 ISCSI 服务端</h5>配置 system1 提供一个 ISCSI 服务 磁盘名为 iqn.2014-08.com.example.group8:system1 ，并符合下列要求：</li></ul><ol><li>服务端口为 3260</li><li>使用 iscsi_store 作其后端逻辑卷名称，其大小为 3G</li><li>此服务只能被 system2.group8.example.com 访问</li></ol><p><code>参考解题步骤：</code></p><p><code>system1</code></p><pre class="line-numbers language-none"><code class="language-none">[root@system1 ~]# yum -y install target*[root@system1 ~]# ls -ald /dev/sd*[root@system1 ~]# fdisk /dev/sda[root@system1 ~]# partprobe[root@system1 ~]# partprobe[root@system1 ~]# ls -ald /dev/sd*[root@system1 ~]# pvcreate /dev/sda3[root@system1 ~]# vgcreate rhce /dev/sda3[root@system1 ~]# lvcreate -l 100%VG -n iscsi_store rhce[root@system1 ~]# lvscan[root@system1 ~]# targetcli[root@system1 ~]# systemctl restart target[root@system1 ~]# systemctl enable target[root@system1 ~]# firewall-config<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/medias/loading.gif" data-original="https://upload-images.jianshu.io/upload_images/14623749-57e18e04cca64462.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p><img src="/medias/loading.gif" data-original="https://upload-images.jianshu.io/upload_images/14623749-763a51805201d72d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p><img src="/medias/loading.gif" data-original="https://upload-images.jianshu.io/upload_images/14623749-5814e618608d527d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p>targetcli 配置命令如下</p><pre class="line-numbers language-none"><code class="language-none">/&gt; ls/&gt; cd /backstores/block/backstores/block&gt; create disk0 /dev/rhce/iscsi_store/backstores/block&gt; cd /iscsi /iscsi&gt; ls/iscsi&gt; create iqn.2014-08.com.example.group8:system1/iscsi&gt; ls/iscsi&gt; cd iqn.2014-08.com.example.group8:system1/tpg1/acls /iscsi/iqn.20...em1/tpg1/acls&gt; create iqn.2014-08.com.example.group8:system2/iscsi/iqn.20...em1/tpg1/acls&gt; cd ../luns /iscsi/iqn.20...em1/tpg1/luns&gt; create /backstores/block/disk0/iscsi/iqn.20...em1/tpg1/luns&gt; cd ../portals//iscsi/iqn.20.../tpg1/portals&gt; create 172.24.8.11 3260/iscsi/iqn.20.../tpg1/portals&gt; ls/iscsi/iqn.20.../tpg1/portals&gt; delete 0.0.0.0 3260/iscsi/iqn.20.../tpg1/portals&gt; create 172.24.8.11 3260/iscsi/iqn.20.../tpg1/portals&gt; ls/iscsi/iqn.20.../tpg1/portals&gt; exit<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/medias/loading.gif" data-original="https://upload-images.jianshu.io/upload_images/14623749-b42054fbaadaadd4.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><hr><ul><li><h5 id="第二十题：配置-iSCISI-的客户端"><a href="#第二十题：配置-iSCISI-的客户端" class="headerlink" title="第二十题：配置 iSCISI 的客户端"></a>第二十题：配置 iSCISI 的客户端</h5>配置 system2 使其能连接在 system1 上提供的 iqn.2014-08.com.example.group8:system1,并符合以下要求：</li></ul><ol><li>iSCISI 设备在系统启动的期间自动加载</li><li>块设备 iSCISI 上包含一个大小为 2100 MiB 的分区，并格式化为 ext4</li><li>此分区挂载在 /mnt/data 上，同时在系统启动的期间自动挂载</li></ol><p><code>参考解题步骤：</code></p><p><code>system2</code></p><pre class="line-numbers language-none"><code class="language-none">[root@system2 Desktop]# yum -y install iscsi-*[root@system2 Desktop]# vim /etc/iscsi/initiatorname.iscsi [root@system2 Desktop]# systemctl restart iscsi iscsid[root@system2 Desktop]# systemctl enable iscsi iscsid[root@system2 Desktop]# lsblk[root@system2 Desktop]# iscsiadm -m discovery -t st -p 172.24.8.11[root@system2 Desktop]# iscsiadm -m node -T iqn.2014-08.com.example.group8:system1 -l[root@system2 Desktop]# lsblk[root@system2 Desktop]# ls -ald /dev/sd*[root@system2 Desktop]# fdisk /dev/sdb[root@system2 Desktop]# ls -ald /dev/sd*[root@system2 Desktop]# mkfs   （连续按两次 type 键）[root@system2 Desktop]# mkfs.ext4 /dev/sdb1[root@system2 Desktop]# blkid /dev/sdb1[root@system2 Desktop]# ls -ald /mnt/data[root@system2 Desktop]# mkdir -p /mnt/data[root@system2 Desktop]# vim /etc/fstab [root@system2 Desktop]# mount -a[root@system2 Desktop]# df -hT<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>/etc/iscsi/initiatorname.iscsi 配置文件中的内容如下</p><pre class="line-numbers language-none"><code class="language-none">InitiatorName=iqn.2014-08.com.example.group8:system2<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>/etc/fstab 挂载配置文件内容如下</p><pre class="line-numbers language-none"><code class="language-none">UUID="82e0d1be-f690-45e2-8dfc-7aa548df3fff" /mnt/data ext4 defaults,_netdev 0 0<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/medias/loading.gif" data-original="https://upload-images.jianshu.io/upload_images/14623749-720bb16f0fdc7c93.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p><img src="/medias/loading.gif" data-original="https://upload-images.jianshu.io/upload_images/14623749-3cba38302ca24aeb.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><hr><ul><li><h5 id="第二十一题：配置一个数据库"><a href="#第二十一题：配置一个数据库" class="headerlink" title="第二十一题：配置一个数据库"></a>第二十一题：配置一个数据库</h5>在 system1上创建一个 Maria DB 数据库，名为 Contacts，要求：</li></ul><ol><li>数据库应该包含来自数据库复制的内容，复制文件的URL为 <a href="http://server.group8.example.com/pub/users.mdb">http://server.group8.example.com/pub/users.mdb</a> ，数据库只能被 localhost 访问</li><li>除了 root 用户，此数据库只能被用户 Mary 查询，此用户密码为 redhat</li><li>root 用户的数据库密码为 redhat ，同时不允许空密码登录</li></ol><p><code>参考解题步骤：</code></p><p><code>system1</code></p><pre class="line-numbers language-none"><code class="language-none">[root@system1 ~]# yum -y install mariadb mariadb-client mariadb-server[root@system1 ~]# wget http://server.group8.example.com/pub/users.mdb[root@system1 ~]# vim /etc/my.cnf[root@system1 ~]# systemctl restart mariadb [root@system1 ~]# systemctl enable mariadb[root@system1 ~]# mysql_secure_installation      （交互界面全部选择 y ）[root@system1 ~]# mysql -u root -p<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">19 skip-networking=1    （请自行添加）<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/medias/loading.gif" data-original="https://upload-images.jianshu.io/upload_images/14623749-5b4118b997756732.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p>进入 MariaDB 数据库使用的命令如下</p><pre class="line-numbers language-none"><code class="language-none">MariaDB [(none)]&gt; show databases;MariaDB [(none)]&gt; create database Contacts;MariaDB [(none)]&gt; use Contacts;MariaDB [Contacts]&gt; source users.mdb;MariaDB [Contacts]&gt; show tables;MariaDB [Contacts]&gt; grant select on Contacts.* to Mary@'localhost' identified by 'redhat';MariaDB [Contacts]&gt; exit<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><ul><li><h5 id="第二十一题：数据库查询"><a href="#第二十一题：数据库查询" class="headerlink" title="第二十一题：数据库查询"></a>第二十一题：数据库查询</h5>在 system1 上使用数据库 Contacts ，并使用相应的 SQL 查询以回答下列问题：</li></ul><ol><li>密码是 fadora 的人的名字是什么？</li><li>有多少人的姓名是 John ，同时居住在 Santa Clara ？</li></ol><p>直接贴出 sql 语句如下，仅供参考，考试时在这里的变数还是很大的，建议不要死记硬背。</p><pre class="line-numbers language-none"><code class="language-none">select n.firstname,n.lastname from u_name  as n left join u_passwd as p where n.userid = p.uid and p.password = 'fedora';select count(*) from u_name as n left join u_loc as l where n.userid = l.uid and n.firstname = 'John' and l.location = 'Santa Clara';<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> 红帽认证 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo-blog 博客开源</title>
      <link href="posts/e3e08109.html"/>
      <url>posts/e3e08109.html</url>
      
        <content type="html"><![CDATA[<h1 id="博客开源"><a href="#博客开源" class="headerlink" title="博客开源"></a>博客开源</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>折腾了一个星期左右，总算是把我的个人博客给完善了，为了回馈开源，我会把我自己修改后的且完善的 <code>blog</code> 网站源码开源。<br>代码都是源码，您可以直接下载我的博客源码，然后将根目录下的 <code>/_config.yml</code> 和 <code>/themes/hexo-theme-matery/_config.yml</code><br>这两个配置文件中的信息修改成您的信息就可以部署成和我一摸一样的博客了。是不是很方便？这对于一些想写博客，但是又不想太折腾，<br>并且对美观有一定要求的朋友来说，简直是爽的不要不要的。😜 <a href="https://github.com/pudongping/pudongping.github.io">点我立即下载我的博客源码</a></p><h2 id="关于我的博客项目"><a href="#关于我的博客项目" class="headerlink" title="关于我的博客项目"></a>关于我的博客项目</h2><p>这个博客，我是基于 <strong><a href="https://hexo.io/zh-cn/docs/">Hexo</a></strong> 框架搭建，并且用到 <strong><a href="https://github.com/blinkfox/hexo-theme-matery">hexo-theme-matery</a></strong> 主题，<br>在此基础上做了不少的修改，增加了一些新的特性和功能。我的博客访问地址为：<a href="http://www.pudongping.com/">http://www.pudongping.com</a> 或者访问 <a href="https://pudongping.github.io/">https://pudongping.github.io</a></p><h2 id="创建项目时，各个软件版本介绍"><a href="#创建项目时，各个软件版本介绍" class="headerlink" title="创建项目时，各个软件版本介绍"></a>创建项目时，各个软件版本介绍</h2><ul><li>修改项目时间为 2021 年 6 月 5 日</li><li>使用的 node.js 版本为：v16.2.0</li><li>使用的 npm 版本为：7.13.0</li><li>使用的 hexo 版本为：5.4.0</li><li>使用的 hexo-theme-matery 皮肤版本为：v2.0.0</li><li>其他的依赖包见 package.json 文件，具体版本号见 package-lock.json 文件。</li></ul><h2 id="如何搭建和我一摸一样的博客？"><a href="#如何搭建和我一摸一样的博客？" class="headerlink" title="如何搭建和我一摸一样的博客？"></a>如何搭建和我一摸一样的博客？</h2><blockquote><p>前提你需要先安装 <code>git</code> 和 <code>node.js</code> （安装好 node.js 之后，会自动安装 npm，强烈建议使用 <a href="https://github.com/nvm-sh/nvm">nvm</a> 安装 node.js 以方便管理多个版本的 node.js）</p></blockquote><ul><li>安装 <code>hexo-cli</code></li></ul><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"># 全局安装 hexonpm install -g hexo-cli# 局部安装 hexonpm install hexo<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>直接使用 <code>git</code> 拉取项目并进入相应的文件目录</li></ul><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"># 使用 GitHub 地址git clone https://github.com/pudongping/pudongping.github.io.git blog# 使用 gitee 地址 （要是代码拉取不下来的话，建议使用 gitee 地址）git clone https://gitee.com/pudongping/pudongping.git blog<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>切换分支</li></ul><p>建议切换到 <code>hexo</code> 分支，方便你自定义你的博客。</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"># 如果你想实现和我一摸一样的博客的话，你可以直接切换到 `main` 分支，这是我自己完整的博客源码分支，其中包含了我所有的博客文章git checkout main# 如果你只想获取我所有的修改，并基于此基础之上改成自己的博客的话，那么可以切换到 `hexo` 分支，这个分支上是我博客修改的基础分支，# 在此分支基础之上你可以添加你自己的任何修改。（不包含我所有的博客文章和我自定义的其他修改）git checkout hexo<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>安装依赖插件</li></ul><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">npm install<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li><p>修改根目录下的 <code>/_config.yml</code> 和 <code>/themes/hexo-theme-matery/_config.yml</code> 的这两个配置文件，改成自己的信息</p></li><li><p>编译源代码</p></li></ul><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"># 清除生成的静态文件hexo cl# 生成静态页面至 public 页面 （如果只是本地预览，可不进行此步骤）hexo g# 生成本地预览hexo s# 如果需要生成 github-pages 的话，则执行以下命令 （需要安装 npm install hexo-deployer-git --save 插件包）hexo d<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>本地访问项目</li></ul><p>直接在浏览器中访问 <a href="http://localhost:4000/]">http://localhost:4000/</a> 即可。部署完毕！</p><h2 id="特性"><a href="#特性" class="headerlink" title="特性"></a>特性</h2><h3 id="hexo-theme-matery-主题特性"><a href="#hexo-theme-matery-主题特性" class="headerlink" title="hexo-theme-matery 主题特性"></a>hexo-theme-matery 主题特性</h3><ul><li>简单漂亮，文章内容美观易读</li><li><a href="https://material.io/">Material Design</a> 设计</li><li>响应式设计，博客在桌面端、平板、手机等设备上均能很好的展现</li><li>首页轮播文章及每天动态切换 <code>Banner</code> 图片</li><li>瀑布流式的博客文章列表（文章无特色图片时会有 <code>24</code> 张漂亮的图片代替）</li><li>时间轴式的归档页</li><li><strong>词云</strong>的标签页和<strong>雷达图</strong>的分类页</li><li>丰富的关于我页面（包括关于我、文章统计图、我的项目、我的技能、相册等）</li><li>可自定义的数据的友情链接页面</li><li>支持文章置顶和文章打赏</li><li>支持 <code>MathJax</code></li><li><code>TOC</code> 目录</li><li>可设置复制文章内容时追加版权信息</li><li>可设置阅读文章时做密码验证</li><li><a href="https://gitalk.github.io/">Gitalk</a>、<a href="https://imsun.github.io/gitment/">Gitment</a>、<a href="https://valine.js.org/">Valine</a> 和 <a href="https://disqus.com/">Disqus</a> 评论模块（推荐使用 <code>Gitalk</code>）</li><li>集成了<a href="http://busuanzi.ibruce.info/">不蒜子统计</a>、谷歌分析（<code>Google Analytics</code>）和文章字数统计等功能</li><li>支持在首页的音乐播放和视频播放功能</li><li>支持<code>emoji</code>表情，用<code>markdown emoji</code>语法书写直接生成对应的能<strong>跳跃</strong>的表情。</li><li>支持 <a href="http://www.daovoice.io/">DaoVoice</a>、<a href="https://www.tidio.com/">Tidio</a> 在线聊天功能。</li></ul><h3 id="修改或增加的特性功能"><a href="#修改或增加的特性功能" class="headerlink" title="修改或增加的特性功能"></a>修改或增加的特性功能</h3><ul><li>添加 emoji 表情支持</li><li>添加 RSS 订阅支持</li><li>添加站点地图支持</li><li>css、js资源增加 cdn 加速</li><li>底部增加备案号信息</li><li>修改了主题颜色</li><li>处理了图片因防盗链无法显示问题</li><li>添加了动态改变页面标签的功能</li><li>添加了鼠标点击烟花爆炸特效</li><li>添加了鼠标点击出现自定义文字浮层特效</li><li>添加了页面樱花飘落动态特效</li><li>添加了页面雪花飘落动态特效</li><li>优化文章的 url</li><li>图片懒加载</li><li>添加了在<strong>关于我</strong>页面写简历功能</li><li>修改了 banner 图随机轮播</li></ul><h2 id="博客截图"><a href="#博客截图" class="headerlink" title="博客截图"></a>博客截图</h2><p><img src="/medias/loading.gif" data-original="https://pudongping.github.io/medias/sample/page.png" alt="首页"><br><img src="/medias/loading.gif" data-original="https://pudongping.github.io/medias/sample/articles-list.png" alt="文章列表"><br><img src="/medias/loading.gif" data-original="https://pudongping.github.io/medias/sample/articles-list-1.png" alt="文章列表"><br><img src="/medias/loading.gif" data-original="https://pudongping.github.io/medias/sample/article-detail.png" alt="文章详情"><br><img src="/medias/loading.gif" data-original="https://pudongping.github.io/medias/sample/article-detail-1.png" alt="文章详情"><br><img src="/medias/loading.gif" data-original="https://pudongping.github.io/medias/sample/tags.png" alt="标签页"><br><img src="/medias/loading.gif" data-original="https://pudongping.github.io/medias/sample/categories.png" alt="分类页"><br><img src="/medias/loading.gif" data-original="https://pudongping.github.io/medias/sample/archives.png" alt="归档页"><br><img src="/medias/loading.gif" data-original="https://pudongping.github.io/medias/sample/about-me.png" alt="关于我页"><br><img src="/medias/loading.gif" data-original="https://pudongping.github.io/medias/sample/contact.png" alt="留言板页"></p><h2 id="感谢支持"><a href="#感谢支持" class="headerlink" title="感谢支持"></a>感谢支持</h2><p>如果你觉得对你有所帮助,请帮忙给个 <code>Star</code>。<br>如果你想贡献一份力量,欢迎提交 <code>Pull Request</code>。</p><h2 id="赞赏捐助"><a href="#赞赏捐助" class="headerlink" title="赞赏捐助"></a>赞赏捐助</h2><p>有问题可以在文章最后评论区进行 <strong>留言和评论</strong> ，如果你喜欢我的博客，请博主喝一杯冰阔乐呀^_^ 😘</p><table>  <tbody><tr>    <td>        <img width="100" src="/medias/loading.gif" data-original="https://pudongping.github.io/medias/reward/alipay.png" alt="alipay">    </td>    <td>        <img width="100" src="/medias/loading.gif" data-original="https://pudongping.github.io/medias/reward/wechat.png" alt="wechat">    </td>  </tr></tbody></table><blockquote><p>😘 若有共鸣，留言足矣，若有赞赏，何以复加？ 🤞</p></blockquote><h2 id="LICENSE"><a href="#LICENSE" class="headerlink" title="LICENSE"></a>LICENSE</h2><p>MIT</p>]]></content>
      
      
      <categories>
          
          <category> 开源 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> GitHub </tag>
            
            <tag> 博客 </tag>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
